<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>长征部落格(CZ5H.COM)</title>
  
  <subtitle>本站点仅做备份，仍会稳定运行，但不再维护</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://old.cz5h.com/"/>
  <updated>2020-04-01T01:54:43.911Z</updated>
  <id>https://old.cz5h.com/</id>
  
  <author>
    <name>TZLoop</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>建站一个月来的站点概况</title>
    <link href="https://old.cz5h.com/article/ac94.html"/>
    <id>https://old.cz5h.com/article/ac94.html</id>
    <published>2020-03-31T22:00:00.000Z</published>
    <updated>2020-04-01T01:54:43.911Z</updated>
    
    <content type="html"><![CDATA[<p>终于告别三月，迎来了四月，在二月的最后一天，我把主题换成了Volantis，并且最近一段时间一直在对其进行美化和微调，现在是四月的第一天，整整一个月过去了，博客运行的如何呢？让我来借助统计分析来给大家康康。</p><a id="more"></a><h4 id="日均访客"><a href="#日均访客" class="headerlink" title="日均访客"></a><strong>日均访客</strong></h4><p>由下图可以看出，本博客还是个微型小站，每天基本也就几十个访客/IP，网页被浏览一百次左右（已排除本地调试干扰）。而且对于流量比较大的几天，其实都是知乎带来的流量。剩下的基本盘流量，基本是在 Hexo 水群时群友访问的，当然，现在不排除已经有部分老用户了，数据显示的是现在的访问量有 30% 是老用户/访客。</p><p>重要的一点是，从后面的分析可以得知，本博客站点的 <strong>UV : PV &lt; 1 : 3</strong>，个人认为这是十分正常的数据，如果 PV 是 UV 的四倍以上，那我一般认为就有水分了。</p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401015241.png"><br></fancybox><h4 id="总量和来源地区"><a href="#总量和来源地区" class="headerlink" title="总量和来源地区"></a><strong>总量和来源地区</strong></h4><p>可以看出，部署在 Coding 的新加坡机房，基本全球访问畅通，主要流量都来源于亚洲、欧洲和美国。这其中的国外访问量，我猜也基本是知乎带过来的，后面的对知乎的分析也会提及。对于中国的部分，我比较困惑的1是好像有大量访问的来源都是重叠在一起的，比如河南的访问量是最高的，我怀疑这些来源地区有运营商的根路由。关于具体来源的访客数，可以参照以下图示。</p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401010349.png"><br></fancybox><p><br><br>下面可以更直观的看出来访问来源地的总访问时长。可以看出大部分访问并不是蜻蜓点水，停留时间比未改版以前的旧博客要好了不少。</p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401014215.png"><br></fancybox><h4 id="高光时刻"><a href="#高光时刻" class="headerlink" title="高光时刻"></a><strong>高光时刻</strong></h4><p>下面是昨天下午的时候，博客被访问的情况，同时（五分钟内）被 8 人访问，可以称得上是高光时刻了。</p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200331163105.png"><br></fancybox><h4 id="来源分析"><a href="#来源分析" class="headerlink" title="来源分析"></a><strong>来源分析</strong></h4><p>下面可以看出来，主要的来源除了直接访问，就三个：知乎、十年之约和 Zonelyn.com。</p><ul><li>最后的域名是由于在知乎留的链接没及时换成新域名导致的访问跳转，到后面更换了就降下来了；</li><li>十年之约就是个博客汇总网站，贡献了小部分访问；</li><li>最后就是知乎了，可以说域名那部分也基本是知乎来的，可能直接的访问贡献了 570+ 的浏览。这基本算六分之一的访问量了。请记住蓝色折线的曲线，基本和知乎上的文章阅读量保持相同的趋势。</li></ul><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401011958.png"><br></fancybox><h4 id="受众最多的页面"><a href="#受众最多的页面" class="headerlink" title="受众最多的页面"></a><strong>受众最多的页面</strong></h4><p>非<a href="/csc/index.html">工具页</a>莫属了，这个小工具创建于三月初，此页面九成的访客来自于知乎的文章，下面顺带把知乎的近两个月的数据分析一下。由上面分析，剩下 100+ 的流量应该来自直接访问，因为这个链接被我放在主页顶部按钮中了，十分明显。</p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401012615.png"><br></fancybox><h4 id="知乎近俩月的分析"><a href="#知乎近俩月的分析" class="headerlink" title="知乎近俩月的分析"></a><strong>知乎近俩月的分析</strong></h4><p>自从二月中旬开始，我陆陆续续的整理了下自己去年的申请材料，放到了知乎上，还搞了个专栏，事实证明，我这次的无心插柳，已经产生不小的影响了。主要的几篇文章，收藏率超过 10%，并且专栏的关注人数已经四百多人，传播效应已经开始，预计在近一个月还会继续增多，因为前天又把剩余的几份材料整理了一下放到专栏了，申请正好用到。</p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401013613.png"><br></fancybox><p><br><br>对于这几篇介绍经验的文章，在前期（那时只有两篇）曾经一度异常火爆，每天的单篇收藏都能一两百，评论都有十几二十条。不过现在稳定了，基本上每天就几个提问，不会占据我太多时间。</p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401013222.png"><br></fancybox><p><br><br>目前的状态是专栏里的东西基本齐全了，我已经想不到还有什么能分享的了，借助这个专栏和这几篇文章，我也收获了几百关注，但就是没有爆款回答就是了（没精力回答那种细致的问题），赞同数还是少的可怜的，基本都来自专栏文章。后续的想法是，把我最近他们问我的问题和回答，大概得有两三百个问题（知乎文章和私信以及QQ上问的），搞一个问答系统，这样我就不用每次都回答了，构思中。</p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401013939.png"><br></fancybox><h4 id="结识朋友"><a href="#结识朋友" class="headerlink" title="结识朋友"></a><strong>结识朋友</strong></h4><p>在文章数据统计中的大约 400 条的留言里，大约有一半是我的回复。大概就是解答一下疑惑而已，而且大部分问题都可以被解决掉，但也有部分人加了我的QQ好友，为此，近一个月的时间里我收获了四十多位新朋友，当然最终有部分人问完问题之后还成了好朋友，里面又有几个是可能会来我这里的，到时候请我吃饭也说不定（偷笑。</p><p>总之，虽然是我给他们解答，但也非常感谢他们问我，他们基本上全都是很优秀的，除了一些TOP的大佬，还有些“明星”，比如里面竟然有一位是“<a href="https://www.baidu.com/s?wd=90%E5%90%8E%E9%A9%AC%E5%85%8B+%C2%B7%E5%90%90%E6%B8%A9&amp;rsv_spt=1&amp;rsv_iqid=0xb69b4625006da6cb&amp;issp=1&amp;f=8&amp;rsv_bp=0&amp;rsv_idx=2&amp;ie=utf-8&amp;rqlang=&amp;tn=baiduhome_pg&amp;ch=" target="_blank" rel="external nofollow noopener noreferrer">90后马克 ·吐温</a>”的老哥，我当时都惊到了，他们倒还是都很平易近人的，和他们交流起来也没什么，光环褪去，大家都是普通人。</p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200401023931.png"><br></fancybox><h4 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a><strong>写在最后</strong></h4><p>今天是愚人节，但却没心情愚人，还是希望疫情快点过去，好让正常的学习和生活重新回归。不过目前看来还是遥遥无期啊，什么时候出门大街上有人戴口罩了，疫情估计就快结束了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;终于告别三月，迎来了四月，在二月的最后一天，我把主题换成了Volantis，并且最近一段时间一直在对其进行美化和微调，现在是四月的第一天，整整一个月过去了，博客运行的如何呢？让我来借助统计分析来给大家康康。&lt;/p&gt;
    
    </summary>
    
      <category term="Daily_Life" scheme="https://old.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="总结" scheme="https://old.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="知乎" scheme="https://old.cz5h.com/tags/%E7%9F%A5%E4%B9%8E/"/>
    
      <category term="站点统计" scheme="https://old.cz5h.com/tags/%E7%AB%99%E7%82%B9%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>引入基于LCloud的页面访问统计</title>
    <link href="https://old.cz5h.com/article/4e53.html"/>
    <id>https://old.cz5h.com/article/4e53.html</id>
    <published>2020-03-24T23:00:00.000Z</published>
    <updated>2020-03-28T04:24:14.757Z</updated>
    
    <content type="html"><![CDATA[<p>由于本主题（Volantis）使用的 Valine 暂时仍然无法正常开启 Counter 页面计数，所以，在单一页面上展示出该页面的访问量就成了一个问题。不蒜子是个解决方式，但其加载巨慢而且仍属于个人维护、并不稳定。所以综合到最后，选择采用 LeanCloud 来完成这一功能。其主要思路就是访问页面时到对应的 LeanCloud 数据表中更新访问次数。不过暂时只能记录PV值。</p><a id="more"></a><h3 id="从零开始引入计数代码"><a href="#从零开始引入计数代码" class="headerlink" title="从零开始引入计数代码"></a><strong>从零开始引入计数代码</strong></h3><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a><strong>第一步</strong></h4><p>新增leancloud代码主体（lc_visitors.ejs），主要实现的是访问页面时leancloud访问数+1，并且返回该页面已有的访问量。</p><figure class="highlight javascript"><figcaption><span>~\volantis\_third-party\lc_visitors.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">&lt;!--由于主题包含valine.js，所以只引入av.js--&gt;</span><br><span class="line">&lt;script src=<span class="string">"//cdn1.lncld.net/static/js/2.5.0/av-min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> leancloud_app_id  = <span class="string">'WbLE88***********gzGzoHsz'</span>;  <span class="comment">//y=偷懒直接硬写了</span></span><br><span class="line">    <span class="keyword">var</span> leancloud_app_key = <span class="string">'ycqjmt***********RkrdO'</span>;</span><br><span class="line">    AV.init(&#123;</span><br><span class="line">        appId: leancloud_app_id,</span><br><span class="line">        appKey: leancloud_app_key</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> pageViewsLength = $(<span class="string">".pageViews"</span>).length;</span><br><span class="line">    <span class="keyword">var</span> isIndex = $(<span class="string">".pageViews"</span>).length &gt; <span class="number">1</span> ?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> Pageview = AV.Object.extend(<span class="string">"Pageview"</span>);</span><br><span class="line">        <span class="keyword">if</span>(isIndex)&#123;</span><br><span class="line">            $(<span class="string">".pageViews"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                showPageViewsNum($(<span class="keyword">this</span>), Pageview);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            addPageViewsNum($(<span class="string">".pageViews"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//仅显示阅读量</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showPageViewsNum</span>(<span class="params">ele, Pageview</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> id = ele.attr(<span class="string">'id'</span>).trim();</span><br><span class="line">        <span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">"Pageview"</span>);</span><br><span class="line">        query.equalTo(<span class="string">"post_id"</span>, id);</span><br><span class="line">        query.descending(<span class="string">'createdAt'</span>);</span><br><span class="line">        query.limit(<span class="number">1</span>);</span><br><span class="line">        query.find().then(<span class="function"><span class="keyword">function</span> (<span class="params">results</span>) </span>&#123;</span><br><span class="line">            $(<span class="built_in">document</span>.getElementById(id)).text(results &amp;&amp; results.length &gt; <span class="number">0</span>?  results[<span class="number">0</span>].get(<span class="string">"count"</span>) : <span class="string">'0'</span>);</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">             $(<span class="built_in">document</span>.getElementById(id)).text(<span class="string">'0'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//追加并显示阅读量</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">addPageViewsNum</span>(<span class="params">ele</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> id = ele.attr(<span class="string">'id'</span>).trim();</span><br><span class="line">        <span class="keyword">var</span> title = ele.attr(<span class="string">'data-flag-title'</span>).trim();</span><br><span class="line">        <span class="keyword">var</span> query = <span class="keyword">new</span> AV.Query(<span class="string">"Pageview"</span>);</span><br><span class="line">        query.equalTo(<span class="string">"post_id"</span>, id);</span><br><span class="line">        query.descending(<span class="string">'createdAt'</span>);</span><br><span class="line">        query.limit(<span class="number">1</span>);</span><br><span class="line">        query.find().then(<span class="function"><span class="keyword">function</span> (<span class="params">results</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (results.length == <span class="number">0</span>) &#123;</span><br><span class="line">               saveNewPageview(id, title);</span><br><span class="line">               <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> pageview = results[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">var</span> count = pageview.get(<span class="string">"count"</span>);</span><br><span class="line">            count++;</span><br><span class="line">            pageview.set(<span class="string">"count"</span>, count);</span><br><span class="line">            pageview.set(<span class="string">"title"</span>, title);</span><br><span class="line">            pageview.save().then(<span class="function"><span class="keyword">function</span> (<span class="params">pageview</span>) </span>&#123;</span><br><span class="line">                $(<span class="built_in">document</span>.getElementById(id)).text(count);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">            saveNewPageview(id, title);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">saveNewPageview</span>(<span class="params">id, title</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">var</span> Pageview = AV.Object.extend(<span class="string">"Pageview"</span>);</span><br><span class="line">       <span class="keyword">var</span> query = <span class="keyword">new</span> Pageview;</span><br><span class="line">       query.save(&#123;</span><br><span class="line">           post_id: id,</span><br><span class="line">           title: title,</span><br><span class="line">           count: <span class="number">1</span></span><br><span class="line">       &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params">pageview</span>) </span>&#123;</span><br><span class="line">           $(<span class="built_in">document</span>.getElementById(id)).text(pageview.count);</span><br><span class="line">       &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">       &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pageViewsLength)&#123; <span class="comment">//此处判断等于 1 在执行 可去除循环</span></span><br><span class="line">        showTime();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a><strong>第二步</strong></h4><p>将leancloud代码主体（lc_visitors.ejs）引入到原来的主题模板中，紧跟在jquery的后面。</p><figure class="highlight javascript"><figcaption><span>~\volantis\layout\_partial\scripts.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">&lt;%- js(theme.plugins.jquery) %&gt;</span><br><span class="line">&lt;!--引入代码--&gt;</span><br><span class="line">&lt;%- partial(<span class="string">'_third-party/lc_visitors'</span>) %&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.search &amp;&amp; theme.search.enable) &#123; %&gt;</span><br><span class="line">  ... ...</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><h4 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a><strong>第三步</strong></h4><p>在原页面中插入显示访问量的代码段，这里我直接紧跟在meta信息的阅读时长统计后面了。</p><figure class="highlight javascript"><figcaption><span>~\volantis\_meta\wordcount.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.plugins.wordcount) &#123; %&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-meta-item wordcount"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">'notlink'</span>&gt;</span><br><span class="line">      &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"&lt;%- theme.meta.wordcount.icon_wordcount %&gt;"</span> aria-hidden=<span class="string">"true"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">      &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">__</span>('<span class="attr">post.wordcount</span>', <span class="attr">wordcount</span>(<span class="attr">post.content</span>))%&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-meta-item readtime"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">'notlink'</span>&gt;</span><br><span class="line">      &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"&lt;%- theme.meta.wordcount.icon_duration %&gt;"</span> aria-hidden=<span class="string">"true"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">      &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">__</span>('<span class="attr">post.duration</span>', <span class="attr">min2read</span>(<span class="attr">post.content</span>))%&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">  &lt;!--添加显示访问量的代码（火焰图标+℃）--&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-meta-item readtime"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">'notlink'</span>&gt;</span><br><span class="line">      &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fas fa-fire"</span> aria-hidden=<span class="string">"true"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">      &lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"&lt;%= post.path %&gt;"</span> <span class="attr">class</span>=<span class="string">"pageViews"</span> <span class="attr">data-flag-title</span>=<span class="string">"&lt;%= post.title || post.path %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>以上只有部署后访问才有作用，在本地访问无效果。</p><h3 id="LeanCloud并发查询429错误"><a href="#LeanCloud并发查询429错误" class="headerlink" title="LeanCloud并发查询429错误"></a><strong>LeanCloud并发查询429错误</strong></h3><p>这是第二次遇到了，每次鼓捣LeanCloud都会出现这个问题，主要还是其对访问做了限制。错误主要出现在列表页面，因为会同时查询多篇文章的访问量，所以会导致触发429错误。</p><p><strong>我上次的解决方案：</strong><a href="https://www.cz5h.com/article/502d.html#%E5%9C%A8each%E5%BE%AA%E7%8E%AF%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%BB%B6%E6%97%B6%E6%93%8D%E4%BD%9C" target="_blank" rel="noopener">应对LeanCloud对于查询性能的限制</a></p><p>具体只需修改以下代码：</p><figure class="highlight javascript"><figcaption><span>~\volantis\_third-party\lc_visitors.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">&lt;!--循环间隔地控制查询的触发--&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(isIndex)&#123;</span><br><span class="line"><span class="keyword">var</span> cnt = $(<span class="string">".pageViews"</span>).length;</span><br><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">var</span> interval = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i &gt;= cnt) </span><br><span class="line">clearInterval(interval);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">showPageViewsNum($($(<span class="string">".pageViews"</span>)[i++]), AV.Object.extend(<span class="string">"Pageview"</span>));</span><br><span class="line">&#125;,<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">addPageViewsNum($(<span class="string">".pageViews"</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><p><strong>最终效果：</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200328050502.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于本主题（Volantis）使用的 Valine 暂时仍然无法正常开启 Counter 页面计数，所以，在单一页面上展示出该页面的访问量就成了一个问题。不蒜子是个解决方式，但其加载巨慢而且仍属于个人维护、并不稳定。所以综合到最后，选择采用 LeanCloud 来完成这一功能。其主要思路就是访问页面时到对应的 LeanCloud 数据表中更新访问次数。不过暂时只能记录PV值。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo相关" scheme="https://old.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="JavaScript" scheme="https://old.cz5h.com/tags/JavaScript/"/>
    
      <category term="JQuery" scheme="https://old.cz5h.com/tags/JQuery/"/>
    
      <category term="LeanCloud" scheme="https://old.cz5h.com/tags/LeanCloud/"/>
    
  </entry>
  
  <entry>
    <title>使用ValineAdmin完善评论系统</title>
    <link href="https://old.cz5h.com/article/269.html"/>
    <id>https://old.cz5h.com/article/269.html</id>
    <published>2020-03-20T23:00:00.000Z</published>
    <updated>2020-03-28T03:50:51.625Z</updated>
    
    <content type="html"><![CDATA[<p>在更换主题后的这一段时间里，博客运行良好，内容我也在不断完善，评论自然是继承原来的 Valine 也运行正常，但是，其实从上个主题开始，我就没有配置邮件的评论系统，所以对于评论的查看，我一直都是登陆 LeanCloud 后台来完成的。当然，默认的邮件提醒我是配置了的，但那个太简陋了，几乎没有使用价值。关于 ValineAdmin，群友早就配置过了，这次终于轮到自己来配一下了。</p><a id="more"></a><h3 id="为什么我现在才配"><a href="#为什么我现在才配" class="headerlink" title="为什么我现在才配"></a><strong>为什么我现在才配</strong></h3><p>因为我一直有个误区，那就是完成该配置需要在LeanCloud完成实名认证，但实际是不需要的！<strong>配置 ValineAdmin 是不需要 LeanCloud 实名认证的！</strong>（目前我仍然没有进行实名认证）</p><p>而且依托于Valine使用的应用/仓库即可，完全没有其他要求。</p><h3 id="添加-ValineAdmin-步骤"><a href="#添加-ValineAdmin-步骤" class="headerlink" title="添加 ValineAdmin 步骤"></a><strong>添加 ValineAdmin 步骤</strong></h3><p><strong>明确：</strong></p><p>这里用的是“添加”，也就是说，ValineAdmin 和原来的 Valine 完全可以共存，互不影响，不需要重新配置。</p><h4 id="1-遵循-Valine-官方教程完成-Valine-的配置"><a href="#1-遵循-Valine-官方教程完成-Valine-的配置" class="headerlink" title="1. 遵循 Valine 官方教程完成 Valine 的配置"></a><strong>1. 遵循 Valine 官方教程完成 Valine 的配置</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;valine.js.org&#x2F;quickstart.html</span><br></pre></td></tr></table></figure><h4 id="2-进入配置页面"><a href="#2-进入配置页面" class="headerlink" title="2. 进入配置页面"></a><strong>2. 进入配置页面</strong></h4><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325221024.png"><br><br></fancybox><h4 id="3-源码部署填写以下仓库"><a href="#3-源码部署填写以下仓库" class="headerlink" title="3. 源码部署填写以下仓库"></a><strong>3. 源码部署填写以下仓库</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;DesertsP&#x2F;Valine-Admin.git</span><br></pre></td></tr></table></figure><h4 id="4-填写16个自定义变量"><a href="#4-填写16个自定义变量" class="headerlink" title="4. 填写16个自定义变量"></a><strong>4. 填写16个自定义变量</strong></h4><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325223141.png"><br><br></fancybox><p>注意事项：</p><ul><li>务必确认已开通SMTP服务，以QQ为例需要发送短信来获得授权码；</li><li>SMTP_USER 和 SENDER_EMAIL 务必正确<fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325224019.png"><br></fancybox></li><li><strong>AKISMET_KEY</strong> 请到<a href="https://akismet.com/" target="_blank" rel="external nofollow noopener noreferrer">akismet.com</a>注册并选择<strong>免费版</strong>获得秘钥，否则在LeanCloud实例日志内会出现“Akismet key 异常!”的错误。</li></ul><h4 id="5-给博主通知的邮件模板"><a href="#5-给博主通知的邮件模板" class="headerlink" title="5. 给博主通知的邮件模板"></a><strong>5. 给博主通知的邮件模板</strong></h4><ul><li>BLOGGER_EMAIL 就是博主的邮箱；</li><li>MAIL_SUBJECT_ADMIN 邮件标题；</li><li>MAIL_TEMPLATE_ADMIN 邮件正文，注意变量位置，其他完全是HTML标签，可自己重写：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;"</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 0px;"</span>&gt;</span>您在<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;color: #12ADDB;"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>$&#123;SITE_NAME&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>上的文章有了新的评论<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>回复说：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span></span><br><span class="line">     $&#123;COMMENT&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span> 您可以点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"$&#123;POST_URL&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>查看回复的完整內容<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>评论页面为<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>$&#123;POST_URL&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325231410.png"><br><br></fancybox><h4 id="6-给评论者通知的邮件模板"><a href="#6-给评论者通知的邮件模板" class="headerlink" title="6. 给评论者通知的邮件模板"></a><strong>6. 给评论者通知的邮件模板</strong></h4><ul><li>MAIL_SUBJECT 邮件标题，注意措辞；</li><li>MAIL_TEMPLATE 邮件正文，需要美化！</li><li><strong>不同于站长的通知邮件，这是给评论者看的，必须花里胡哨，这是面子工程！</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-radius: 10px 10px 10px 10px;font-size:13px; color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;color:#257db9"</span>&gt;</span>您在<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;color:#257db9"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span>&gt;</span>「长征部落格」<span class="tag">&lt;/<span class="name">a</span>&gt;</span>上的留言有新回复啦！<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin:40px auto;width:90%"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>尊敬的 <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:#7777ff"</span>&gt;</span>$&#123;PARENT_NICK&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 您好，您曾在该页面/文章：<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span>&gt;</span>$&#123;POST_URL&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>发布了如下评论：<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span>&gt;</span>$&#123;PARENT_COMMENT&#125; <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>刚刚，用户 <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:#7777ff"</span>&gt;</span>$&#123;NICK&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 给您的回复如下：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">b</span>&gt;</span>$&#123;COMMENT&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>您可以点击 <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#d25353"</span> <span class="attr">href</span>=<span class="string">"$&#123;POST_URL&#125;#comments"</span>&gt;</span>查看回复的完整內容<span class="tag">&lt;/<span class="name">a</span>&gt;</span>，欢迎再次光临<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#257db9"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;<span class="attribute">text-decoration</span>:none&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">center</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">b</span>&gt;</span>由LeanCloud强力驱动<span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">b</span>&gt;</span>Copyright <span class="symbol">&amp;copy;</span> 2017-2020 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.cz5h.com"</span> <span class="attr">style</span>=<span class="string">"color:auto;"</span>&gt;</span>CZ5H.COM<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.cz5h.com"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"height:25px !important;"</span> <span class="attr">src</span>=<span class="string">"https://i.loli.net/2020/03/25/NbrlqVpzLBj8Xta.png"</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">center</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>收到邮件的评论者看到的效果：</strong></p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325231904.png"><br><br></fancybox><h4 id="7-变量填写完毕后部署"><a href="#7-变量填写完毕后部署" class="headerlink" title="7. 变量填写完毕后部署"></a><strong>7. 变量填写完毕后部署</strong></h4><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200325230147.png"><br><br></fancybox><h4 id="完成之后的问题"><a href="#完成之后的问题" class="headerlink" title="完成之后的问题"></a><strong>完成之后的问题</strong></h4><p>以上全部完成，基本可以实现比较友善的评论系统，但仍然存在一个大问题：</p><p><strong>LeanCloud 的强制休眠！</strong></p><p>该休眠会导致有很大概率用户在评论时实例是休眠状态，从而导致邮件提醒的不可触发，即以上整个邮件系统并不是 100% 可用，迫切需要一种比较好的休眠策略。（好像每天必须休眠6小时）</p><p><strong>可能的解决措施：</strong></p><p>使用定时器激活：<code>*/20 7-23 * * *</code></p><fancybox><br><img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200326233829.png"><br></fancybox><h3 id="附录，文字版"><a href="#附录，文字版" class="headerlink" title="附录，文字版"></a><strong>附录，文字版</strong></h3><p><strong>自定义环境变量：</strong></p><table><thead><tr><th style="text-align:left">NAME</th><th style="text-align:left">VALUE</th><th style="text-align:left">备注</th><th style="text-align:right">NO.</th></tr></thead><tbody><tr><td style="text-align:left"><code>SITE_NAME</code></td><td style="text-align:left"><code>长征部落格(cz5h.com)</code></td><td style="text-align:left"><code>基本信息</code></td><td style="text-align:right"><code>01</code></td></tr><tr><td style="text-align:left"><code>SITE_URL</code></td><td style="text-align:left"><code>https://www.cz5h.com</code></td><td style="text-align:left"><code>基本信息</code></td><td style="text-align:right"><code>02</code></td></tr><tr><td style="text-align:left"><code>SENDER_NAME</code></td><td style="text-align:left"><code>胖五</code></td><td style="text-align:left"><code>SMTP配置</code></td><td style="text-align:right"><code>03</code></td></tr><tr><td style="text-align:left"><code>SENDER_EMAIL</code></td><td style="text-align:left"><a href="mailto:`tian*****@qq.com" rel="external nofollow noopener noreferrer" target="_blank">`tian*****@qq.com</a>`</td><td style="text-align:left"><code>SMTP配置</code></td><td style="text-align:right"><code>04</code></td></tr><tr><td style="text-align:left"><code>SMTP_USER</code></td><td style="text-align:left"><a href="mailto:`tian*****@qq.com" rel="external nofollow noopener noreferrer" target="_blank">`tian*****@qq.com</a>`</td><td style="text-align:left"><code>SMTP配置</code></td><td style="text-align:right"><code>05</code></td></tr><tr><td style="text-align:left"><code>SMTP_PASS</code></td><td style="text-align:left"><code>rekyxiqasdo*****</code></td><td style="text-align:left"><code>SMTP配置</code></td><td style="text-align:right"><code>06</code></td></tr><tr><td style="text-align:left"><code>SMTP_SERVICE</code></td><td style="text-align:left"><code>QQ</code></td><td style="text-align:left"><code>SMTP配置</code></td><td style="text-align:right"><code>07</code></td></tr><tr><td style="text-align:left"><code>SMTP_HOST</code></td><td style="text-align:left"><code>smtp.qq.com</code></td><td style="text-align:left"><code>SMTP配置</code></td><td style="text-align:right"><code>08</code></td></tr><tr><td style="text-align:left"><code>SMTP_PORT</code></td><td style="text-align:left"><code>465</code></td><td style="text-align:left"><code>SMTP配置</code></td><td style="text-align:right"><code>09</code></td></tr><tr><td style="text-align:left"><code>SMTP_SECURE</code></td><td style="text-align:left"><code>true</code></td><td style="text-align:left"><code>SMTP配置</code></td><td style="text-align:right"><code>10</code></td></tr><tr><td style="text-align:left"><code>BLOGGER_EMAIL</code></td><td style="text-align:left"><a href="mailto:`tian*****@qq.com" rel="external nofollow noopener noreferrer" target="_blank">`tian*****@qq.com</a>`</td><td style="text-align:left"><code>站长通知</code></td><td style="text-align:right"><code>11</code></td></tr><tr><td style="text-align:left"><code>MAIL_SUBJECT_ADMIN</code></td><td style="text-align:left"><code>${SITE_NAME}上有新评论！</code></td><td style="text-align:left"><code>站长通知</code></td><td style="text-align:right"><code>12</code></td></tr><tr><td style="text-align:left"><code>MAIL_TEMPLATE_ADMIN</code></td><td style="text-align:left"><a href="#5-%E7%BB%99%E5%8D%9A%E4%B8%BB%E9%80%9A%E7%9F%A5%E7%9A%84%E9%82%AE%E4%BB%B6%E6%A8%A1%E6%9D%BF">详见第五段代码</a></td><td style="text-align:left"><code>站长通知</code></td><td style="text-align:right"><code>13</code></td></tr><tr><td style="text-align:left"><code>MAIL_SUBJECT</code></td><td style="text-align:left"><code>尊敬的『${PARENT_NICK}』，您在${SITE_NAME}上的评论刚刚收到了一条新回复！</code></td><td style="text-align:left"><code>用户通知</code></td><td style="text-align:right"><code>14</code></td></tr><tr><td style="text-align:left"><code>MAIL_TEMPLATE</code></td><td style="text-align:left"><a href="#6-%E7%BB%99%E8%AF%84%E8%AE%BA%E8%80%85%E9%80%9A%E7%9F%A5%E7%9A%84%E9%82%AE%E4%BB%B6%E6%A8%A1%E6%9D%BF">详见第六段代码</a></td><td style="text-align:left"><code>用户通知</code></td><td style="text-align:right"><code>15</code></td></tr><tr><td style="text-align:left"><code>AKISMET_KEY</code></td><td style="text-align:left"><code>4b02d0d*****</code></td><td style="text-align:left"><code>评论过滤</code></td><td style="text-align:right"><code>16</code></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在更换主题后的这一段时间里，博客运行良好，内容我也在不断完善，评论自然是继承原来的 Valine 也运行正常，但是，其实从上个主题开始，我就没有配置邮件的评论系统，所以对于评论的查看，我一直都是登陆 LeanCloud 后台来完成的。当然，默认的邮件提醒我是配置了的，但那个太简陋了，几乎没有使用价值。关于 ValineAdmin，群友早就配置过了，这次终于轮到自己来配一下了。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo相关" scheme="https://old.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Valine" scheme="https://old.cz5h.com/tags/Valine/"/>
    
      <category term="LeanCloud" scheme="https://old.cz5h.com/tags/LeanCloud/"/>
    
      <category term="评论系统" scheme="https://old.cz5h.com/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>在中文维基百科新建用户框</title>
    <link href="https://old.cz5h.com/article/27ff.html"/>
    <id>https://old.cz5h.com/article/27ff.html</id>
    <published>2020-03-17T23:00:00.000Z</published>
    <updated>2020-03-19T18:45:48.656Z</updated>
    
    <content type="html"><![CDATA[<p>目前中文维基百科仍然由于某些原因无法在大陆被直接访问，但仍然有很多用户喜欢使用Wikipedia，关于Wiki，我的理解就是个协作的知识系统，可以多人编辑并且多人维护，这也是维基百科实际的壮大方式，非常浅显的方式但却在当时引领了一种新的内容组织方式，所以维基百科也就不断壮大。中文维基百科和原本的英文维基并不是镜像，属于交集模式，目前有专门的翻译小组做互相翻译的工作。</p><a id="more"></a><p>由以上我们也可以得知，其实维基百科的模式“可以被复制”，但这是个市场占有问题，你可以自建自己的Wiki服务，但不太可能壮大至维基百科的规模，但也有例外，比如 <a href="https://zh.moegirl.org/zh-hant/Mainpage" target="_blank" rel="external nofollow noopener noreferrer">萌娘百科</a>，但很显然，这是和普通百科几乎无交集的专业百科。扯远了…</p><p>对于用户框，就是种维基百科内自定义的显示框，可以直观的以词条的方式来展示用户的各方面，主要用来描述<strong>用户</strong>的属性，可以包罗万象，因为维基百科允许自建用户框，由此，各式各样的用户框被用户创造出来，一般你可以找到你想要的用户框。</p><h3 id="搜索现有用户框方式一"><a href="#搜索现有用户框方式一" class="headerlink" title="搜索现有用户框方式一"></a><strong>搜索现有用户框方式一</strong></h3><p><strong>注意：以下若出现Wiki或者维基百科均特指“中文维基百科”</strong></p><p><strong>1. 使用[Category:]来当种子</strong></p><ul><li>这样可以直接找到一类人，然后通过类别可以打开该类别下的全部用户<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319011030.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319011237.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure></li></ul><p><strong>2. 拷贝该用户页面内的用户框</strong></p><ul><li>点击编辑找到对应内容即可，如果你偷懒，完全可以全部拷贝一份，然后再去掉你不需要的词条。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319033335.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure></li></ul><h3 id="搜索现有用户框方式二"><a href="#搜索现有用户框方式二" class="headerlink" title="搜索现有用户框方式二"></a><strong>搜索现有用户框方式二</strong></h3><p>通过<a href="https://zh.wikipedia.org/wiki/Category:%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E7%94%A8%E6%88%B7%E6%A1%86" target="_blank" rel="external nofollow noopener noreferrer">维基百科用户框</a>汇总类别进行搜寻。</p><p><br></p><hr><p><br></p><p>那么如果某个用户框并不存在怎么办呢？当然可以自建，因为现存的用户框都是不同的用户自建的，当然你也可以创建你自己想展示的用户框。</p><p>在创建的过程中，需要注意几点：</p><ul><li>图片资源必须是维基百科的内部资源，也就是说，你必须将图片传到维基百科上，使用维基百科的内链才可以。</li><li>创建后的用户框可以被全部用户所搜索到并使用</li></ul><h3 id="创建新用户框的简单版一"><a href="#创建新用户框的简单版一" class="headerlink" title="创建新用户框的简单版一"></a><strong>创建新用户框的简单版一</strong></h3><p><code>图片+文字模式</code></p><h4 id="学习简单例子“非吸烟者”"><a href="#学习简单例子“非吸烟者”" class="headerlink" title="学习简单例子“非吸烟者”"></a><strong>学习简单例子“非吸烟者”</strong></h4><p><a href="https://zh.wikipedia.org/wiki/Template:User_%E9%9D%9E%E5%90%B8%E7%85%99%E8%80%85" target="_blank" rel="external nofollow noopener noreferrer">Template:User 非吸烟者</a></p><p>以上是用户框的固定格式，Template:User 后跟空格，再跟用户框名称，填入搜索框就可以搜出该用户框详细内容：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319014000.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>点击编辑，即可看到这个用户框的源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Userbox</span><br><span class="line">|id&#x3D; [[File:No smoking symbol.svg|45px]]</span><br><span class="line">|id-c&#x3D; #FFFFFF</span><br><span class="line">|info&#x3D; 这个用户&#39;&#39;&#39;[[吸烟|&lt;span style&#x3D;&quot;color:#0000FF;&quot;&gt;不吸烟&lt;&#x2F;span&gt;]]&#39;&#39;&#39;。</span><br><span class="line">|info-c&#x3D; #789CFF</span><br><span class="line">|info-s&#x3D; 10</span><br><span class="line">|info-fc&#x3D; #2E2E2E</span><br><span class="line">|border-c&#x3D; #000000</span><br><span class="line">&#125;&#125;&lt;includeonly&gt;[[Category:不吸烟的维基人]]&lt;&#x2F;includeonly&gt;&lt;noinclude&gt;</span><br><span class="line">&#123;&#123;Documentation&#125;&#125;</span><br><span class="line">&lt;&#x2F;noinclude&gt;</span><br></pre></td></tr></table></figure><h4 id="代码解读"><a href="#代码解读" class="headerlink" title="代码解读"></a><strong>代码解读</strong></h4><p>现在我们就可以得出构建方法了，对应上述内容每条的意义如下。</p><p><code>File:No smoking symbol.svg|45px</code></p><p>左侧贴图和贴图大小，一般是45×45，这个图片必须是属于维基百科站内的图片链接，如果你要用自己的图片，可以先上传到维基百科上，但一般偷懒可以直接搜索维基百科内已有的图片，直接复制图片链接改为 File:XX 的形式即可。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319014827.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><code>id-c= #FFFFFF</code></p><p>左侧贴图图片的背景颜色（如果背景透明）。</p><p><code>info= AAA&#39;&#39;&#39;[[BBB|CCC]]&#39;&#39;&#39;</code></p><p>AAA：正常文本。</p><p>‘’’[[BBB|CCC]]’’’：这是维基百科的超链接语法，写BBB即表明超链接为 zh.wikipedia.org/wiki/BBB，竖线（|）之后的CCC是超链接的文本，可以写入html代码，比如用<span>控制文字的颜色。</span></p><p><code>info-c= #789CFF</code></p><p>右侧文本部分的背景颜色。</p><p><code>info-s= 10</code></p><p>右侧文本字体大小，一般是10。</p><p><code>info-fc= #2E2E2E</code></p><p>右侧普通文本字体颜色，使用html样式控制的字体的大小和颜色不受影响。</p><p><code>border-c= #000000</code></p><p>整个用户框的边框颜色，一般是黑色。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Userbox</span><br><span class="line">  ...</span><br><span class="line">&#125;&#125;</span><br><span class="line">&lt;includeonly&gt;</span><br><span class="line">    [[Category:不吸烟的维基人]]</span><br><span class="line">&lt;&#x2F;includeonly&gt;&lt;noinclude&gt;</span><br><span class="line">&#123;&#123;Documentation&#125;&#125;</span><br><span class="line">&lt;&#x2F;noinclude&gt;</span><br></pre></td></tr></table></figure><p>以上内容是整体的必要的用户框结构。</p><h4 id="以此新建用户框"><a href="#以此新建用户框" class="headerlink" title="以此新建用户框"></a><strong>以此新建用户框</strong></h4><p>比如我现在新建<strong>“这个用户喜欢使用Hexo搭建博客”</strong>这个用户框，基本步骤有以下几步：</p><ul><li><strong>1. 获取图片链接</strong></li></ul><p>懒得找，直接上传一张Hexo图片，按照引导上传即可。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319021539.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>选择本地上传即可，即只上传至中文维基。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319022139.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>上传成功我们就可以拿到文件链接了，此处文本链接就是 <a href="https://zh.wikipedia.org/wiki/File:Hexo-logo.png" target="_blank" rel="external nofollow noopener noreferrer">https://zh.wikipedia.org/wiki/File:Hexo-logo.png</a>，我们构造用户框只需要使用最后的那部分，即 File:Hexo-logo.png。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319022253.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><ul><li><strong>2. 新建用户框词条</strong></li></ul><p>比如我们的用户框名称就叫<strong>Template:User 静态博客</strong>，那么就直接去搜索框搜索，然后进入新建页面。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319023128.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><ul><li><strong>3. 构造代码</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Userbox</span><br><span class="line">|id&#x3D; [[File:Hexo-logo.png|45px]]</span><br><span class="line">|id-c&#x3D; #FFFFFF</span><br><span class="line">|info&#x3D; 这个用户喜欢使用&#39;&#39;&#39;[[Github|&lt;span style&#x3D;&quot;color:#0000FF;&quot;&gt;HEXO&lt;&#x2F;span&gt;]]&#39;&#39;&#39;搭建博客。</span><br><span class="line">|info-c&#x3D; #66ccff</span><br><span class="line">|info-s&#x3D; 10</span><br><span class="line">|info-fc&#x3D; #2E2E2E</span><br><span class="line">|border-c&#x3D; #000000</span><br><span class="line">&#125;&#125;&lt;includeonly&gt;[[Category:使用hexo的维基人]]&lt;&#x2F;includeonly&gt;&lt;noinclude&gt;</span><br><span class="line">&#123;&#123;Documentation&#125;&#125;</span><br><span class="line">&lt;&#x2F;noinclude&gt;</span><br></pre></td></tr></table></figure><p>注意：以上内容的Category并非我新建的，这是已有的分类，当然也可以新建分类，但最好的选择是讲我们新建的用户框归入其他已有分类，这样可以使更多人发现我们的用户框。</p><ul><li><strong>4. 填入词条新建页面</strong></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319033547.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>预览无误，点击发布即可获得最终的新鲜的用户框：<a href="https://zh.wikipedia.org/wiki/Template:User_%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2" target="_blank" rel="external nofollow noopener noreferrer">Template:User_静态博客</a>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200319023802.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><ul><li><strong>5. 使用</strong></li></ul><p>在所有的Wiki页面中，使用  {{User 静态博客}}  即可插入上述用户框了！</p><h3 id="创建新用户框的简单版二"><a href="#创建新用户框的简单版二" class="headerlink" title="创建新用户框的简单版二"></a><strong>创建新用户框的简单版二</strong></h3><p><strong>文字+文字模式</strong> </p><p>挖坑。</p><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a><strong>进阶</strong></h3><p>挖坑。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目前中文维基百科仍然由于某些原因无法在大陆被直接访问，但仍然有很多用户喜欢使用Wikipedia，关于Wiki，我的理解就是个协作的知识系统，可以多人编辑并且多人维护，这也是维基百科实际的壮大方式，非常浅显的方式但却在当时引领了一种新的内容组织方式，所以维基百科也就不断壮大。中文维基百科和原本的英文维基并不是镜像，属于交集模式，目前有专门的翻译小组做互相翻译的工作。&lt;/p&gt;
    
    </summary>
    
      <category term="Daily_Life" scheme="https://old.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="中文维基" scheme="https://old.cz5h.com/tags/%E4%B8%AD%E6%96%87%E7%BB%B4%E5%9F%BA/"/>
    
      <category term="花里胡哨" scheme="https://old.cz5h.com/tags/%E8%8A%B1%E9%87%8C%E8%83%A1%E5%93%A8/"/>
    
      <category term="编程" scheme="https://old.cz5h.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>船新版本的个人博客</title>
    <link href="https://old.cz5h.com/article/6f83.html"/>
    <id>https://old.cz5h.com/article/6f83.html</id>
    <published>2020-02-26T23:00:00.000Z</published>
    <updated>2020-03-26T00:17:15.094Z</updated>
    
    <content type="html"><![CDATA[<p>终于花了些时间，把博客整体迁移到新主题Volantis了，原主题Indigo我还是非常喜欢，但感觉有点朴素，自己又瞎改主题改到无法更新最新版本，所以换个好看的主题就成了待办事项之一。</p><a id="more"></a><p>此外，原先的博客一直托管在Github Pages，在百度是0索引的，这就意味着国内搜索引擎是无法找到我的，所以换到Coding托管，也成了待办事项之一；最后，我也一直在物色好的域名，现在都快成米商了，不过还是找到了一个不错的域名，更新解析，也是待办事项之一。最终，昨天把三件事全做了，在这里记录下，顺便说一下博客一般需要的一些辅助显示模块。</p><h4 id="使用Volantis主题"><a href="#使用Volantis主题" class="headerlink" title="使用Volantis主题"></a><strong>使用Volantis主题</strong></h4><p>注意：我这里并不是单纯的“更新”，而是保留原站点的前提下用一个新主题而已，因为 Indigo 主题确实非常好用，并且自己也对其做了很多改动，已经比较稳定了，没必要丢弃不用，所以后面我用了二级域名 old.cz5h.com 来解析到原来的 Github 空间，对于新主题，我也只是把_post内的文章搞过来了而已，其他的小模块还需要慢慢完善，至于有哪些小模块，在文章最后会详细说明。</p><p>这次我换的主题是 Volantis，貌似是原先的 Materi-X （可能拼错了）主题，本来想用 butterfly 的，但是 bf 还是有点花哨，最终我感觉目前的这个主题比较不错，而且是有主页的主题哦！</p><p>新建个博客文件夹，hexo init，然后 clone 新主题，然后把 _post 复制过来，然后安装必要的主题插件，然后安装 deploy 插件，最后开始配置 yml 站点配置文件和主题配置文件（两个）：</p><ul><li>比对原站点的配置文件先修改一部分；</li><li>看到无关链接（主题自带的链接）或文字，要么注释掉要么改成你自己的；</li><li>修改 yml 配置文件后要 hexo s 本地测试下，如此反复；</li><li>填写一些和旧站点不一样的配置项，比如 deploy。</li></ul><p>完成之后，还要注意搜索并替换一下 post 文章文件夹中的旧域名，现在要统一换成新域名，虽然不换也可以访问到（做了重定向），但既然准备用这个新域名了，那就得做好逐渐清退旧域名的措施，首先就是文章内的链接内容。旧站点由于用 old.cz5h.com 来绑定了，所以也要把旧站点内（notepad++全局搜索替换）的 zonelyn.com 全部换成 old.cz5h.com。最终的解析托管示意图如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200228170857.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="换域名和旧域名重定向"><a href="#换域名和旧域名重定向" class="headerlink" title="换域名和旧域名重定向"></a><strong>换域名和旧域名重定向</strong></h4><p>目前手里的域名有六个，时间分先后，要是有看上的，欢迎联系我啊。</p><ul><li>whereareyou.site（301-&gt;zonelyn-&gt;cz5h）</li><li>z-tian.cn（未解析）</li><li>tzloop.cn（未解析）</li><li>zonelyn.com（301-&gt;cz5h）</li><li>cxmoe.com（挂了篇文章）</li><li>cz5h.com（主站）</li></ul><p>只用Github/Coding托管如何完成301重定向呢？答案是借助Pages服务+404页面，具体可以参见我之前写的 <a href="https://cz5h.com/article/2019-8-4%20Github%E6%89%98%E7%AE%A1%E7%AB%99%E7%82%B9%E7%9A%84%E5%9F%9F%E5%90%8D%E6%9B%B4%E6%8D%A2.html" target="_blank" rel="noopener">Github托管站点的域名更换</a>。</p><p>为了偷懒，我并没有更新最老的 whereareyou.site 这个域名的重定向，它还是被重定向到 zonelyn.com，因为我给 zonelyn 做了重定向，所以，最终连续两跳，whereareyou.site 还是能重定向到 cz5h.com。是的，你没猜错，两个域名重定向，我注册了两个Github小号。还有，虽然是从Github-&gt;重定向到了Coding的空间，但我实际体验完全感觉不出来，果然是单向墙。</p><p>Coding的域名绑定就很简单了，解析个A记录和WWW记录就OK了。</p><p><strong>二级域名 old.cz5h.com ：</strong>本来是不想动原来的域名的（因为用了新域名），但想了一下还是正规一点吧，而且也方便日后管理，所以就把 Github 托管的旧版本绑定了新域名的二级域名，最终域名的解析如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200227185839.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>完成之后还要去 Github Pages 修改绑定的域名，同时注意需要将之前旧域名的解析一并删除，否则 Pages 服务会提醒报错的。</p><h4 id="博客模块之我见"><a href="#博客模块之我见" class="headerlink" title="博客模块之我见"></a><strong>博客模块之我见</strong></h4><p>本次也算是从零开始新建一个博客站点，当然对博客的美化也要从零开始，那么到底需要改动什么呢，简单写一下我的想法。（基本仅针对目前的Volantis主题）</p><h5 id="主题色调"><a href="#主题色调" class="headerlink" title="主题色调"></a><strong>主题色调</strong></h5><ul><li>背景图：深色调还是浅色调，决定着前景标签内容的浅色调还是深色调。鄙人非常喜欢深色调的背景色，更可以突出文章主体的文字部分。</li><li>各种语法的颜色搭配：例如 tab 缩进的 code 段落，不同的主题样式肯定不同，我又很喜欢用这种方式写，所以要修改下对应的颜色搭配。</li><li>滚动条的样式：又宽又粗的滚动条实在是太丑了，必须要换掉。</li><li>整个页面 content 的宽度：目前很多主题的文章页宽度很窄，在台式机上看着更严重，所以一定要调宽一些，还更利于图片的展示。</li></ul><h5 id="访问统计"><a href="#访问统计" class="headerlink" title="访问统计"></a><strong>访问统计</strong></h5><p>这是一个重要的功能，但比较好加入。一般添加个不蒜子就可以了，但我喜欢追踪自己网站的访客，所以，我添加了 Google Analyse、百度统计、CNZZ的统计，并且加入了 revolvermaps 可视化小插件来做实时显示。</p><p><strong>其他：</strong>注意SEO用的sitemap需要重新生成，还有robots.txt也要重新搞。</p><h5 id="Posts属性类显示"><a href="#Posts属性类显示" class="headerlink" title="Posts属性类显示"></a><strong>Posts属性类显示</strong></h5><p>博客必备的一个部分，这个包括标签云、分类统计等，可以方便的放在这个主题右侧的插件部分。</p><h5 id="文章页的署名信息"><a href="#文章页的署名信息" class="headerlink" title="文章页的署名信息"></a><strong>文章页的署名信息</strong></h5><p>这个要根据自己的调整，最好要包含这部分。</p><h5 id="评论部分"><a href="#评论部分" class="headerlink" title="评论部分"></a><strong>评论部分</strong></h5><p>思来想后，还是决定采用Valine做评论吧，Gitalk得登陆啊，可有人连Github是什么都不知道，我的博客又不是正经的技术博客，所以…Valine真香。</p><h5 id="站点的头脚"><a href="#站点的头脚" class="headerlink" title="站点的头脚"></a><strong>站点的头脚</strong></h5><p><strong>前置index：</strong>虽然不是纯首页，但基本起到首页的作用了，而且效果还不错，准备把一些社交链接放在首页上。</p><p><strong>Header：</strong>这里对应旧站点的自定义页面，由于原先旧站点有些主题的自定义语法，所以直接拿过来会解析出错误，得花时间重新写一下这些自定义页面。</p><p><strong>Footer：</strong>由于用了深色背景，目前的页脚全黑的基本看不到东西，准备还是类似旧站点那样，在页脚写上基本信息，以及友链的链接，然后放上<strong>访问人数统计</strong>和<strong>全站文字统计</strong>的文本。</p><h5 id="SEO完善"><a href="#SEO完善" class="headerlink" title="SEO完善"></a><strong>SEO完善</strong></h5><p>默认的新建站点是没有这些SEO相关的文件的，需要借助第三方插件在渲染时生成 sitemap.xml 和 baidu_sitemap.xml，然后还需要自己新建一个 robots.txt 文件，因为是 hexo 站点，所以在生成xml文件之后，这个 robots.txt 文件的内容基本上是固定的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: &#x2F;</span><br><span class="line">Allow: &#x2F;archives&#x2F;</span><br><span class="line">Allow: &#x2F;categories&#x2F;</span><br><span class="line">Allow: &#x2F;tags&#x2F;</span><br><span class="line">Allow: &#x2F;about&#x2F;</span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;js&#x2F;</span><br><span class="line">Disallow: &#x2F;css&#x2F;</span><br><span class="line">Disallow: &#x2F;fonts&#x2F;</span><br><span class="line">Disallow: &#x2F;fancybox&#x2F;</span><br><span class="line">Sitemap: https:&#x2F;&#x2F;你的域名&#x2F;sitemap.xml</span><br><span class="line">Sitemap: https:&#x2F;&#x2F;你的域名&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure><p>注意：以上文件放在 hexo 的source文件夹或者主题的source文件夹里都可以；另外，这里如果有自定义的路径，比如 /friends/（友链），也需要将其加入进去（添加新的 Allow 项），否则蜘蛛是不能爬到相关页面的。</p><h5 id="恢复卡片的tags"><a href="#恢复卡片的tags" class="headerlink" title="恢复卡片的tags"></a><strong>恢复卡片的tags</strong></h5><p>这是后续的改进了，现在的首页文章卡片没有标签信息，但我想把标签信息加上，这样会更加详细一点，初步想法就是在卡片的底部加个footer，然后把当前文章的tags读出来放到上面，再把footer贴到原来的卡片最下面。</p><h5 id="进阶的功能"><a href="#进阶的功能" class="headerlink" title="进阶的功能"></a><strong>进阶的功能</strong></h5><p><strong>相关文章：</strong>貌似这个主题支持。<br><strong>热门文章：</strong>调用统计的接口把。</p><p>还有很多功能可能主题内就带着，毕竟只接触了这个主题一天而已，后续慢慢探索，初步的感觉是这个主题比较完善，支持非常多的扩展功能（已经写好了），而且貌似作者还在更新这个项目。</p><h4 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a><strong>写在最后</strong></h4><p>这也算半个新的开始吧，目前自己已经在博客里写了不少东西了，原先的主题也看厌烦了，本来是想用 typecho 的，但想了下还得备案，所以干脆不用了，还是用回老本行 hexo 吧，而且现在各种操作非常熟练了，写作模式也基本固定了（自从前几天确定用Github+jsdeliver当图床后）。搬回 coding 后，以后在百度就能见到我了，而且我在外网访问 coding 的站点没任何卡顿，希望 coding 的 pages 服务比以前提升了，可不要让我失望啊！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;终于花了些时间，把博客整体迁移到新主题Volantis了，原主题Indigo我还是非常喜欢，但感觉有点朴素，自己又瞎改主题改到无法更新最新版本，所以换个好看的主题就成了待办事项之一。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo相关" scheme="https://old.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Hexo" scheme="https://old.cz5h.com/tags/Hexo/"/>
    
      <category term="Indigo" scheme="https://old.cz5h.com/tags/Indigo/"/>
    
      <category term="Volantis" scheme="https://old.cz5h.com/tags/Volantis/"/>
    
      <category term="重定向" scheme="https://old.cz5h.com/tags/%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>优雅的备份博客内的外链图片</title>
    <link href="https://old.cz5h.com/article/509f.html"/>
    <id>https://old.cz5h.com/article/509f.html</id>
    <published>2020-02-24T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.578Z</updated>
    
    <content type="html"><![CDATA[<p>这是我早就想做的一件事情了，但没想到不得不做这件事的这一天这么快就来临了。其实从一开始，我就对免费图床并不放心，在国内一直使用的是付费的作业部落的图片存储（阿里云的对象存储），但到外面以后作业部落已经实质性歇菜了，只得找其他的替代产品，这时我才真正意义上的接触并使用到了免费图床。先后用过sm.ms、微博图床、即刻图床（聚合性质的单一图床），直到有一天…</p><a id="more"></a><p>我的几篇文章的图片打不开了！于此，我是非常惊恐的，因为这些图片往往是信手拈来，上传即丢，本地并没有备份，这样显示突然显示不出来，你让我怎么找补，太难受了，遂将备份图片的事情提上日程。</p><h4 id="备份Hexo博客的全部图片"><a href="#备份Hexo博客的全部图片" class="headerlink" title="备份Hexo博客的全部图片"></a>备份Hexo博客的全部图片</h4><p>这是我感觉还算可以的、比较傻瓜式的一种解决方案。不需要安装任何软件和环境，全部借助Chrome插件完成。思路简单来说，就是先把全部的博客页面打开，然后使用图片抓取插件把打开的页面中的图片全部下载下来。很疯狂吧！</p><ul><li><a href="https://chrome.google.com/webstore/detail/linkclump/lfpjkncokllnfokkgpkobnkbkmelfefj" target="_blank" rel="external nofollow noopener noreferrer"><strong>Linkclump</strong></a></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5e55a9f96127cc0713bd2f39.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>这是个批量打开链接的插件，可以在页面上框选，会自动识别网页链接（很棒的一点是可以过滤掉中转页面），然后同时在Chrome中打开，接下来就要用到图片抓取插件了。</p><ul><li><a href="https://chrome.google.com/webstore/detail/fatkun-batch-download-ima/nnjjahlikiabnchcpehcpkdeckfgnohf" target="_blank" rel="external nofollow noopener noreferrer"><strong>Fatkun图片批量下载</strong></a></li></ul><p><img src="https://pic.imgdb.cn/item/5e55b0176127cc0713be59d0.jpg" alt></p><p>这个插件可以直接搜刮浏览器内打开的页面内的全部图片，然后我们就可以下载这些图片了，注意这个工具可以按照像素值过滤图片，这样对一些很小的图片（比如恶心的百度统计的加载图hm）就可以排除在外。下载后的图片被放置在以页面命名的文件夹内，还是比较人性化的。</p><p>总结来说，其实上述操作相当于冷备份，可能我并不会用到这些图片，但当某些外链坏掉时，那么我就有本地备份可以替换，不然就像我这次一样，图片丢了找都找不回来了。</p><h4 id="找补缺损图片"><a href="#找补缺损图片" class="headerlink" title="找补缺损图片"></a>找补缺损图片</h4><p>这真的很难，我只能有部分重新截图了，还有小部分是存在微博相册的，这部分图片还在相册里，只是微博防盗链了。丢的那部分基本是用即刻图床传到阿里云的图床上了，但目前那批图片全挂了，涉及的文章可能有五六篇。</p><h4 id="目前使用的稳妥的方案"><a href="#目前使用的稳妥的方案" class="headerlink" title="目前使用的稳妥的方案"></a><strong>目前使用的稳妥的方案</strong></h4><p>目前所使用的是一款聚合图床，这个不同于“聚合性质的单一图床”，而应该是“分发多地的聚合图床”，即其会将图片分发到多个图床之上（没错，还是多个免费图床），这样虽然单一图床有挂掉的风险，但三个（其目前的分发数量）图床同时挂掉的风险基本很小，而且其还提供上传记录来允许用户进行追溯，当然也可以定期输出备份。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5e55a55d6127cc0713bcc207.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>我不确定这个图床的存活时间，但理论上其不是个图床，只是个聚合索引平台，所以无论他倒不倒闭，只要把我上传历史的列表给我保留就OK。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5e55aa5c6127cc0713bd38c3.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>使用痛点：</strong>图片会压缩，上传慢，仍然看不到图片的原文件。</p><h4 id="GitHub-jsDelivr-PicGo"><a href="#GitHub-jsDelivr-PicGo" class="headerlink" title="GitHub+jsDelivr+PicGo"></a><strong>GitHub+jsDelivr+PicGo</strong></h4><p>先马一个<a href="https://segmentfault.com/a/1190000020240864" target="_blank" rel="external nofollow noopener noreferrer">教程</a>。</p><p>貌似这是我所追求的终极方案：我可以忍受图片挂掉（jsDelivr过滤了），但同时全部图片在GitHub的仓库里，图片的安全性不用担心，备份+外链一举两得。</p><p><strong>但目前我的使用痛点是：</strong>PicGo貌似只能以桌面客户端的形式进行配置，然后才能进行图床的搭建，但我目前用了两台台式+一台笔记本三个电脑，且Linux和Windows混用，或者说，我想在任何一台机器上不用配置就完成上传，显然目前好像是实现不了的。所以暂时观望一下，不过仍然是未来的尝试方向，Githuh仓库存图片太适合我这种小博客了，图不多，又安全。</p><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a><strong>后记</strong></h4><p>不用纠结了，直接用上了，花了十几分钟就配置好了，好像很简单。具体步骤如下：</p><ul><li>下载安装<a href="https://github.com/Molunerfinn/picgo/releases" target="_blank" rel="external nofollow noopener noreferrer">PicGO</a>，</li><li>新建个Github仓库，专门用来存储图片，</li><li>新建token，在 Setting/Developer Setting 里，<br><img src="https://pic.imgdb.cn/item/5e55b5486127cc0713befdcf.jpg" alt></li><li>打开安装好的PicGo，选择上传图床为 Github图床，然后进行配置，<br><img src="https://pic.imgdb.cn/item/5e55b7e46127cc0713bf3e58.jpg" alt></li><li>完毕。</li></ul><p>实验了一下，简直不要太好用，海外党的福音啊，上传非常快，而且比较易用，最关键的是不压缩！！没有质量损失！！下面这张图片就是放在Github图床的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/20200226013518.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>感受一下 Github + jsDelivr 的绝佳体验吧</strong></p><p>下图就是放在Github的19.8M的长幅：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/IMG_20191026_141350-2.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>第二个例子：带文字的QQ截图：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200226014944.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>放在我用的聚合图床的体验如下</strong></p><p>所使用的图床给他压缩成了3.9M：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5e55ba166127cc0713bf7272.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>第二个例子：带文字的QQ截图：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5e55c0a46127cc0713c0447e.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>直观的比较（肉眼其实看不太出来，但某些图片差异会比较明显）</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200226020006.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>总结：从今天开始，Github + jsDelivr 就是我的御用图床了，除非它俩死一个，否则我不会再换图床了！还有个漫长的工作，就是把图片全部迁移到 Github 上！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我早就想做的一件事情了，但没想到不得不做这件事的这一天这么快就来临了。其实从一开始，我就对免费图床并不放心，在国内一直使用的是付费的作业部落的图片存储（阿里云的对象存储），但到外面以后作业部落已经实质性歇菜了，只得找其他的替代产品，这时我才真正意义上的接触并使用到了免费图床。先后用过sm.ms、微博图床、即刻图床（聚合性质的单一图床），直到有一天…&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo相关" scheme="https://old.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Hexo" scheme="https://old.cz5h.com/tags/Hexo/"/>
    
      <category term="图床" scheme="https://old.cz5h.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="Chrome插件" scheme="https://old.cz5h.com/tags/Chrome%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>构建CUDA项目二周目翻车记录</title>
    <link href="https://old.cz5h.com/article/c85a.html"/>
    <id>https://old.cz5h.com/article/c85a.html</id>
    <published>2020-02-21T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.576Z</updated>
    
    <content type="html"><![CDATA[<p>继上次的翻车之后，我算是有了些经验，同时机器上也装了些共通的依赖库，由于上项目最后的错误解决不了就放那里了，开始搞一下这个项目，这和上一个项目的目的是一样的，都是借助GPU进行加速计算的可视化工具，但此项目是用netbeans开发的，在文件结构上要比上一个复杂的多，而且采用的是CMakeList.txt的方式，应该算比较正式的C++项目了吧。</p><a id="more"></a><h4 id="题外话：nvcc和nvidia-smi显示的cuda版本不一样"><a href="#题外话：nvcc和nvidia-smi显示的cuda版本不一样" class="headerlink" title="题外话：nvcc和nvidia-smi显示的cuda版本不一样"></a><strong>题外话：nvcc和nvidia-smi显示的cuda版本不一样</strong></h4><p>这个问题最终被确定和程序运行的错误无关，但碰巧发现了，总觉得不一样怪怪的，而不一样的原因其实很简单，可以理解为一个版本是程序用的软件运行的Cuda版本，而另一个是开发用的Cuda版本。更多内容可以参见<a href="https://xbuba.com/questions/53422407" target="_blank" rel="external nofollow noopener noreferrer">这个帖子</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5e554c3b6127cc0713b34bbb.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>具体来说，就是确保Cuda安装后添加PATH：添加Cuda Bin的$PATH（即将以下行添加到您的~/.bashrc）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;NsightCompute-2019.1$&#123;PATH:+:$&#123;PATH&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>注意：确保首先存在以下两个路径：/usr/local/cuda-10.1/bin和/usr/local/cuda-10.1/NsightCompute-2019.1（NsightCompute路径的结尾可能略有不同，具体取决于安装的Nsight计算版本。<br>然后，更新$LD_LIBRARY_PATH（即添加以下行，在~/bashrc内）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;lib64\$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>在此之后，两者nvcc和nvidia-smi（或nvtop）就应该打印相同版本的Cuda了</p><h4 id="尝试运行项目"><a href="#尝试运行项目" class="headerlink" title="尝试运行项目"></a><strong>尝试运行项目</strong></h4><p>构建这个项目，首先需要新建个cmake文件夹，然后进入该文件夹内，执行cmake命令，结果报错了，找不到Cuda（found 9.1），隐约感到这不是简单的路径问题，后来得到证实，这是在编译时没有指定版本导致的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5e554c476127cc0713b34e06.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>解决方案：在cmake时添加编译参数（参见<a href="https://groups.google.com/forum/#!topic/torch7/QkRk8eKAJLw" target="_blank" rel="external nofollow noopener noreferrer">这里</a>），如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -DCUDA_TOOLKIT_ROOT_DIR&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.2</span><br></pre></td></tr></table></figure><h4 id="常规的配置修改"><a href="#常规的配置修改" class="headerlink" title="常规的配置修改"></a><strong>常规的配置修改</strong></h4><p>修改arch参数，改为compute_50，由于是CMakeList.txt构建的，所以这次在这里修改。之后，修改对应的模块路径，修改简单的引用错误。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5e554c4a6127cc0713b34eae.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="make系列错误"><a href="#make系列错误" class="headerlink" title="make系列错误"></a><strong>make系列错误</strong></h4><p>做完以上操作后，cmake命令就基本没问题了，这里我们需要继续make，但是make到[66%]左右时会出现错误如下，我以为又是什么难以解决的问题，结果在make之前clean一下就ok了。</p><p>注意make之前一定要make -clean，不然会出错，详见<a href="https://stackoverflow.com/questions/38659115/make-fails-with-error-cannot-convert-stdistream-aka-stdbasic-istreamchar/48648056" target="_blank" rel="external nofollow noopener noreferrer">这里</a>，修改玩上述报错后会有新错误：</p><p><img src="https://pic.imgdb.cn/item/5e554c4d6127cc0713b34f27.jpg" alt></p><h4 id="链接时的recompile-with-fPTC"><a href="#链接时的recompile-with-fPTC" class="headerlink" title="链接时的recompile with -fPTC"></a><strong>链接时的recompile with -fPTC</strong></h4><p><img src="https://pic.imgdb.cn/item/5e554c576127cc0713b350f3.jpg" alt></p><p>可以看到已经编译完成了，但链接linking出错，在此，我推测是原有的静态链接文件（源代码带的）并不能在我的机器上正常工作，我需要重新编译生成一遍，之后我重新编译了ANN、Wordcloud、Cubu模块，发现大部分错误消失了，但又出现新错误，如下：</p><h4 id="恼人的Cubu模块"><a href="#恼人的Cubu模块" class="headerlink" title="恼人的Cubu模块"></a><strong>恼人的Cubu模块</strong></h4><p><img src="https://pic.imgdb.cn/item/5e554c616127cc0713b35299.jpg" alt></p><p>定位：graphdrawing 有问题，进而定位到Cubu，非常怀疑是libcubu.a这个静态链接库有问题，但我重新编译后生成的新文件去替换它之后，会出现以下错误，</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5e554c656127cc0713b35339.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>怀疑是Cubu的版本不对应，编译都不通过。用原来Cubu的include文件夹+新的libcubu.a，错误依旧：</p><p><img src="https://pic.imgdb.cn/item/5e554c616127cc0713b35299.jpg" alt></p><p>用新的include文件夹＋原来的libcubu.a，错误又会复现。基本确定是cubu重新编译的问题。原来的libcubu.a需要重新编译，但我现在编译出的静态链接文件libcubu.ａ又和原先的Cubu的版本好像不一样，所以导致上述错误。</p><p><strong>卡壳了。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继上次的翻车之后，我算是有了些经验，同时机器上也装了些共通的依赖库，由于上项目最后的错误解决不了就放那里了，开始搞一下这个项目，这和上一个项目的目的是一样的，都是借助GPU进行加速计算的可视化工具，但此项目是用netbeans开发的，在文件结构上要比上一个复杂的多，而且采用的是CMakeList.txt的方式，应该算比较正式的C++项目了吧。&lt;/p&gt;
    
    </summary>
    
      <category term="研究方向" scheme="https://old.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="C/C++" scheme="https://old.cz5h.com/tags/C-C/"/>
    
      <category term="调试" scheme="https://old.cz5h.com/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="Cuda" scheme="https://old.cz5h.com/tags/Cuda/"/>
    
      <category term="CMakeList" scheme="https://old.cz5h.com/tags/CMakeList/"/>
    
  </entry>
  
  <entry>
    <title>重新编译运行C++/Cuda混编项目</title>
    <link href="https://old.cz5h.com/article/38ca.html"/>
    <id>https://old.cz5h.com/article/38ca.html</id>
    <published>2020-02-12T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.574Z</updated>
    
    <content type="html"><![CDATA[<p>由于需要，最近得重新运行一个CUDA项目，但我苦于没有经验，只能从编译开始入门一下，不过还是不算难的，难的是原项目代码不保证质量，而且有若干无关文件，且运行环境未知、各模块的运行版本也不是很清楚，导致搞了一大堆操作（应该是正确的）最后却没跑起来，是的，这是一篇翻车笔记。</p><a id="more"></a><h4 id="从最简单的CMAKE示例开始"><a href="#从最简单的CMAKE示例开始" class="headerlink" title="从最简单的CMAKE示例开始"></a><strong>从最简单的CMAKE示例开始</strong></h4><p>为了打印文件结构，我们要先装一个tree来做准备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1$ sudo apt install tree</span><br></pre></td></tr></table></figure><p>当前的例子的文件结构如下所示，这不是最简单的形式，但却是最接近项目结构的形式。具体的文件内容在<a href="https://blog.csdn.net/whahu1989/article/details/82078563" target="_blank" rel="external nofollow noopener noreferrer">这里</a>可以找到，在此仅做示例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1$ tree -C -L 2</span><br><span class="line">.</span><br><span class="line">├── bin</span><br><span class="line">├── build</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── include</span><br><span class="line">│   ├── testFunc1.h</span><br><span class="line">│   └── testFunc.h</span><br><span class="line">└── src</span><br><span class="line">    ├── CMakeLists.txt</span><br><span class="line">    ├── main.cpp</span><br><span class="line">    ├── testFunc1.cpp</span><br><span class="line">    └── testFunc.cpp</span><br></pre></td></tr></table></figure><p><strong>构建项目的步骤如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1$ cd build&#x2F;</span><br><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1&#x2F;build$ cmake ..</span><br><span class="line">... ... </span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written to: &#x2F;home&#x2F;tzloop&#x2F;Desktop&#x2F;test1&#x2F;build</span><br></pre></td></tr></table></figure><p>会发现：</p><ul><li>在build文件夹下已经出现一众的Cmake文件的src文件夹</li><li>并生成了Makefile文件，这是我们接下来进行cmake的保证</li><li>对于CmakeCache.txt，如果我们要重新cmake，则需要删除之</li></ul><p><img src="https://p.pstatp.com/origin/fe9d0001795727507df6" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1&#x2F;build$ make</span><br><span class="line">Scanning dependencies of target main</span><br><span class="line">[ 25%] Building CXX object src&#x2F;CMakeFiles&#x2F;main.dir&#x2F;main.cpp.o</span><br><span class="line">[ 50%] Building CXX object src&#x2F;CMakeFiles&#x2F;main.dir&#x2F;testFunc.cpp.o</span><br><span class="line">[ 75%] Building CXX object src&#x2F;CMakeFiles&#x2F;main.dir&#x2F;testFunc1.cpp.o</span><br><span class="line">[100%] Linking CXX executable ..&#x2F;..&#x2F;bin&#x2F;main</span><br><span class="line">[100%] Built target main</span><br></pre></td></tr></table></figure><p>在make（有百分比阶段）完成后，会发现编译完的o文件，被link（链接）完成，最后输出可执行的文件到bin目录，我们进入bin目录运行main会打印出正常结果。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/fed200015cf8f6ca112f" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1&#x2F;build$ cd ..&#x2F;bin</span><br><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;test1&#x2F;bin$ .&#x2F;main</span><br><span class="line">data is 100</span><br><span class="line">data is 200</span><br></pre></td></tr></table></figure><h4 id="开始调试项目"><a href="#开始调试项目" class="headerlink" title="开始调试项目"></a><strong>开始调试项目</strong></h4><p>项目简介：一个CUDA项目，使用GLUI构建的操作界面，使用OPENGL来利用GPU加速计算，整体上是C++混编CUDA程序，采用Makefile构建。按道理直接make即可，但遇到的错误没想到一大堆！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/fe42000182f8a15e83fe" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="Error1-clang-not-found"><a href="#Error1-clang-not-found" class="headerlink" title="Error1: clang++: not found"></a><strong>Error1: clang++: not found</strong></h4><p><strong>解决方法，</strong>安装clang即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:sudo apt-get update</span><br><span class="line">tzloop@tzloop-GE62-6QC:sudo apt-get install clang</span><br></pre></td></tr></table></figure><h4 id="Error2-依赖的头文件找不到"><a href="#Error2-依赖的头文件找不到" class="headerlink" title="Error2: 依赖的头文件找不到"></a><strong>Error2: 依赖的头文件找不到</strong></h4><p>分析下Cmake文件，这里主要有三个模块需要引入到源文件中，分别是：ANN、TRIANGLE、CUBU。</p><p><img src="https://p.pstatp.com/origin/ff0e0000cceb02a06a34" alt="image.png"></p><p><strong>解决方法：</strong>重新安装。<br>要注意查看项目的源代码，是直接调用的，还是依赖编译环境的。前者需要将模块构建完成后放到项目中，而后者只需要在系统中安装相应模块，程序运行时会调用系统的库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;ProjectionExplain$ make</span><br><span class="line">clang++ -c -I. -Iinclude -O3 -g -m64 -I..&#x2F;CUBu -I..&#x2F;Geometry&#x2F;tsANN&#x2F;include -I..&#x2F;Geometry&#x2F;Triangle -I&#x2F;Developer&#x2F;NVIDIA&#x2F;CUDA-6.0&#x2F;include -I&#x2F;Developer&#x2F;NVIDIA&#x2F;CUDA-6.0&#x2F;samples&#x2F;common&#x2F;inc  -stdlib&#x3D;libstdc++  -o main.o main.cpp</span><br><span class="line">In file included from main.cpp:2:</span><br><span class="line">In file included from .&#x2F;include&#x2F;vis.h:9:</span><br><span class="line">.&#x2F;include&#x2F;pointcloud.h:4:10: fatal error: &#39;ANN&#x2F;ANN.h&#39; file not found</span><br><span class="line">#include &quot;ANN&#x2F;ANN.h&quot;</span><br><span class="line">         ^~~~~~~~~~~</span><br><span class="line">1 error generated.</span><br><span class="line">Makefile:32: recipe for target &#39;main.o&#39; failed</span><br><span class="line">make: *** [main.o] Error 1</span><br></pre></td></tr></table></figure><p>相关链接：<a href="https://blog.csdn.net/RobertChenGuangzhi/article/details/39995833" target="_blank" rel="external nofollow noopener noreferrer">Ubuntu中c++项目引用第三方包库的方法</a></p><h4 id="粗体文本Error3-Cubu-cmake-failed粗体文本"><a href="#粗体文本Error3-Cubu-cmake-failed粗体文本" class="headerlink" title="粗体文本Error3: Cubu cmake failed粗体文本"></a><strong>粗体文本</strong>Error3: Cubu cmake failed<strong>粗体文本</strong></h4><p>Cubu的安装要先下载，然后手动构建完后放到项目中，<a href="https://bitbucket.org/rmmartins/cubu/downloads/" target="_blank" rel="external nofollow noopener noreferrer">下载地址</a>。</p><p><strong>出现错误： missing: GLUI_INCLUDE_DIR GLUI_LIBRARY</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;rmmartins-cubu-ee034cafdaa2$ mkdir -p build &amp;&amp; cd build &amp;&amp; cmake .. &amp;&amp; make install</span><br><span class="line">-- The C compiler identification is GNU 7.4.0</span><br><span class="line">-- The CXX compiler identification is GNU 7.4.0</span><br><span class="line">-- Check for working C compiler: &#x2F;usr&#x2F;bin&#x2F;cc</span><br><span class="line">-- Check for working C compiler: &#x2F;usr&#x2F;bin&#x2F;cc -- works</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - done</span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - done</span><br><span class="line">-- Check for working CXX compiler: &#x2F;usr&#x2F;bin&#x2F;c++</span><br><span class="line">-- Check for working CXX compiler: &#x2F;usr&#x2F;bin&#x2F;c++ -- works</span><br><span class="line">-- Detecting CXX compiler ABI info</span><br><span class="line">-- Detecting CXX compiler ABI info - done</span><br><span class="line">-- Detecting CXX compile features</span><br><span class="line">-- Detecting CXX compile features - done</span><br><span class="line">-- Found OpenGL: &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libOpenGL.so   </span><br><span class="line">-- Found GLUT: &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libglut.so  </span><br><span class="line">CMake Error at &#x2F;usr&#x2F;share&#x2F;cmake-3.10&#x2F;Modules&#x2F;FindPackageHandleStandardArgs.cmake:137 (message):</span><br><span class="line">  Could NOT find GLUI (missing: GLUI_INCLUDE_DIR GLUI_LIBRARY)</span><br><span class="line">Call Stack (most recent call first):</span><br><span class="line">  &#x2F;usr&#x2F;share&#x2F;cmake-3.10&#x2F;Modules&#x2F;FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE)</span><br><span class="line">  cmake&#x2F;FindGLUI.cmake:106 (find_package_handle_standard_args)</span><br><span class="line">  CMakeLists.txt:8 (find_package)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- Configuring incomplete, errors occurred!</span><br><span class="line">See also &quot;&#x2F;home&#x2F;tzloop&#x2F;Desktop&#x2F;rmmartins-cubu-ee034cafdaa2&#x2F;build&#x2F;CmakeFiles&#x2F;CmakeOutput.log&quot;.</span><br></pre></td></tr></table></figure><p><strong>解决方法：</strong>Cubu有其他模块的依赖，最好是先安装其他模块。对于只需要在系统安装的模块，可以直接一条命令安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install libtriangle-dev libann-dev libann-dev libfreeimage-dev libglew-dev libboost-all-dev libftgl-dev libfreetype6-dev libeigen3-dev</span><br></pre></td></tr></table></figure><h4 id="粗体文本Error4-glui-install-failed"><a href="#粗体文本Error4-glui-install-failed" class="headerlink" title="粗体文本Error4: glui install failed**"></a><strong>粗体文本</strong>Error4: glui install failed**</h4><p><strong>解决方法：</strong>我这里出现了安装 libglui-dev失败的提示，搜索后发现是Ubuntu不提供这个模块了，所以只能去github下载源代码手动构建。下载版本为glui-2.35，这里是<a href="https://github.com/libglui/glui/releases" target="_blank" rel="external nofollow noopener noreferrer">下载链接</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/fed00000e7976cb49c5f" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>下载完成后进入目录，因为也是Makefile构建的，所以直接make：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;glui-2.35$ make</span><br><span class="line">mkdir -p bin</span><br><span class="line">mkdir -p lib</span><br><span class="line">g++ -O0 -Wall -pedantic -I.&#x2F; -I.&#x2F;include -I&#x2F;usr&#x2F;X11R6&#x2F;include -c glui_add_controls.cpp</span><br><span class="line">… …</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/fed400011de7745d897c" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>ANN模块同理</strong>，下载源文件tar.gz，在<a href="https://launchpad.net/ubuntu/+source/ann/1.1.2+doc-4.1" target="_blank" rel="external nofollow noopener noreferrer">这里下载</a> ，然后注意编译的方式，使用linux-g++</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~&#x2F;Desktop&#x2F;ann-1.1.2+doc$ make linux-g++</span><br><span class="line">… …</span><br></pre></td></tr></table></figure><p><strong>Triangle模块同理</strong>，在<a href="https://launchpad.net/ubuntu/+source/triangle/1.6-2" target="_blank" rel="external nofollow noopener noreferrer">这里下载</a> ，最后Cubu也要放进来（项目lib目录），然后改下名字（随意），这里把版本号去掉了。然后修改Malefile的对应的模块路径。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/ff8d000126fdf275af26" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="穿插GLUT教程"><a href="#穿插GLUT教程" class="headerlink" title="穿插GLUT教程"></a><strong>穿插GLUT教程</strong></h4><p>教程在，<a href="https://ywnz.com/linuxbc/2371.html" target="_blank" rel="external nofollow noopener noreferrer">这里</a>，按照教程，我成功的运行了所给的demo，这表明我的Glut模块是安装正常的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/ffa700009088e087c3c2" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="Error5-Unsupported-gpu-architecture-‘compute-12’"><a href="#Error5-Unsupported-gpu-architecture-‘compute-12’" class="headerlink" title="Error5: Unsupported gpu architecture ‘compute_12’"></a><strong>Error5: Unsupported gpu architecture ‘compute_12’</strong></h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/ffc80000c1265f013f50" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>问题的详细 <a href="https://askubuntu.com/questions/960238/nvcc-fatal-unsupported-gpu-architecture-compute-20" target="_blank" rel="external nofollow noopener noreferrer">纠错指导</a></p><p><strong>解决方法：</strong>这里需要修改Makefile中的arch参数，看自己的Cuda参数而定，这里我使用compute_50即正常。</p><h4 id="Error6-skelf-cu-pointcloud-not-found"><a href="#Error6-skelf-cu-pointcloud-not-found" class="headerlink" title="Error6: skelf.cu: pointcloud not found"></a><strong>Error6: skelf.cu: pointcloud not found</strong></h4><p><strong>解决方法：</strong>修改skelf.cu内部的头文件引用名称。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/fff20000b5d1c7149863" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="Error7-cuda-ruantime-h-not-found"><a href="#Error7-cuda-ruantime-h-not-found" class="headerlink" title="Error7: cuda_ruantime.h not found"></a><strong>Error7: cuda_ruantime.h not found</strong></h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/ff480000bfdc7b40260b" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>解决方法：</strong>这是Cuda路径配置错误导致的，查看makefile中对应cuda的路径CUDAROOT，修改成本地环境对应的cuda路径。相应的也要修改CUDALIB路径。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/ff4f0000edc20cee8f64" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/ffd7000096b052d952ef" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="Error8-undeclared-identifier-of-xxEXT"><a href="#Error8-undeclared-identifier-of-xxEXT" class="headerlink" title="Error8: undeclared identifier of xxEXT"></a><strong>Error8: undeclared identifier of xxEXT</strong></h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/fecc00010e896c8994bd" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>因为上面是vis.app报错，所以找到vis.h，修改其头文件的引用方式：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://p.pstatp.com/origin/fe550001cfc67a5149a0" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>之后，出现找不到glui.h</p><p><img src="https://p.pstatp.com/origin/ff3700007716ed0f838d" alt="image.png"></p><p>拷贝libglui.a和glui.h到usr相应目录，之后再运行仍然又重复undeclared错误。</p><h4 id="总结重新构建的步骤"><a href="#总结重新构建的步骤" class="headerlink" title="总结重新构建的步骤"></a><strong>总结重新构建的步骤</strong></h4><p>首先是添加依赖模块，然后修改Makefile中对应的依赖模块的路径和Cuda的相关路径，顺带把arch的参数改为合适自己的compute_xx，之后修改一些头文件的引用错误（有的可能单纯是头文件名称错了），有的在不同系统下的路径不同，要改成对应的引用路径（比如glui在mac可能是GLUI/glui但在ubuntu是GL/glui），最后就到达这个错误了。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vis.cpp:343:2: error: use of undeclared identifier &#39;glGenFramebuffersEXT&#39;</span><br><span class="line">        glGenFramebuffersEXT(2,framebuffers);                   &#x2F;&#x2F;Make t...</span><br><span class="line">        ^</span><br><span class="line">vis.cpp:347:2: error: use of undeclared identifier &#39;glBindFramebufferEXT&#39;</span><br><span class="line">        glBindFramebufferEXT(GL_FRAMEBUFFER_EXT,framebuffer_lum);</span><br><span class="line">        ^</span><br><span class="line">vis.cpp:352:2: error: use of undeclared identifier &#39;glFramebufferTexture2DEXT&#39;</span><br><span class="line">        glFramebufferTexture2DEXT(GL_FRAMEBUFFER_EXT,GL_COLOR_ATTACHMENT...</span><br><span class="line">        ^</span><br><span class="line">vis.cpp:354:2: error: use of undeclared identifier &#39;glBindFramebufferEXT&#39;</span><br><span class="line">        glBindFramebufferEXT(GL_FRAMEBUFFER_EXT,framebuffer_rgba);</span><br><span class="line">        ^</span><br><span class="line">vis.cpp:359:2: error: use of undeclared identifier &#39;glFramebufferTexture2DEXT&#39;</span><br><span class="line">        glFramebufferTexture2DEXT(GL_FRAMEBUFFER_EXT,GL_COLOR_ATTACHMENT...</span><br><span class="line">        ^</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><p>貌似是某模块的EXT扩展引用错误，但目前暂时不知道怎么改，难顶…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于需要，最近得重新运行一个CUDA项目，但我苦于没有经验，只能从编译开始入门一下，不过还是不算难的，难的是原项目代码不保证质量，而且有若干无关文件，且运行环境未知、各模块的运行版本也不是很清楚，导致搞了一大堆操作（应该是正确的）最后却没跑起来，是的，这是一篇翻车笔记。&lt;/p&gt;
    
    </summary>
    
      <category term="研究方向" scheme="https://old.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="C/C++" scheme="https://old.cz5h.com/tags/C-C/"/>
    
      <category term="调试" scheme="https://old.cz5h.com/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="Cuda" scheme="https://old.cz5h.com/tags/Cuda/"/>
    
      <category term="Makefile" scheme="https://old.cz5h.com/tags/Makefile/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu的基本配置及界面美化</title>
    <link href="https://old.cz5h.com/article/a441.html"/>
    <id>https://old.cz5h.com/article/a441.html</id>
    <published>2020-01-31T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.575Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍针对Ubuntu系统的一般操作，包括一些基本配置和界面美化，以及中间可能出现的一些问题。可能以后会比较多的用笔记本来做实验，虽然台式机性能更好，但是毕竟不能背来背去，所以还是用笔记本会好很多，正因为如此，所以把Ubuntu整的好看一点还是很重要的，因为实在找不到比较好的Win10美化主题，所以最终还是决定向MacOS方向美化，网上已经有很多资料了，这里只是记录下自己系统的配置及美化过程。</p><a id="more"></a><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae03.alicdn.com/kf/U73008d1a0b404055b863f23ff040b5071.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="基本配置和软件"><a href="#基本配置和软件" class="headerlink" title="基本配置和软件"></a><strong>基本配置和软件</strong></h3><h4 id="修改root密码"><a href="#修改root密码" class="headerlink" title="修改root密码"></a><strong>修改root密码</strong></h4><p>为了方便的执行命令，不用每次都sudo，我们可以直接修改root账户的密码，继而切换到root账户执行相关操作，并且在后续过程中，一旦出现开机异常，在具有root账户密码的情况下，我们可以方便的通过<code>Ctrl+Alt+F4</code>（或其他F1~F6）进入tty4通过命令行的方式修复相关的配置文件，从而修复开机失败的情况。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo passwd root</span><br><span class="line"><span class="meta">#</span><span class="bash"> 输入你的新密码</span></span><br></pre></td></tr></table></figure><p>注意：初始密码是随机的，只能通过重置来给定一个新密码。</p><h4 id="QQ-for-Linux"><a href="#QQ-for-Linux" class="headerlink" title="QQ for Linux"></a><strong>QQ for Linux</strong></h4><p><a href="https://im.qq.com/linuxqq/download.html" target="_blank" rel="external nofollow noopener noreferrer">https://im.qq.com/linuxqq/download.html</a></p><h4 id="Sogou-for-Linux"><a href="#Sogou-for-Linux" class="headerlink" title="Sogou for Linux"></a><strong>Sogou for Linux</strong></h4><p><a href="https://pinyin.sogou.com/linux/" target="_blank" rel="external nofollow noopener noreferrer">https://pinyin.sogou.com/linux/</a></p><p>在使用过程中有个问题，那就是使用输入法输入数字和英文字母的时候会出现异常的字符，“ｌｉｋｅ　ｔｈｉｓ”。</p><h4 id="重启报错的问题"><a href="#重启报错的问题" class="headerlink" title="重启报错的问题"></a><strong>重启报错的问题</strong></h4><p>如果每次开机重启都会出现“System program problem detected”的问题，我们可以通过配置忽略这个弹窗，其本身系统运行没有影响。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo gedit /etc/default/apport </span><br><span class="line"><span class="meta">#</span><span class="bash"> 将 enabled=1 改为 enabled=0</span></span><br></pre></td></tr></table></figure><h3 id="主题和Dock"><a href="#主题和Dock" class="headerlink" title="主题和Dock"></a><strong>主题和Dock</strong></h3><p>这里包括两部分内容：</p><ul><li>一个是在Chrome插件中配置使用gnome插件，这可以调节一些细微的细节</li><li>一个是材质包的下载（包括主题资源、光标、图标）以及配合<strong>gnome-tweaks</strong>工具完成主要的主题配置</li></ul><h4 id="Chrome插件，修改细节"><a href="#Chrome插件，修改细节" class="headerlink" title="Chrome插件，修改细节"></a><strong>Chrome插件，修改细节</strong></h4><p>下载gnome管理插件，可以方便的下载并启用相关的gnome插件。下载地址<a href="https://chrome.google.com/webstore/search/gnome" target="_blank" rel="external nofollow noopener noreferrer">在这</a> ，之后可以在Chrome中打开<a href="https://extensions.gnome.org/" target="_blank" rel="external nofollow noopener noreferrer">插件主页</a>进行配置。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae05.alicdn.com/kf/U97dfea5c7ad04ac58bbf6c5c79d478cdX.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>这里列举几个用到的插件：</p><ul><li><strong>Top bar script executer</strong>：顶栏快捷方式运行自定义命令</li><li><strong>Keys indicator</strong>：顶栏显示当前按下了Caps Lock, Num Lock, Ctrl, Shift, Alt中的哪些键</li><li><strong>Hide activities button</strong>：隐藏顶栏活动按钮</li><li><strong>Launch</strong>：替换顶栏活动按钮为所有应用程序（9个点）</li><li><strong>Hide top bar</strong>：自动隐藏顶栏</li><li><strong>No title bar</strong>：直接将应用的标题栏和顶栏结合为一体，窗口操作按钮也被放在顶栏上（不推荐使用）</li></ul><h4 id="美化Dock也就是底部程序托盘"><a href="#美化Dock也就是底部程序托盘" class="headerlink" title="美化Dock也就是底部程序托盘"></a><strong>美化Dock也就是底部程序托盘</strong></h4><p><strong>第一步：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加软件源</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo add-apt-repository ppa:noobslab/macbuntu</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装Plank</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install plank</span><br></pre></td></tr></table></figure><p>将Plank固定在Dock上，可以进入文件夹/usr/share/applications，找到相关软件，拖到Dock上就OK。</p><p><strong>第二步：</strong></p><p><a href="https://zimocp.github.io/upload/Ubuntu-18-04-LTS-%E7%BE%8E%E5%8C%96-%E4%BB%BFMac-OS-X/frost-plank-theme-2.2.1.zip" target="_blank" rel="external nofollow noopener noreferrer">下载Frost</a>：在解压后的文件夹里找到名为Frost的文件夹，将他复制到~/.local/share/plank/themes里（没有就创建）<br><a href="https://zimocp.github.io/upload/Ubuntu-18-04-LTS-%E7%BE%8E%E5%8C%96-%E4%BB%BFMac-OS-X/plank-macOS-Themes-Pack.zip" target="_blank" rel="external nofollow noopener noreferrer">下载Mac OS Themes</a>：解压后进入文件夹，你会看到一大堆主题，根据名字复制你需要的文件夹到~/.local/share/plank/themes里（没有就创建）<br>最后在Plank上Ctrl+右键，点击首选项，选择相关主题。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae02.alicdn.com/kf/U3c5f3a38369a414dbfd6e562fbb9b6889.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>第三步：隐藏原Dash</strong></p><p><a href="https://extensions.gnome.org/extension/307/dash-to-dock/" target="_blank" rel="external nofollow noopener noreferrer">安装Dash to Dock</a></p><ul><li>安装好之后进入GNOME Tweaks，进入左侧栏插件，将Dash to Dock打开，之后关闭之，如果发现没有变回Ubuntu默认dash，那么就完成关闭了。</li><li>点击Dash to Dock的设置按钮，打开自动隐藏，把两个开关都关掉，你会发现你找不到Dash了</li><li>设置Dock开机启动：打开GNOME Tweaks，左侧栏进入开机启动程序，</li></ul><p><strong>其他配置</strong></p><p>安装Slingscold，Slingscold是一个比GNOME原生启动器更轻量的全屏启动器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install slingscold</span><br></pre></td></tr></table></figure><p>将Slingscold固定在Dock上，可以进入文件夹/usr/share/applications，找到相关软件，拖到Dock上就OK。</p><h4 id="使用Tweaks修改主题"><a href="#使用Tweaks修改主题" class="headerlink" title="使用Tweaks修改主题"></a><strong>使用Tweaks修改主题</strong></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install macbuntu-os-icons-v1804 macbuntu-os-ithemes-v1804 macbuntu-os-plank-theme-v1804</span><br></pre></td></tr></table></figure><p>通过以上命令安装Macbuntu的主题、图标和Plank主题，打开GNOME Tweaks，将左侧栏外观中的应用程序 光标 图标设成Macbuntu即可。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae05.alicdn.com/kf/Uad2412d3bd03446b8feb0f3eeebe5b34i.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>最终的美化效果</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae02.alicdn.com/kf/U58f40493e8fb4873874cb4a915023acf3.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a><strong>修改字体</strong></h3><p>Ubuntu系统的英文字体很好看，但中文字体有时会觉得不是那么好看，所以可以自己替换相应的字体。这里首先需要检查是否安装了中文字体，在终端上输入下面指令查看已安装字体</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ fc-list :lang=zh</span><br></pre></td></tr></table></figure><p>如果没有中文字体可以到网络中下载，或者直接到windows系统中拷贝。中文字体安装完成后，需要修改默认的字体设置文件，修改默认字体找不到的时候的默认替代字体，进入下面路径找到配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ vim /etc/fonts/conf.d/64-language-selector-prefer.conf</span><br></pre></td></tr></table></figure><p>修改（添加）文件中的字体配置信息，每个<prefer>后面的第一行都是添加的默认新字体。</prefer></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">fontconfig</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"fonts.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fontconfig</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>sans-serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Microsoft YaHei<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK KR<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans CJK HK<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Microsoft YaHei<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif CJK KR<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>monospace<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Microsoft YaHei<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK JP<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK KR<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK SC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK TC<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans Mono CJK HK<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fontconfig</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用sudo权限保存后重启即可生效，原来的字体就会变为中文字体默认的繁体字体就变成了新的简体中文。</p><h3 id="调节Ubuntu亮度"><a href="#调节Ubuntu亮度" class="headerlink" title="调节Ubuntu亮度"></a><strong>调节Ubuntu亮度</strong></h3><p>这部分比较麻烦，可能出现很多种情况，下面分别讲解一下。</p><ol><li><strong>如果是Fn+亮度调节按钮可以出现亮度调节图标，但调节无效，那么可以使用如下方法：</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo gedit /etc/default/grub</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改文件中的字段：</span></span><br><span class="line">GRUB_CMDLINE_LINUX="" 改成　GRUB_CMDLINE_LINUX="acpi_backlight=vendor"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo update-grub</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ reboot</span><br></pre></td></tr></table></figure><p>如果想设置亮度的初始值，可以直接修改文件内的数值。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo gedit /etc/rc.local</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在打开文件里增加以下代码（加在<span class="built_in">exit</span> 0之前）</span></span><br><span class="line">echo 500 &gt; /sys/class/backlight/intel_backlight/brightness</span><br></pre></td></tr></table></figure><p><strong>2. 如果/sys/class/backlight/目录下是空的</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae02.alicdn.com/kf/U476af81a37864823ae59ef772d99f203y.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>可以通过安装第三方软件的方法来调节亮度，安装brightness-controller或者brightness-controller-sample这两个软件，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo add-apt-repository ppa:apandada1/brightness-controller</span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get update</span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get install brightness-controller</span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ brightness-controler</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae03.alicdn.com/kf/U6584a1e78a0942bd9d9682fbb7ced29av.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>左侧是正常版的调节软件，右侧是simple版本。</p><p><strong>3. 如仍然无效可以采用以下危险方案</strong></p><p>以下修改可能造成重启后无法进入系统，因为新增的驱动配置可能导致显示不正常，所以慎用，不过如果重启后进不去系统，也不要害怕，通过Ctrl+Alt+F4（或者F1~F6）进入tty4把新增的配置文件s删除即可，这里直接要用root用户登录，然后删除conf文件重启即可恢复。</p><p>进入/etc/X11/路径，如果没有xorg.conf文件的话，就自己新建一个，输入下面的内容，保存退出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Section <span class="string">"Screen"</span></span><br><span class="line">Identifier<span class="string">"Default Screen"</span></span><br><span class="line">DefaultDepth<span class="number">24</span></span><br><span class="line">EndSection</span><br><span class="line">Section <span class="string">"Module"</span></span><br><span class="line">Load<span class="string">"glx"</span></span><br><span class="line">EndSection</span><br><span class="line">Section <span class="string">"Device"</span></span><br><span class="line">Identifier<span class="string">"Default Device"</span></span><br><span class="line">Driver<span class="string">"nvidia"</span></span><br><span class="line">Option<span class="string">"NoLogo"</span><span class="string">"True"</span></span><br><span class="line">Option <span class="string">"RegistryDwords"</span> <span class="string">"EnableBrightnessControl=1"</span></span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><p>如果有这个文件的话在终端中输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo gedit /etc/X11/xorg.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 把fuiying对应内容改成以下内容</span></span><br><span class="line">Section "Device"</span><br><span class="line">Identifier "Device0"</span><br><span class="line">Driver "nvidia"</span><br><span class="line">VendorName "NVIDIA Corporation"</span><br><span class="line">Option "RegistryDwords" "EnableBrightnessControl=1"</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><p>然后保存，退出，重启之后，或许正常，如果进不去系统了，那么请看本段开头的解决方案，命令行进入系统删除conf文件即可。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae04.alicdn.com/kf/U7278e9361e104a62af69e3baf5f839abn.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><strong>4. 如果还是没有效果</strong></p><p>合理的怀疑是因为显卡驱动的问题，我们知道在双显卡（独显加集显）的电脑上安装显卡驱动时，需要修改grub文件，添加nomodeset字段在slpash之后，这是为了禁止系统使用GTX的N卡驱动，具体在前一篇文章中详细说明，这里如果仍然无法调节亮度，请务必参看一下文件中是否仍然存在nomodeset字段。要将其删掉。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo vim /etc/default/grub</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除nomodeset字段，保存退出</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo update-grub</span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ reboot</span><br></pre></td></tr></table></figure><p>这是我的最终错误定位，去掉nomodeset之后，其实才是真正使用独显显示，重启后会发现一些变化，比如打开程序会出现动画，点击程序菜单也会出现动画，亮度随意调节，网页或程序渲染速度也变得更快，而且上述的两个亮度调节软件也可以使用了。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a><strong>参考资料</strong></h3><p><a href="https://zimocp.github.io/2019/05/20/Ubuntu-18-04-LTS-%E7%BE%8E%E5%8C%96/" target="_blank" rel="external nofollow noopener noreferrer">https://zimocp.github.io/2019/05/20/Ubuntu-18-04-LTS-%E7%BE%8E%E5%8C%96/</a><br><a href="https://www.jianshu.com/p/4c95b708ae1d" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/4c95b708ae1d</a><br><a href="https://blog.csdn.net/redstone0001/article/details/17042011" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/redstone0001/article/details/17042011</a><br><a href="https://blog.csdn.net/u013406197/article/details/80773820" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/u013406197/article/details/80773820</a><br><a href="https://blog.csdn.net/TianliangQiu/article/details/51585398" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/TianliangQiu/article/details/51585398</a><br><a href="https://blog.csdn.net/HedWater/article/details/75465110" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/HedWater/article/details/75465110</a><br><a href="https://blog.csdn.net/weixin_41490463/article/details/80987654" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_41490463/article/details/80987654</a><br><a href="https://blog.csdn.net/gengyuchao/article/details/101215243" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/gengyuchao/article/details/101215243</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍针对Ubuntu系统的一般操作，包括一些基本配置和界面美化，以及中间可能出现的一些问题。可能以后会比较多的用笔记本来做实验，虽然台式机性能更好，但是毕竟不能背来背去，所以还是用笔记本会好很多，正因为如此，所以把Ubuntu整的好看一点还是很重要的，因为实在找不到比较好的Win10美化主题，所以最终还是决定向MacOS方向美化，网上已经有很多资料了，这里只是记录下自己系统的配置及美化过程。&lt;/p&gt;
    
    </summary>
    
      <category term="研究方向" scheme="https://old.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="总结" scheme="https://old.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="Linux" scheme="https://old.cz5h.com/tags/Linux/"/>
    
      <category term="系统设置" scheme="https://old.cz5h.com/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE/"/>
    
      <category term="Ubuntu" scheme="https://old.cz5h.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>双显卡笔电安装N卡驱动及CUDA</title>
    <link href="https://old.cz5h.com/article/891.html"/>
    <id>https://old.cz5h.com/article/891.html</id>
    <published>2020-01-28T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.572Z</updated>
    
    <content type="html"><![CDATA[<p>由于工作需要，必须换操作系统了，一想到笔记本已经冗杂不堪，所以就索性重装成Linux系统，虽然显卡性能不如实验室的机器，但完全可以当做试验机，同时本身机子性能也不差，所以装个乌班图应该体验还不错。以上是我开始时的想法，后来装完了之后呢，体验总体也不错，但总归是有写麻烦，我总结一下放在开头。</p><a id="more"></a><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae03.alicdn.com/kf/U73008d1a0b404055b863f23ff040b5071.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="安装和使用Ubuntu的感受"><a href="#安装和使用Ubuntu的感受" class="headerlink" title="安装和使用Ubuntu的感受"></a><strong>安装和使用Ubuntu的感受</strong></h3><ul><li>初始安装时要修改配置，针对双显卡机器；</li><li>安装系统的过程非常快，这得益于我的固态硬盘；</li><li>系统的初始环境比Win10全，比如自带Python环境等等；</li><li>操作起来整体感觉圆滑，但比Win10要卡；</li><li>随便的小操作就可能导致开机黑屏，不过修复也比较容易；</li><li>开机关机要快点，因为不存在Win10那种更新；</li><li>系统的自定义程度高，基本哪里都可以改；</li><li>注意：微星笔电开启独显后会导致风扇一直运行在高转速；</li><li>注意：真不需要占用太多硬盘空间，后悔没装双系统！</li></ul><p>总体体验还不错，除了娱乐性差一点，我基本可以适应从Win10到Ubuntu的过度。有关于系统设置和美化的内容请转到 <a href="https://old.cz5h.com/article/2020-2-1%20Ubuntu%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96.html">这篇文章</a>。</p><p>下面是安装系统及显卡驱动的步骤和需要注意的地方。</p><h3 id="安装系统及Nvidia驱动"><a href="#安装系统及Nvidia驱动" class="headerlink" title="安装系统及Nvidia驱动"></a><strong>安装系统及Nvidia驱动</strong></h3><h4 id="双显卡的系统安装及驱动安装的准备工作"><a href="#双显卡的系统安装及驱动安装的准备工作" class="headerlink" title="双显卡的系统安装及驱动安装的准备工作"></a><strong>双显卡的系统安装及驱动安装的准备工作</strong></h4><ol><li><p>Bios改成uefi，关闭安全启动；</p><p><img src="https://ae04.alicdn.com/kf/U1eae7fcd05134105b2d44edd7a8460ebC.png" alt="image.png"></p></li><li><p>插入启动U盘，启动安装，在try ubuntu　..install Ubuntu 的这个界面，按e，进入grub的调整界面；</p><p><img src="https://ae04.alicdn.com/kf/Uf7567e8722ae4e12a32b53782e381d04E.png" alt="image.png"></p></li><li><p>把里边的quiet splash修改为nomodeset idle=nomwait，修改完成以后Ctrl + X或F10，使之生效；</p><p><img src="https://ae03.alicdn.com/kf/U04f078be4fe94bd186385280342229e2a.png" alt="image.png"></p></li><li>然后继续安装，这样安装完成以后，应该可以顺利进入桌面；</li><li>正常进入桌面后，编辑 /etc/default/grub 这个文件，同样添加nomodeset字段到splash后面；</li></ol><p>此时重启，应该一切正常可以进入桌面，这时其实系统使用的集显，独显的显卡还没装，下面开始。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 自动探测显卡版本并列出可使用的显卡驱动编号</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ ubuntu-drivers devices</span><br><span class="line">… …</span><br><span class="line">vendor   : NVIDIA Corporation</span><br><span class="line">model    : GM107M [GeForce GTX 960M]</span><br><span class="line">driver   : nvidia-driver-440 - third-party free recommended</span><br><span class="line">driver   : nvidia-driver-415 - third-party free</span><br><span class="line">driver   : nvidia-driver-410 - third-party free</span><br><span class="line">driver   : nvidia-driver-430 - third-party free</span><br><span class="line">driver   : nvidia-driver-390 - third-party free</span><br><span class="line">driver   : nvidia-driver-435 - distro non-free</span><br><span class="line">driver   : xserver-xorg-video-nouveau - distro free builtin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看内核版本（高内核会引发显卡驱动的不兼容）</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ uname -r </span><br><span class="line">5.3.0-26-generic</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始安装驱动时，先卸载之前的驱动</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get remove --purge nvidia*</span><br><span class="line">… …</span><br><span class="line">INFO:Disable nvidia</span><br><span class="line">DEBUG:Parsing /usr/share/ubuntu-drivers-common/quirks/put_your_quirks_here</span><br><span class="line">update-initramfs: deferring update (trigger activated)</span><br><span class="line">Processing triggers for initramfs-tools (0.130ubuntu3.8) ...</span><br><span class="line">update-initramfs: Generating /boot/initrd.img-5.3.0-26-generic</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加驱动的软件源</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo add-apt-repository ppa:graphics-drivers/ppa</span><br><span class="line">… …       </span><br><span class="line">Fetched 88,7 kB in 0s (186 kB/s)                  </span><br><span class="line">Reading package lists... Done</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新下载器</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt-get update</span><br><span class="line">… …                        </span><br><span class="line">Reading package lists... Done</span><br></pre></td></tr></table></figure><h4 id="选择安装驱动的版本"><a href="#选择安装驱动的版本" class="headerlink" title="选择安装驱动的版本"></a><strong>选择安装驱动的版本</strong></h4><p>列出适用该笔记本电脑显卡的具体驱动版本。这里有三点需要注意：</p><ul><li>尽量选择高版本的显卡驱动，比如这里选择安装440，如果选择安装410，则会出现与内核不兼容的情况，我们面会谈到。</li><li>第二点就是，可能你运行下面的命令不能自动识别出显卡版型号，那么你就要去手动查询对应的Nvidia显卡型号和Ubuntu驱动编号的关系，手动选择一个版本安装。</li><li><p>最后，如果可以在&lt;软件和更新&gt;中找到相对应的驱动版本，也可以直接鼠标选择后应用即可。这是18.04及以后都支持的Nvidia驱动安装方法。（一般初始驱动是不完整的）</p><p><img src="https://ae01.alicdn.com/kf/U514ccf97da2d4fcc9e3838f5a96e740bi.png" alt="image.png"></p></li></ul><p><strong>如果错误的在高版本内核下安装了低版本驱动，会安装失败的：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt install nvidia-driver-410 </span><br><span class="line">… …</span><br><span class="line">Building initial module for 5.3.0-26-generic</span><br><span class="line">ERROR: Cannot create report: [Errno 17] File exists: '/var/crash/nvidia-kernel-source-410.0.crash'</span><br><span class="line">Error! Bad return status for module build on kernel: 5.3.0-26-generic (x86_64)</span><br><span class="line">Consult /var/lib/dkms/nvidia/410.104/build/make.log for more information.</span><br><span class="line">Setting up nvidia-driver-410 (410.104-0ubuntu0~18.04.1) ...</span><br><span class="line">Processing triggers for initramfs-tools (0.130ubuntu3.8) ...</span><br><span class="line">update-initramfs: Generating /boot/initrd.img-5.3.0-26-generic</span><br></pre></td></tr></table></figure><p>所以我们要安装高版本，直接安装其<strong>recommended</strong>的版本即可。安装过程中会有基佬紫对话框，可能会被要求输入密码。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae04.alicdn.com/kf/Ufa3975531a4b4df8ac41c929b355dd91x.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tzloop@tzloop-GE62-6QC:~$ sudo apt install nvidia-driver-440 </span><br><span class="line">… …</span><br><span class="line">Processing triggers for initramfs-tools (0.130ubuntu3.8) ...</span><br><span class="line">update-initramfs: Generating /boot/initrd.img-5.3.0-26-generic</span><br><span class="line">Processing triggers for libc-bin (2.27-3ubuntu1)</span><br></pre></td></tr></table></figure><p>显卡驱动安装完成的判定：，重启后输入nvidia smi，如果正常的显示出以下信息则正常。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae01.alicdn.com/kf/Uee4572cfaf0e4539b9af9482472194a60.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a><strong>可能出现的问题</strong></h4><ul><li><p><strong>首次安装过程中，登录账户后桌面黑屏</strong><br>原因：安装时的grub配置没有修改，这时要重新安装系统，按照上述步骤，一定要注意修改grub文件。<br>请确认，这是在首次安装过程中出现的，我们可以看见登录界面，但登录进去后就是黑屏，可能有鼠标也可能没有。</p></li><li><p><strong>安装显卡驱动之后，重启黑屏</strong><br>原因：没有在grub配置文件内添加nomodeset字段。<br>请确认，这是在我们安装完成系统之后出现的问题，那么接下来的操作就与安装盘没有任何关系，所有操作都不要插着安装盘。只需要使用Ctrl+Alt+F4（也可能是F1~F6），进入tty4也就是黑框（微型Ge62系列是在出现MSI图标后就按下ESC进入，时机比较难把握，多试几次就行了），登录root账户后，找到/etc/default/grub文件，将里面的quiet splash后面添加上nomodeset这个字段，保存重启即可。 </p></li></ul><h3 id="安装CUDA"><a href="#安装CUDA" class="headerlink" title="安装CUDA"></a><strong>安装CUDA</strong></h3><p>为什么重新安装Cuda，安装完成显卡驱动后的输出里已经能发现Cuda10.2了，这个问题我的理解是，我们要一个可控的开发环境，而不是运行环境，所以我们自己要重新装个Cuda，在Cuda官网可以找到对应显卡驱动的Cuda安装包，安装过程直接照官网来。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae05.alicdn.com/kf/Ua9112f823c834aed8becb2fe587fef4ds.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>那么如何知道我们安装成功了呢，这里可以通过编译Cuda自带的例子来看其是否通过测试。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 首先测试下运行环境是否正常，主要是GCC是否正常</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ cat /proc/driver/nvidia/version</span><br><span class="line">NVRM version: NVIDIA UNIX x86_64 Kernel Module  440.48.02  Tue Jan 14 06:22:51 UTC 2020</span><br><span class="line">GCC version:  gcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04.1) </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入sample所在的目录</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ cp -r /usr/local/cuda-10.2/samples/ ~</span><br><span class="line">tzloop@tzloop-GE62-6QC:~$ cd ~/samples</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译自带的例子</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~/samples$ make</span><br><span class="line">… …  </span><br><span class="line">arch=compute_75,code=sm_75 -gencode arch=compute_75,code=compute_75 -o cudaNvSci.o -c cudaNvSci.cpp</span><br><span class="line">In file included from cudaNvSci.cpp:12:0:</span><br><span class="line">cudaNvSci.h:14:10: fatal error: nvscibuf.h: No such file or directory</span><br><span class="line"><span class="meta"> #</span><span class="bash">include &lt;nvscibuf.h&gt;</span></span><br><span class="line">          ^~~~~~~~~~~~</span><br><span class="line">compilation terminated.</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>这里我们直接使用 <strong>make</strong> 的话会无法通过对例子的编译，参见 <a href="https://github.com/NVIDIA/cuda-samples/issues/22" target="_blank" rel="external nofollow noopener noreferrer">这里</a> 的解释，这是一个已知的错误，我们可以通过 <strong>make -k</strong> 来忽略过程中的错误。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用 -k 参数来跳过错误</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~/samples$ make -k</span><br><span class="line">… …</span><br><span class="line">mkdir -p ../../bin/x86_64/linux/release</span><br><span class="line">cp cuSolverRf ../../bin/x86_64/linux/release</span><br><span class="line">make[1]: Leaving directory '/home/tzloop/samples/7_CUDALibraries/cuSolverRf'</span><br><span class="line">make: Target 'all' not remade because of errors.</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 最终的测试，如果是PASS则Cuda运行正常</span></span><br><span class="line">tzloop@tzloop-GE62-6QC:~/samples/bin/x86_64/linux/release$ ./deviceQuery</span><br><span class="line">./deviceQuery Starting...</span><br><span class="line"> CUDA Device Query (Runtime API) version (CUDART static linking)</span><br><span class="line">Detected 1 CUDA Capable device(s)</span><br><span class="line">Device 0: "GeForce GTX 960M"</span><br><span class="line">  CUDA Driver Version / Runtime Version          10.2 / 10.2</span><br><span class="line">  … …</span><br><span class="line">  Compute Mode:</span><br><span class="line">     &lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &gt;</span><br><span class="line">deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 10.2, CUDA Runtime Version = 10.2, NumDevs = 1</span><br><span class="line">Result = PASS</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a><strong>参考资料</strong></h3><p><a href="https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=41469" target="_blank" rel="external nofollow noopener noreferrer">https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=41469</a><br><a href="https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=41469" target="_blank" rel="external nofollow noopener noreferrer">https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=41469</a><br><a href="http://askubuntu.com/questions/162075/my-computer-boots-to-a-black-screen-what-options-do-i-have-to-fix-it" target="_blank" rel="external nofollow noopener noreferrer">http://askubuntu.com/questions/162075/my-computer-boots-to-a-black-screen-what-options-do-i-have-to-fix-it</a><br><a href="https://www.jianshu.com/p/fc5edbd6f480" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/fc5edbd6f480</a><br><a href="https://www.jianshu.com/p/e476e5ad6b56" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/e476e5ad6b56</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于工作需要，必须换操作系统了，一想到笔记本已经冗杂不堪，所以就索性重装成Linux系统，虽然显卡性能不如实验室的机器，但完全可以当做试验机，同时本身机子性能也不差，所以装个乌班图应该体验还不错。以上是我开始时的想法，后来装完了之后呢，体验总体也不错，但总归是有写麻烦，我总结一下放在开头。&lt;/p&gt;
    
    </summary>
    
      <category term="研究方向" scheme="https://old.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="Ubuntu" scheme="https://old.cz5h.com/tags/Ubuntu/"/>
    
      <category term="Cuda" scheme="https://old.cz5h.com/tags/Cuda/"/>
    
      <category term="双显卡" scheme="https://old.cz5h.com/tags/%E5%8F%8C%E6%98%BE%E5%8D%A1/"/>
    
      <category term="Nvidia" scheme="https://old.cz5h.com/tags/Nvidia/"/>
    
  </entry>
  
  <entry>
    <title>家中为什么要用软路由</title>
    <link href="https://old.cz5h.com/article/e1b1.html"/>
    <id>https://old.cz5h.com/article/e1b1.html</id>
    <published>2020-01-20T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.567Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这原本是我在知乎上的回答，偶然发现被折叠了，改了N次也无济于事，还是放在这里吧。</p></blockquote><h4 id="软路由能做的但硬路由不能做的"><a href="#软路由能做的但硬路由不能做的" class="headerlink" title="软路由能做的但硬路由不能做的"></a><strong>软路由能做的但硬路由不能做的</strong></h4><ul><li><strong>插件</strong>。不仅仅只是网络插件的差别，拿LEDE举例，网络插件恰恰被从酷软中心拿掉了，哈哈，求生欲很强。但剩下的那些插件可不是一无是处，比如ftp就很有用，还有很多插件，自己探索吧。</li></ul><a id="more"></a><ul><li><p><strong>小飞机</strong>。单独说下这个插件，对于软路由系统比如LEDE其支持更高级的Clash/Surge方式，这才是软路由使用网络查件的正确姿势。没错，这就是国内要想从TV看油管4K的必备，基本没什么其他解决方案。</p></li><li><p><strong>平台扩展</strong>。要搞清楚软路由是什么，它一般依托于工控机平台（MiniPC），拿我自己的软路由I57200U来说，我可以物理机装LEDE、装爱快；但当然，我也可以装PVM、装ESXi，然后以虚拟机的方式运行我的软路由系统，在网卡直通的条件下软路由性能基本不受影响。所以如果以ESXi的方式，你完全可以安装其他的虚拟机，打造自己的本地云主机。你可以装Linux挂脚本、可以装Win10/7挂机器人，总之，你可以有若干台24小时运行的虚拟机，结合公网IP或者DDNS，可以获得和阿里云主机基本一样的效果，说到这里，想想4核16G200M带宽（上行5M/s）的阿里云主机要多少钱一年。</p></li><li><p><strong>性能</strong>。终于说到性能了，我的看法，200M宽带及以上直接上软路由不用考虑其他（土豪钱多可以买高端路由）；其他的想全家网络番茄的，可以软路由，也可以硬路由刷梅林固件（梅林的插件的性能要差得多，但一般视频需求也足够了）。另外，看硬件，硬路由其实处理器性能很弱（比较同价位的软路由），外加需要同时支持无线网卡，这其实会影响整体的路由处理能力，但软路由+AP的模式，其实更适合高带宽场景。<br>总之，小水管无所谓性能，大水管才看的出来。</p></li></ul><h4 id="一些言论"><a href="#一些言论" class="headerlink" title="一些言论"></a><strong>一些言论</strong></h4><ul><li><p>关于<strong>路由系统</strong>，真不需要听别人的安利，LEDE是小白专属；</p></li><li><p>关于<strong>异地访问</strong>，动态公网IP现在并不难得到，相信我，在国外的我可以透过路由自由的访问到家中的每一台设备（只要被分配了内网IP），这种体验非常棒，尤其是搭配我的群晖NAS。当然这已经不太属于软路由的范畴了。</p></li><li><p>所谓<strong>优化</strong>，别被唬住，设备到位优化就到位了，说需要技巧的都是瞎扯；</p></li><li><p>所谓<strong>稳定</strong>，我上次的软路由完美运行了快半年了，其实是三个系统同时运行，Winserver2016、Ubuntu和爱快，爱快是我的主路由。最后为什么崩了？因为停电了！</p></li><li><p>所谓<strong>带机量</strong>，只要你家不是电影院，不来个百十号人，我相信中端路由（例如R7000）就完全可以满足。</p></li><li><p>所谓<strong>门槛</strong>，真没什么门槛，只要你认得汉字，都可以按照教程来，没人让你自己研究，网上的奶妈级教程多如牛毛~</p></li><li><p>所谓<strong>玩法</strong>，玩法真的太多了，硬路由功能相比之下太少了。</p></li></ul><p>最后，推荐几个土鳖上的软路由相关的频道：<a href="https://www.youtube.com/channel/UCaMih5WXqoXq7Hg0S_XJdOg" target="_blank" rel="external nofollow noopener noreferrer">Vedio Talk</a>、<a href="https://www.youtube.com/channel/UCpPswAyGzdRwWmiW5oTNnvA" target="_blank" rel="external nofollow noopener noreferrer">Big东东</a>、<a href="https://www.youtube.com/channel/UCxcuxsAjdnQaiRwYb5CVISw" target="_blank" rel="external nofollow noopener noreferrer">翼王</a></p><p>多看看这些实际操作的视频，也可以有个初步了解，尤其推荐VedioTalk，有很多很实用的入门知识和实际操作教程，如果对软路由跃跃欲试，那就赶快去看看吧。</p><blockquote><p>注：转载请注明出处，以下内容均为个人总结，不保证百分百正确性和完整性，请酌情参考</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这原本是我在知乎上的回答，偶然发现被折叠了，改了N次也无济于事，还是放在这里吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;软路由能做的但硬路由不能做的&quot;&gt;&lt;a href=&quot;#软路由能做的但硬路由不能做的&quot; class=&quot;headerlink&quot; title=&quot;软路由能做的但硬路由不能做的&quot;&gt;&lt;/a&gt;&lt;strong&gt;软路由能做的但硬路由不能做的&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;插件&lt;/strong&gt;。不仅仅只是网络插件的差别，拿LEDE举例，网络插件恰恰被从酷软中心拿掉了，哈哈，求生欲很强。但剩下的那些插件可不是一无是处，比如ftp就很有用，还有很多插件，自己探索吧。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="建站组网" scheme="https://old.cz5h.com/categories/%E5%BB%BA%E7%AB%99%E7%BB%84%E7%BD%91/"/>
    
    
      <category term="组网" scheme="https://old.cz5h.com/tags/%E7%BB%84%E7%BD%91/"/>
    
      <category term="路由" scheme="https://old.cz5h.com/tags/%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>纵览全局的文档组织模式（下）</title>
    <link href="https://old.cz5h.com/article/99a8.html"/>
    <id>https://old.cz5h.com/article/99a8.html</id>
    <published>2020-01-07T23:00:00.000Z</published>
    <updated>2020-03-07T04:07:45.015Z</updated>
    
    <content type="html"><![CDATA[<p>本文详细记录了如何在Hexo博客中实现用图组织内容的方法，但是，<strong>请注意：以下内容并非操作教程，仅表明相信思路以供参考，或许您可以实现出更好的版本，但仅依照下文内容并不保证一定能重现，一些尝试和debug的细节过于繁琐并未列出，如有疑问欢迎留言。</strong></p><a id="more"></a><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a><strong>代码实现</strong></h3><h4 id="hexo-extend-helper-register"><a href="#hexo-extend-helper-register" class="headerlink" title="hexo.extend.helper.register"></a><strong>hexo.extend.helper.register</strong></h4><p><a href="https://hexo.io/zh-tw/api/helper.html" target="_blank" rel="external nofollow noopener noreferrer">文档说明</a>，借助该函数，可以在Hexo渲染生成页面文件<strong>之前</strong>，完成用户的自定义JavaScript代码。</p><p>其实，在Hexo的框架内，ejs（或其他类型的）模板中的代码就是渲染生成html的代码，在这些页面中，借助Hexo内建的对象，比如.post对象和.achieves对象，可以访问到其中保存的全部文章信息及关联信息。例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> posts = hexo.locals.get(<span class="string">'posts'</span>);</span><br><span class="line"><span class="keyword">let</span> Xtags = posts.data[x].tags</span><br><span class="line"><span class="keyword">let</span> tagsY = Xtags.data[y].name</span><br></pre></td></tr></table></figure><p>上述内容，可以最终得到第<strong>X</strong>篇文章（POST）中的第<strong>Y</strong>个标签的文本。类似的方法同样可以得到某篇文章的Categories的信息。这就是构造可视化数据的基本方法。（在渲染前构造、借助.post对象）<br>关于位置，在ejs模板中放置构造代码当然可以，但是不优雅，Hexo中建议的插入方式是：</p><ol><li>在专门放置自定义JavaScript处理逻辑的文件中（plugin.js）放入代码，并使用内建函数。</li><li>在ejs（或其他）模板的相关位置，使用&lt;%%&gt;方式调用上述内建函数</li><li>使用console.log在渲染html时（hexo generate时的黑框）输出至Console里，拿到输出数据，放入到可视化的页面中即可。</li><li>或者一气呵成，直接将可视化的代码写入ejs模板中，即第一次渲染结束时产生的html就已经完成可视化页面的生成。</li></ol><p>由于处在尝试阶段，所以这里使用步骤3 的方法，这样各模块相对独立，对主题源代码入侵小。</p><h4 id="可视化页面"><a href="#可视化页面" class="headerlink" title="可视化页面"></a><strong>可视化页面</strong></h4><p>这里采用的是 D3.js 进行的可视化呈现，基本上是复用的 d3 的官方模板，但将文本信息一并和节点进行可视化展示。这段代码首先需要被抽取出来，这对于 d3 来说非常简单，只需注意引入的JavaScript库以及使用的json文本数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg width=<span class="string">"1000"</span> height=<span class="string">"1000"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span> <span class="comment">//d3绘制的内容全部放置在该画布上</span></span><br><span class="line">&lt;script src=<span class="string">"https://d3js.org/d3.v4.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> sss = <span class="string">'JSON字符串'</span>; <span class="comment">//这就是整个代码所可视化的数据</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> abc = <span class="built_in">parseInt</span>($(<span class="string">".card"</span>).css(<span class="string">"width"</span>).replace(<span class="string">"px"</span>,<span class="string">""</span>));</span><br><span class="line">  <span class="keyword">if</span>(abc&gt;<span class="number">1080</span>) abc=<span class="number">1050</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(abc&gt;<span class="number">1040</span>) abc=<span class="number">1020</span>;</span><br><span class="line">  <span class="keyword">else</span> abc=abc<span class="number">-40</span>;</span><br><span class="line">  $(<span class="string">"svg"</span>).css(<span class="string">"width"</span>,abc);</span><br><span class="line">  $(<span class="string">"svg"</span>).css(<span class="string">"height"</span>,abc); <span class="comment">//此部分将画布大小跟随文章页宽度变化</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> svg = d3.select(<span class="string">"svg"</span>),</span><br><span class="line">    width = abc,</span><br><span class="line">    height = abc;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> color = d3.scaleOrdinal(d3.schemeCategory20);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> simulation = d3.forceSimulation()</span><br><span class="line">    .force(<span class="string">"link"</span>, d3.forceLink().id(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.id; &#125;))</span><br><span class="line">      .force(<span class="string">"charge"</span>, d3.forceManyBody().strength(<span class="number">-180</span>).distanceMin(<span class="number">10</span>).distanceMax(<span class="number">300</span>).theta(<span class="number">1</span>))</span><br><span class="line">      .force(<span class="string">"center"</span>, d3.forceCenter(width / <span class="number">2</span> - <span class="number">40</span>, height / <span class="number">2</span> - <span class="number">30</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> graph = <span class="built_in">JSON</span>.parse(sss);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> link = svg.append(<span class="string">"g"</span>)</span><br><span class="line">      .attr(<span class="string">"class"</span>, <span class="string">"links"</span>)</span><br><span class="line">    .selectAll(<span class="string">"line"</span>)</span><br><span class="line">    .data(graph.links)</span><br><span class="line">    .enter().append(<span class="string">"line"</span>)</span><br><span class="line">      .attr(<span class="string">"stroke-width"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(d.value); &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> node = svg.append(<span class="string">"g"</span>)</span><br><span class="line">      .attr(<span class="string">"class"</span>, <span class="string">"nodes"</span>)</span><br><span class="line">    .selectAll(<span class="string">"g"</span>)</span><br><span class="line">    .data(graph.nodes)</span><br><span class="line">    .enter().append(<span class="string">"g"</span>)</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">var</span> circles = node.append(<span class="string">"circle"</span>)</span><br><span class="line">      .attr(<span class="string">"r"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; </span><br><span class="line"><span class="keyword">if</span>(d.group&gt;=<span class="number">100</span>) <span class="keyword">return</span> d.group/<span class="number">100</span>*(<span class="number">10.00</span>/<span class="number">48.00</span>)+<span class="number">1</span>; <span class="comment">//取整</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> d.group+<span class="number">1</span>;</span><br><span class="line">&#125;)</span><br><span class="line">      .attr(<span class="string">"fill"</span>,  <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; </span><br><span class="line"><span class="keyword">if</span>(d.group&gt;=<span class="number">100</span>) <span class="keyword">return</span> <span class="string">"#ff4081"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="string">"#3f51b5"</span>;</span><br><span class="line">&#125;)</span><br><span class="line">      .call(d3.drag()</span><br><span class="line">          .on(<span class="string">"start"</span>, dragstarted)</span><br><span class="line">          .on(<span class="string">"drag"</span>, dragged)</span><br><span class="line">          .on(<span class="string">"end"</span>, dragended));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> lables = node.append(<span class="string">"text"</span>)</span><br><span class="line">      .html(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d.group&gt;=<span class="number">100</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> p = d.group/<span class="number">100</span>*(<span class="number">10.00</span>/<span class="number">48.00</span>)+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"&lt;a style='font-size:"</span>+p+<span class="string">"px;font-weight:600;color:red' href='/categories/"</span>+d.id.replace(<span class="string">"_"</span>,<span class="string">"-"</span>)+<span class="string">"'&gt;"</span>+d.id+<span class="string">"&lt;/a&gt;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">var</span> q = d.group+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"&lt;a style='font-size:"</span>+q+<span class="string">"px;' href='/tags/"</span>+d.id+<span class="string">"'&gt;"</span>+d.id+<span class="string">"&lt;/a&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      .attr(<span class="string">'x'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; </span><br><span class="line"><span class="keyword">if</span>(d.group&gt;=<span class="number">100</span>) <span class="keyword">return</span> d.group/<span class="number">100</span>*(<span class="number">10.00</span>/<span class="number">48.00</span>)+<span class="number">5</span>; <span class="comment">//取整</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> d.group+<span class="number">3</span>;</span><br><span class="line">&#125;)</span><br><span class="line">      .attr(<span class="string">'y'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; </span><br><span class="line"><span class="keyword">if</span>(d.group&gt;=<span class="number">100</span>) <span class="keyword">return</span> d.group/<span class="number">100</span>*(<span class="number">3.00</span>/<span class="number">48.00</span>)+<span class="number">5</span>; <span class="comment">//取整</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">  node.append(<span class="string">"title"</span>)</span><br><span class="line">      .text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.id; &#125;);</span><br><span class="line"></span><br><span class="line">  simulation</span><br><span class="line">      .nodes(graph.nodes)</span><br><span class="line">      .on(<span class="string">"tick"</span>, ticked);</span><br><span class="line"></span><br><span class="line">  simulation.force(<span class="string">"link"</span>)</span><br><span class="line">      .links(graph.links);</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">ticked</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    link</span><br><span class="line">        .attr(<span class="string">"x1"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.source.x; &#125;)</span><br><span class="line">        .attr(<span class="string">"y1"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.source.y; &#125;)</span><br><span class="line">        .attr(<span class="string">"x2"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.target.x; &#125;)</span><br><span class="line">        .attr(<span class="string">"y2"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.target.y; &#125;);</span><br><span class="line"></span><br><span class="line">    node</span><br><span class="line">        .attr(<span class="string">"transform"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">"translate("</span> + d.x + <span class="string">","</span> + d.y + <span class="string">")"</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragstarted</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!d3.event.active) simulation.alphaTarget(<span class="number">0.3</span>).restart();</span><br><span class="line">  d.fx = d.x;</span><br><span class="line">  d.fy = d.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragged</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">  d.fx = d3.event.x;</span><br><span class="line">  d.fy = d3.event.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dragended</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!d3.event.active) simulation.alphaTarget(<span class="number">0</span>);</span><br><span class="line">  d.fx = <span class="literal">null</span>;</span><br><span class="line">  d.fy = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="构造数据格式"><a href="#构造数据格式" class="headerlink" title="构造数据格式"></a><strong>构造数据格式</strong></h4><p>需要匹配示例的输入格式，这样才能最大化的复用代码。上述内容的官方示例中使用的格式是：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"nodes"</span>: [</span><br><span class="line">    &#123;<span class="attr">"id"</span>: <span class="string">"Myriel"</span>, <span class="attr">"group"</span>: <span class="number">1</span>&#125;,</span><br><span class="line">    ... ...</span><br><span class="line">    &#123;<span class="attr">"id"</span>: <span class="string">"Mme.Hucheloup"</span>, <span class="attr">"group"</span>: <span class="number">8</span>&#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"links"</span>: [</span><br><span class="line">    &#123;<span class="attr">"source"</span>: <span class="string">"Napoleon"</span>, <span class="attr">"target"</span>: <span class="string">"Myriel"</span>, <span class="attr">"value"</span>: <span class="number">1</span>&#125;,</span><br><span class="line">    ... ...</span><br><span class="line">    &#123;<span class="attr">"source"</span>: <span class="string">"Mme.Hucheloup"</span>, <span class="attr">"target"</span>: <span class="string">"Enjolras"</span>, <span class="attr">"value"</span>: <span class="number">1</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>即，需要在可视化页面被渲染出来之前就得到上述格式的数据，这便是要借助Hexo的辅助函数来完成，将构造数据的代码封装成一个函数，然后在<strong>适当的</strong>ejs模板中调用一下，即可在 hexo generate 之后，从Console中拿到构造好的数据。</p><p>在此，构造规则是：<strong>类别永远单向的指向标签，类别不互连，标签不互连</strong>，同时，还需要计算的是类别和标签出现的<strong>次数</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.helper.register(<span class="string">'getPostData'</span>, () =&gt; &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> posts = hexo.locals.get(<span class="string">'posts'</span>);</span><br><span class="line"><span class="keyword">var</span> tagsMap = <span class="keyword">new</span> <span class="built_in">Map</span>(); <span class="comment">//counter</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 利用posts对象获取类名和标签名</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt; posts.length; i++)&#123;</span><br><span class="line"><span class="keyword">var</span> nameCS;</span><br><span class="line">posts.data[i].categories.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">k, v</span>) </span>&#123;</span><br><span class="line">nameCS = k.name;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j&lt; posts.data[i].tags.length; j++)&#123;</span><br><span class="line"><span class="keyword">var</span> pname = posts.data[i].tags.data[j].name;</span><br><span class="line"><span class="keyword">var</span> pval = tagsMap.get(pname);</span><br><span class="line"><span class="keyword">if</span>(pval != <span class="literal">null</span>)&#123;  </span><br><span class="line"><span class="comment">// 将类名和标签名压制在一起</span></span><br><span class="line">tagsMap.set(nameCS+<span class="string">"&gt;"</span>+pname, <span class="built_in">parseInt</span>(tagsMap.get(pname))+<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">tagsMap.set(nameCS+<span class="string">"&gt;"</span>+pname, <span class="number">1</span>);  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//由此开始，构造符合特定格式的JSON字符串  </span></span><br><span class="line"><span class="keyword">let</span> obj= [];</span><br><span class="line"><span class="keyword">let</span> setss =  <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span>[k,v] <span class="keyword">of</span> tagsMap) &#123;</span><br><span class="line">    <span class="keyword">var</span> st = k.split(<span class="string">"&gt;"</span>);</span><br><span class="line">    <span class="keyword">var</span> str = &#123;&#125;;</span><br><span class="line">    str.source = st[<span class="number">0</span>];</span><br><span class="line">    str.target = st[<span class="number">1</span>];</span><br><span class="line">    str.value  = v;</span><br><span class="line">obj.push(str);</span><br><span class="line"><span class="keyword">if</span>(setss.get(st[<span class="number">0</span>]) != <span class="literal">null</span>)&#123;  </span><br><span class="line"><span class="comment">// 类节点 每次加100</span></span><br><span class="line">setss.set(st[<span class="number">0</span>], <span class="built_in">parseInt</span>(setss.get(st[<span class="number">0</span>]))+<span class="number">100</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">setss.set(st[<span class="number">0</span>], <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(setss.get(st[<span class="number">1</span>].trim()) != <span class="literal">null</span>)&#123;  </span><br><span class="line"><span class="comment">// 标签节点 每次加1</span></span><br><span class="line">setss.set(st[<span class="number">1</span>], <span class="built_in">parseInt</span>(setss.get(st[<span class="number">1</span>]))+<span class="number">1</span>);</span><br><span class="line">setss.set(st[<span class="number">0</span>], <span class="built_in">parseInt</span>(setss.get(st[<span class="number">0</span>]))+<span class="number">100</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">setss.set(st[<span class="number">1</span>], <span class="number">1</span>);</span><br><span class="line">setss.set(st[<span class="number">0</span>], <span class="built_in">parseInt</span>(setss.get(st[<span class="number">0</span>]))+<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obk= [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> [k,v] <span class="keyword">of</span> setss) &#123; </span><br><span class="line">   <span class="keyword">var</span> str = &#123;&#125;;</span><br><span class="line">   str.id = k.trim();</span><br><span class="line">   str.group = v; <span class="comment">//通过数量分类</span></span><br><span class="line">   obk.push(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> d3str = &#123;&#125;;</span><br><span class="line">d3str.nodes = obk;</span><br><span class="line">d3str.links = obj;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(d3str).trim()); <span class="comment">//按第三步说的，可以手动放置数据到可视化页面</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">JSON</span>.stringify(d3str).trim(); <span class="comment">//或按第四步，将数据返回至ejs模板中，直接渲染出可视化页面</span></span><br><span class="line"> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>注意上述代码中的注释，这里利用了类节点和标签节点出现的次数，来分辨两种节点的种类，因为绘制时类节点和标签节点都是一视同仁的被绘制。如何分辨呢？在可视化页面中有以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> circles = node.append(<span class="string">"circle"</span>)</span><br><span class="line">  .attr(<span class="string">"r"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; </span><br><span class="line"><span class="keyword">if</span>(d.group&gt;=<span class="number">100</span>) <span class="keyword">return</span> d.group/<span class="number">100</span>*(<span class="number">10.00</span>/<span class="number">48.00</span>)+<span class="number">1</span>; <span class="comment">//取整</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> d.group+<span class="number">1</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>按照不同的次数计算步长，得到的类节点的次数一定是<strong>100</strong>的倍数，而标签节点的次数一定小于<strong>100</strong>，这个值可以设的很大，从而让两者不可能出现交集。在判断时“如果次数大于100”，那么就是类节点，取整百的好处是，<strong>归一化方便</strong>。例如上述代码需要给定节点的大小，类节点的次数统计可能是100-4800（1-48次），而标签节点的次数却是1-10（1-10次），如是，两者应绘制的一样大。这就需要归一化，只需要缩放100倍再乘比例系数即可。</p><h4 id="最终调用"><a href="#最终调用" class="headerlink" title="最终调用"></a><strong>最终调用</strong></h4><p>上文中<strong>hexo.extend.helper.register(‘getPostData’, () =&gt; {}）</strong>的“getPostData”即注册的函数名，在ejs（或其他）模板中直接调用即可。但由于我希望把这个可视化模块放在我的评论页或者关于页面，而这两个页面都不是渲染出来的，所以就只能采用先前第三步的做法，只构造出数据，再手动放入可视化页面。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在 index.ejs 内添加：</span></span><br><span class="line">&lt;% <span class="keyword">var</span> arr = getPostData(); %&gt;</span><br></pre></td></tr></table></figure><p>所以，需要做的就是找一个渲染页面的ejs，调用下该函数即可，这里放在index.ejs里，注意由于分页可能该模板会构造很多次，所以就会重复输出很多遍JSON数据。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.jsdelivr.net/gh/TianZonglin/tuchuang/img/20200229003149.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p>基本上还是抓住代码执行的输入输出做文章。从待改造代码的输入找格式，然后从原代码的框架中构造出该格式的数据（输出），就像适配一样，如此便可以利用Hexo可以获得的数据，借助D3.js等可视化库，把自己的博客（知识系统）做一个梳理和呈现，从而更好的帮助自己<strong>管理</strong>和<strong>维护</strong>，也给了自己<strong>二次挖掘</strong>自己知识的机会。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文详细记录了如何在Hexo博客中实现用图组织内容的方法，但是，&lt;strong&gt;请注意：以下内容并非操作教程，仅表明相信思路以供参考，或许您可以实现出更好的版本，但仅依照下文内容并不保证一定能重现，一些尝试和debug的细节过于繁琐并未列出，如有疑问欢迎留言。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="研究方向" scheme="https://old.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="力导向布局" scheme="https://old.cz5h.com/tags/%E5%8A%9B%E5%AF%BC%E5%90%91%E5%B8%83%E5%B1%80/"/>
    
      <category term="图数据" scheme="https://old.cz5h.com/tags/%E5%9B%BE%E6%95%B0%E6%8D%AE/"/>
    
      <category term="D3" scheme="https://old.cz5h.com/tags/D3/"/>
    
      <category term="主题扩展" scheme="https://old.cz5h.com/tags/%E4%B8%BB%E9%A2%98%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>纵览全局的文档组织模式（上）</title>
    <link href="https://old.cz5h.com/article/65a9.html"/>
    <id>https://old.cz5h.com/article/65a9.html</id>
    <published>2020-01-05T23:00:00.000Z</published>
    <updated>2020-03-07T04:07:37.215Z</updated>
    
    <content type="html"><![CDATA[<p>对知识系统（eg.博客）而言，良好的组织结构是极为重要的，尤其是当内容增多，关联复杂后显得尤为重要。传统的“分类(Categories)+标签(Tags)”的二级模式虽足以应付大部分用户的需求，但本质上其还是需要用户对已有分类和标签有良好的组织，这对很多用户来说是根本做不到，因为我们往往缺的就是这种“纵览全局”的能力。</p><a id="more"></a><p>分类往往越分越多，标签也是随意放置，久而久之，不仅已有的分类和标签杂乱无章，更为甚者是新增内容时根本不知从何下手，往往需要遍历过往的标签和分类，才能做出最终定夺。现在，通过图布局的方式，可以以一种近乎完美的方式对复杂的内容进行组织，详细效果请查看 <a href="https://old.cz5h.com/other/page_comment.html">该页面</a>。</p><h3 id="纵览全局"><a href="#纵览全局" class="headerlink" title="纵览全局"></a><strong>纵览全局</strong></h3><p>对于知识系统（之后均以博客代指）而言，传统的模式只是简单的分支，或者称其为树形结构，在探索过程中，用户就如同“蚂蚁”一样，只得选择先从哪进入，然后再进入到哪里。对于单篇内容而言并无影响，但当需要感知全局时，往往这种模式就会出现问题。</p><h4 id="分级-树形组织方式的不足"><a href="#分级-树形组织方式的不足" class="headerlink" title="分级/树形组织方式的不足"></a><strong>分级/树形组织方式的不足</strong></h4><ul><li><strong>用户开始便直接希望查阅某些内容，且不确定分类时，无法定位（局部要求）</strong><br>可以通过搜索功能完成该需求。</li><li><strong>新增分类和标签时，缺少对已有项的感知能力（全局要求）</strong><br>尤其对于标签，会更加的随意和杂乱，会出现重复、同义等等问题，在每次打标签时都要头疼一番。</li><li><strong>对于所打的标记，没有评价方法，永远不知道分类和标签是否匹配（全局要求）</strong><br>对于已存在的标签或分类，这样打标签是否合理，由于标签的“松散”特性，不同分类中可以出现同一标签，这样在传统分级模式下，分类和标签的契合程度如何，系统的维护者无从知晓。</li></ul><h4 id="天然的解决方案：图布局"><a href="#天然的解决方案：图布局" class="headerlink" title="天然的解决方案：图布局"></a><strong>天然的解决方案：图布局</strong></h4><p>分级/树形标记模式本身就是一个分类过程，自己的知识内容（博客文章）是对象，维护者将其放置在不同的类别下。<strong>标签(Tags)</strong>则更像是分类过程中的副产物，更贴近文章内容，但又言简意赅，通过分级的思考方式，分类和标签和文章的关系是：</p><p><strong>分类-标签-文章（1:M:N）</strong></p><p>对于上述关系，分别用A、B、C表示的话，则整个系统其实就是一个“Ai-Bi-Ci”的三元组集合。该集合的好坏（即质量）就是其在<strong>语义上的</strong>契合程度，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">分类:军事 -&gt; 标签:爆炸 -&gt; 文章:伊拉克遭遇恐怖袭击</span><br><span class="line">分类:娱乐 -&gt; 标签:爆炸 -&gt; 文章:阿富汗遭遇恐怖袭击</span><br></pre></td></tr></table></figure><p>当抽象为网络/图之后，军事类别和娱乐类别会通过“爆炸”这一标签相连，如是，明显的会发现“爆炸”位置不对。（虽然例子很蠢，但当语义区分模糊、标签数量繁多时，极易出现该情况）。下面直接拿已完成的布局来解释：</p><p><strong>粉红色为分类、蓝色为标签、节点半径为被使用的次数</strong></p><ul><li><p>语义不符的连接点（异常的跨类标签），如果连接点对某一方语义不匹配，那么很可能该文章是<strong>特殊的</strong>，或者该标签不应该出现在该文章。（下图里可视化的文章<a href="https://old.cz5h.com/article/2019-8-11%20%E5%91%8A%E5%88%AB%E3%80%8A%E9%95%BF%E5%AE%89%E5%8D%81%E4%BA%8C%E6%97%B6%E8%BE%B0%E3%80%8B.html">在这儿</a>，属于特殊文章，正常“生活分类”和“可视化”的语义并不匹配）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae04.alicdn.com/kf/U2beb48a41f60408eb225a3dd6cb3d4552.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure></li><li><p>合格的连接点（跨分类的标签）：虽然标签出现在不同分类中是非常正常的，例如“总结”，可以出现在任何分类中。但类似“总结”这类标签往往数量很多，即多次的出现在不同的类别中，那我们就说这是一个合格的<strong>跨分类标签</strong>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae03.alicdn.com/kf/U9fa6ab6d5ea54f77a608c079bf4d74beP.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure></li><li><p>对于分类点，以本博客为例，由于是对已存在数据进行分析，所以如果某分类下属节点不足，那么高度怀疑该分类不合理，除非是需要日后扩充的分类。这一需求在图布局的视图下非常容易分辨出来，合格的类别应该有众多叶节点，当叶节点不足，则应考虑<strong>将其降级至标签</strong>。（例如下图中的“朴素贝叶斯”，可将其降级为标签，并归类到“研究方向”中）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae03.alicdn.com/kf/U3a58982203d84a5facfdb5569c8f4da9u.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure></li></ul><p><strong>值得注意的一点是：</strong> 这里使用的图布局使用力导向(Force-directed)布局算法，<strong>相关则相近，无关则疏远</strong>，又完美的给布局结果以语义上的解释，即：</p><ul><li>当两个类别及其叶子节点距离很远时，其两者基本无关</li><li>当两个类簇距离很近时，其高度相关</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae01.alicdn.com/kf/U9327897711f44e908795f20dd3b3f297T.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="反推设计"><a href="#反推设计" class="headerlink" title="反推设计"></a><strong>反推设计</strong></h3><p>上节中的分析看似很有道理，布局结果的使用也非常方便，那么如何从无到有将其构建出来？主要有以下几个方面：</p><ul><li><strong>天然的三元组集合：</strong>文章的特性（篇幅长）决定了其不能参与整个构建和评价过程，那么剩下的二元组是天然的<strong>“关系数据”</strong>，对于关系数据的可视化，<strong>图布局算法/模式</strong>首当其冲。</li><li><strong>分析需要呈现的维度：</strong>对于任意节点（布局时类别和标签并无分别）来说，主要有以下维度信息：<ol><li>自己（如果是类别）包含哪些标签；</li><li>自己是什么类型的节点（类别？标签？）；</li><li>自己被使用了几次；</li></ol></li><li><strong>对应的可视化要素：</strong><br>a. 图中节点的邻节点（点、线）<br>b. 类别为粉色标签为蓝色（颜色）<br>c. 次数与节点的半径成比例（圆面积）</li><li><strong>还可以附着信息（扩展维度）的要素：</strong><ol><li>节点的形状（三角形、圆、方）</li><li>连线的颜色（红、蓝）</li><li>连线的线型（虚线、实线）</li></ol></li></ul><p>上述过程中，确定<strong>“图布局”</strong>模式是基础，剩下的无非是<strong>将信息绑定到可视化元素上</strong>，例如，已实现的布局将“类别/标签”用<strong>颜色</strong>区分，其实用<strong>形状</strong>等其他可视化元素区分也完全可以。</p><h3 id="垂直打击"><a href="#垂直打击" class="headerlink" title="垂直打击"></a><strong>垂直打击</strong></h3><p>到此为止，只是上层结构，类似数据库存储，搞了半天只是在搞索引，并没有触碰到数据，所以目前为止该网络并没有直通最底层（文章内容）的能力，这个问题恰好被<strong>Hexo的文件结构</strong>所解决，Hexo给每个标签和每个分类都渲染了单独的页面，关联的文章被放置在页面中，在此，直接通过<strong>节点的文本信息构造访问地址</strong>，将其绑定到文本上，即可点击后跳转到相关页面，虽然不是直接跳转文章，但也可以说具备相当的垂直打击能力了。</p><p><strong>进阶版本：变的更强</strong></p><p>简单粗暴的加入之前三元组被抛弃掉的文章信息，但由于加入后过于散乱，所以有必要将文章信息固定，以便于视觉呈现。如下图（d3.js实现的、用于可视化编程概念的可视化模型）：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae03.alicdn.com/kf/U2be0137ae48c4538a5bcb4e8da2d0db3u.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>上图就是简单的<strong>带固定节点的力导向布局</strong>，但其实现代码比较复杂，目前处在构造数据阶段。一般的可视化模型套用的步骤：</p><p><strong>阅读原站代码 -&gt; 从原站抽离可视化部分 -&gt; 搞清调用数据的方法及格式 -&gt; 构造同样的数据 -&gt; 独立运行 -&gt; 放回自己的站点内</strong></p><h3 id="问题迎刃而解"><a href="#问题迎刃而解" class="headerlink" title="问题迎刃而解"></a><strong>问题迎刃而解</strong></h3><p>到此，对于分级/树形分类的三点不足，可以发现很轻松就可以解决。既有全局视角，又可以同时具备直达的能力，对于组织内容数量较高（超过50）的站点非常适合该模式的导航、或辅助探索。</p><p>扯犊子完毕，下一篇（分为上下两篇）将详细说明一下如何遵循上节中的套用步骤、借助Hexo的辅助函數（Helper）来一步步实现的该可视化功能的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://ae04.alicdn.com/kf/U726402819986478a9067261fe59f92a3w.png" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p><a href="https://old.cz5h.com/other/page_comment.html">传送门，请用PC查看</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对知识系统（eg.博客）而言，良好的组织结构是极为重要的，尤其是当内容增多，关联复杂后显得尤为重要。传统的“分类(Categories)+标签(Tags)”的二级模式虽足以应付大部分用户的需求，但本质上其还是需要用户对已有分类和标签有良好的组织，这对很多用户来说是根本做不到，因为我们往往缺的就是这种“纵览全局”的能力。&lt;/p&gt;
    
    </summary>
    
      <category term="研究方向" scheme="https://old.cz5h.com/categories/%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91/"/>
    
    
      <category term="力导向布局" scheme="https://old.cz5h.com/tags/%E5%8A%9B%E5%AF%BC%E5%90%91%E5%B8%83%E5%B1%80/"/>
    
      <category term="图数据" scheme="https://old.cz5h.com/tags/%E5%9B%BE%E6%95%B0%E6%8D%AE/"/>
    
      <category term="D3" scheme="https://old.cz5h.com/tags/D3/"/>
    
      <category term="主题扩展" scheme="https://old.cz5h.com/tags/%E4%B8%BB%E9%A2%98%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>Summary and Review of 2019, B</title>
    <link href="https://old.cz5h.com/article/9c47.html"/>
    <id>https://old.cz5h.com/article/9c47.html</id>
    <published>2019-12-30T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.546Z</updated>
    
    <content type="html"><![CDATA[<p><strong>This article is a set of memories, belonging to the list of RMBATS</strong>.</p><h3 id="August"><a href="#August" class="headerlink" title="August "></a><strong>August </strong></h3><p><strong>From</strong> July, after I finished my master’s defense, I had been modifying my paper to try to publish it. It’s a long and boring time, which time I have to see the long papers and try to shorten it to a  condensed version. So, in the head of this month, I do this paperwork every day with the hot summer weather. To against the summer, my friend and I started to sleep in the lab. Because the lab has an air-condition that we can let it open all night to keep low temperatures. It’s a funny period, my friend slept with the foldable bed he bought. I didn’t have that bed, so I put the chairs together and slept on them. I have to admit that it’s not a good place to sleep, we have to wake up early in case someone else finds us. Anyway, at least it’s cold enough, we can overcome any problems but the hot temperature at that time.   </p><a id="more"></a><p><strong>After</strong> the main tasks finished, the day I have to leave finally come to see me. It’s time to say goodbye to NEU, although I want to say that many times before that time. No feelings about sadness, but I felt that I hadn’t prepared for that. I knew that I have wasted too much time here, continue to stay here could help me nothing. So, on August 16, I asked my supervisor that I want to go, he didn’t try to keep me anymore. I left my university in that afternoon, and my two friends come to see me off. I arrived home at about 11:00 pm. It’s a remarkable day cause it’s my birthday and I farewelled to my school on this unique day.   </p><p><strong>A</strong> few days later, I started to prepare the materials needed for going abroad. The first thing I need to do is to submit the contract to the scholarship council office in Beijing. So, father and I spent almost one week in Beijing and visited many attractions and scenic areas. But, unfortunately, we didn’t buy a ticket to enter the Forbidden City. Of course, we climbed the Great Wall. In those days, we lived in different hotels every night, and one day, we lived near. Most of the time we take the subway and ride the shared bikes. I need to say that is a wonderful way to travel around Beijing with this kind of bikes, not too expensive, but you can go anywhere you want.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax3.sinaimg.cn/large/006YHUzUgy1gafrjvk2zlj31wq0x77wn.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="September"><a href="#September" class="headerlink" title="September"></a><strong>September</strong></h3><p><strong>The</strong> time came to September, the longest summer vacation was coming. It could be more than three months, which means I need to stay at home for about 100 days. I supposed to finish many things, but actually, I wasted most of the time. The environment and atmosphere are not good for focusing. Sometimes, I watched TV all day and didn’t want to do anything. Generally speaking, it’s not a healthy period of time.  </p><p><strong>At</strong> the beginning of this month, I spent a lot of time to install the new router and build the new home network. Then, I tried to let my NAS work in the local network and connect it with the smart TV. The process was complex, I need to test them, then improve them. Finally, every component worked well. And with the DDNS service of Synology, I could let the whole system access to the Internet. Now, this system is still working very well. I can check and fix all problems with the remote connection, even though I stay on the other side of the earth!</p><p><strong>Then</strong>, one interesting experience is that I joined an activity about assisting-poverty. People come from the local educational department went inside the countryside by themselves. With the stuff of rice, eating-oil or white flour, they can help these poor people try to get rid of poverty. This is a very meaningful and useful measure to help poverty, but the question is obvious. These things could help them through away the current hard time, but can’t have any benefits on their hard life in the long run. Anyway, it’s a good trend for poverty, maybe we could find a better way to help them.</p><p><strong>At</strong> the end of September, I received the email to get the visa of the Netherlands from the embassy in Beijing. So, I came to Beijing again, after that, I came to Wuhan to meet my bachelor supervisor as I promised before. What I didn’t expect was that my classmate invited me to play together. So after leaving Wuhan, I went to Qinhuangdao with him and spent two days there. These things all happened before the National Day, the last week of September, which left me a deep impression. I met and talked with my supervisor again. I can’t imagine the uncertain way of my future we discussed last year incredible came true at that time. Although we shared a simple lunch together, we talked about many things. I can feel his happiness from his face. After saying goodbye to HZAU, I had a very enjoyable two days with my other friend. Then, I came to Tianjin right away and met with another friend in Qinhuangdao, and spent two days to visit Beidaihe. </p><p><img src="//tvax4.sinaimg.cn/large/006YHUzUgy1gafrjam9i0j31st0ykx6u.jpg" alt="image"></p><h3 id="October"><a href="#October" class="headerlink" title="October"></a><strong>October</strong></h3><p><strong>On</strong> the National Day, of course, I stayed at home and watched the celebration show on the TV.  The main theme for this month is watching TV and eating with others. I spent some good days with much meaningful time shared with my family members. Eating lunch or dinner with them actually is a way to say goodbye. After all, I need to leave them for more than one year, which means we can’t see each other face to face anymore. As I have a big family, so I ate many times with them outside this month. Besides that, I also visited some local interesting place and took some beautiful photos. This is my first serious attempt to explore my hometown. I admit that I supposed to do that early, but only then did I discover the beauty of my hometown.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax4.sinaimg.cn/large/006YHUzUgy1gafriikw76j31sf0ymu12.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="November"><a href="#November" class="headerlink" title="November"></a><strong>November</strong></h3><p><strong>Since</strong> October, time passed very fast, and every day I worried about the coming of the day I need to leave. When the time came to November, I prepared everything and wait the final day. On November 6, I spent the last night at home, I have forgotten the feelings but that was definitely a hard time for me. Although it likes a normal leaving from home, I knew this time I would leave for a long time. The fight was not feeling well cause it covered the whole sleeping time. After solving some troubles, I finally arrived in the Netherlands. I finally touched the ground far away from my home. Not have too many strange feelings, I adapt to the foreign environment very quickly. With the help of an elder friend from Eindhoven, I came to my hostel smoothly. I surprised that it just about one hour from Amsterdam to Utrecht by car. </p><p><strong>In</strong> the start days, I suffered from the time difference, I spent a long time to adjust the sleeping time. Now I have fully adapted the life here. The most important thing then was the meeting with my supervisor. Before that, we didn’t meet each other, so it was nervous when I first met him, but he is a nice person and a good guide man. Actually we talked a lot, and he told me a lot of related things I need to learn. Then the long time of self-study came, till now, I still in the first step. Alex, my supervisor, said my horizon of this area could extend bigger and bigger, but I need to start from the smallest circle. This is a big difference compared with the speed of study in China. </p><p><strong>This</strong> month, the first remarkable time was to visit my friend in Eindhoven. The friend and I all come from the same place in China so that she is almost like a relative for me. We had a warmful dinner time and took part in the GLOW 2019 lighting show together. One week later, I followed my colleagues to come to Groningen to meet with some other friends. They are all my supervisor’s Ph.D. candidates. Because Alex worked in Groningen before, so some of his students still lived there, not moved to Utrecht with him. We ate hot-pot and played a table game together. What a good time! I even first meet a friend come from Taiwan, she is a nice girl and study in Groningen for her master degree. Compared with Utrecht, I like Groningen more, because of the low housing rent and the low cost of living. </p><p><img src="//tvax3.sinaimg.cn/large/006YHUzUgy1gafrhcmo4wj31oo0ylu12.jpg" alt="image"></p><h3 id="December"><a href="#December" class="headerlink" title="December"></a><strong>December</strong></h3><p><strong>After</strong> Black Friday, I spent one week to pick up my delivery. At the end of the first week of December, I received them all, then I started to build my own mini-ITX computer. Now, the machine works very well, and thanks to the small pc, I can get rid of the feeling of alone. After the half of this month, people slow down to prepare the Christmas day and the New year. Although we Chinese don’t care about these two festivals too much, we still happy to join the different activities for them. I joined the final borrel drinks party of my faculty. And also joined the Christmas party of the Chinese Utrecht Christian Church. Besides, we Chinese colleagues also spent some special party, like making dumplings together in the winter solstice. And these days, I also developed a good relationship with my hoster, a nice man comes from Pakistan. He invited me to his home and I had a wonderful daytime with him and his son. What’s more, I also made some Chinese friends here, Mr. Wei and Ms. Wang are a Chinese couple here. I came to their home and ate dinner together many times. It’s Ms. Wang who takes me to the church activity, and then we visit the Castle De Haar by bike. I took some photos of her using my camera, she liked them very much. The other Chinese is the owner of a Chinese restaurant, I went to their restaurant to eat dinner for many times. One of her friends is a researcher from  Maastricht University, we talked a lot about life and study. </p><p><img src="//tvax2.sinaimg.cn/large/006YHUzUgy1gafrgn6ih5j31r50yokjr.jpg" alt="image"></p><p><strong>Today</strong> is December 31, the last day of 2019, I will go to Eindhoven by train to attend the party. Tomorrow is no difference between today, but, it is a truly time point to have a new start. New beginning needs old ending. A good summary and review of the past are essential for a new and bright future. Try to do that, discover and explore yourself!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;This article is a set of memories, belonging to the list of RMBATS&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;August&quot;&gt;&lt;a href=&quot;#August&quot; class=&quot;headerlink&quot; title=&quot;August &quot;&gt;&lt;/a&gt;&lt;strong&gt;August &lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;From&lt;/strong&gt; July, after I finished my master’s defense, I had been modifying my paper to try to publish it. It’s a long and boring time, which time I have to see the long papers and try to shorten it to a  condensed version. So, in the head of this month, I do this paperwork every day with the hot summer weather. To against the summer, my friend and I started to sleep in the lab. Because the lab has an air-condition that we can let it open all night to keep low temperatures. It’s a funny period, my friend slept with the foldable bed he bought. I didn’t have that bed, so I put the chairs together and slept on them. I have to admit that it’s not a good place to sleep, we have to wake up early in case someone else finds us. Anyway, at least it’s cold enough, we can overcome any problems but the hot temperature at that time.   &lt;/p&gt;
    
    </summary>
    
      <category term="Daily_Life" scheme="https://old.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="总结" scheme="https://old.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="Summary" scheme="https://old.cz5h.com/tags/Summary/"/>
    
      <category term="Writing" scheme="https://old.cz5h.com/tags/Writing/"/>
    
      <category term="生活" scheme="https://old.cz5h.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Summary and Review of 2019, A</title>
    <link href="https://old.cz5h.com/article/9d07.html"/>
    <id>https://old.cz5h.com/article/9d07.html</id>
    <published>2019-12-26T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.547Z</updated>
    
    <content type="html"><![CDATA[<p><strong>This article is a set of memories, belonging to the list of RMBATS.</strong></p><p>Say goodbye to 2019, the year that changed my life and destiny.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax3.sinaimg.cn/large/006YHUzUgy1gaj51qzdc0j31z40gjnpe.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="The-first-half-of-2019"><a href="#The-first-half-of-2019" class="headerlink" title="The first half of 2019"></a><strong>The first half of 2019</strong></h3><p><strong>F</strong>rom the second half of 2018, I’ve been working on the application of CSC. All things happened can be found in last year’s summary. This year is the harvest time. Here, I’ll put those important things together with some good pictures, which likes the mode of last year’s summary.</p><a id="more"></a><p><strong>T</strong>he part of the beginning of this year has been recorded in the summary of 2018, including the first two months. From March, I came back to school after finishing the winter vacation. This semester is a special period for me because all my classmates and roommates left school. They had finished their whole study and master’s defence before the winter vacation. But for me, I had to start the way with myself, I need to write my master’s thesis and finish the relative experiments in three months. Besides, in March, I also need to prepare all documents and fill in the online CSC applying system. And to prepare a second choice for myself, I got in touch with a professor of SDU. The professor, Mr Yunhai, gave me several hard questions that I need to take a lot of time to read his papers to make an answer. </p><p><strong>A</strong>fter March, I started a long time with paperwork and coding. I went to the lab every day, which is ironic to me that I hardly ever went to the lab before this semester. At that time, I got a good experience with other students. The whole lab just had one 3-grade student so that everyone else showed their respect for me and I helped them to solve some troubles. Most time I was writing my master’s thesis. It’s hard to have a good structure and start, I took much time to discuss with my professor. </p><p><strong>T</strong>ime escaped fast, after April, I started to worry about the result of my application. I worried about what I should do if the application was failed. This kind of feeling around me for the whole of May. On May 31, the final result came out, I still remember that afternoon. I refreshed the browser again and again and kept my eyes on QQ to catch every message. Someone started to post good news in the QQ group, I even can’t breathe at that time. Finally, the red pages jumped out and I almost cried when I see this good news. I can’t describe the happiness after I received the good news, I went to play the badminton with my friends. That day, I realized what is relaxation, and finally, the burden in my heart was put down.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva4.sinaimg.cn/large/006YHUzUgy1gahvxt21esj31ua0yme87.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="June"><a href="#June" class="headerlink" title="June"></a><strong>June</strong></h3><p><strong>T</strong>ime to June, the feeling of happiness almost disappeared after I came back from home. Instead, I was nervous about the master’s defence, I thought the final day would be mid of June, so I worked very hard to finish the thesis. I used April to develop the System and used two months to write, but actually, the content mostly finished in June. Finally, I finished the thesis with more than 70 pages and 30,000 Chinese characters. It’s a huge project, the system built with the cluster of 16 PCs, and the whole project contains more than 10,000 code lines. I finish them all in three months, maybe I will write one post to introduce my thesis and my research works. </p><p><strong>B</strong>esides, from that moment, I already started to pack my stuff. Because I delayed my ending time, I had moved out my original room to a new one, which means I’ve packed them once. But when I try to do this again, there were still too many things to order into my box. Finally, I used 3 big boxes to contain them, and deliver them to home with a high price.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax2.sinaimg.cn/large/006YHUzUgy1gahvyyru1gj31wr0xyx6u.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="July"><a href="#July" class="headerlink" title="July"></a><strong>July</strong></h3><p><strong>B</strong>efore July, every month has one Chinese festival so that we have at least one week of free time. With these small vacations, I could come back home every month in the first half of the year. But from this month, I didn’t come back until I left school. In this final period of time, I played a lot with my friend, mostly we play badminton in the gym, we shared a good time in the lab. </p><p><strong>I</strong>n the first week of July, I finally faced the day of master’s defence. To my surprise, we 3 students finished our defence with 7 professors in a small room. Almost all the respected professor attended our defence, including the leader of our faculty. The situation was more serious than the first time of defence. After that, I started to edit thesis, check the content and finally make them into one book. After finishing them all, the boring task came to me. I need to edit the long thesis to 6 or 7 pages. I did this for about one month from July to the mid of August.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax4.sinaimg.cn/large/006YHUzUgy1gahw062nspj31wj0yn4qv.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;This article is a set of memories, belonging to the list of RMBATS.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Say goodbye to 2019, the year that changed my life and destiny.&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;//tvax3.sinaimg.cn/large/006YHUzUgy1gaj51qzdc0j31z40gjnpe.jpg&quot; alt=&quot;此处为本页面内的一张图片&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;&lt;/div&gt;
            &lt;/figure&gt;
&lt;h3 id=&quot;The-first-half-of-2019&quot;&gt;&lt;a href=&quot;#The-first-half-of-2019&quot; class=&quot;headerlink&quot; title=&quot;The first half of 2019&quot;&gt;&lt;/a&gt;&lt;strong&gt;The first half of 2019&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;F&lt;/strong&gt;rom the second half of 2018, I’ve been working on the application of CSC. All things happened can be found in last year’s summary. This year is the harvest time. Here, I’ll put those important things together with some good pictures, which likes the mode of last year’s summary.&lt;/p&gt;
    
    </summary>
    
      <category term="Daily_Life" scheme="https://old.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="总结" scheme="https://old.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="Summary" scheme="https://old.cz5h.com/tags/Summary/"/>
    
      <category term="Writing" scheme="https://old.cz5h.com/tags/Writing/"/>
    
      <category term="生活" scheme="https://old.cz5h.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>导出七牛云的数据到本地服务器</title>
    <link href="https://old.cz5h.com/article/f2f2.html"/>
    <id>https://old.cz5h.com/article/f2f2.html</id>
    <published>2019-12-25T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.545Z</updated>
    
    <content type="html"><![CDATA[<p>大概半年多以前，七牛云就失效了，一个是欠费再一个是没有绑定域名，听说是七牛云被举报了然后就必须要实名认证了，而且测试域名的时间也变得只有一个月之久，基本没什么作用了。如果绑定域名，需要该域名是备案的域名，这对于大部分自建博客的人来说基本就是死路一条了，备案的个人博主还是比较少的。</p><a id="more"></a><p>如上，我自然是没法再访问对象存储里的数据了，不过比较欣慰的是七牛云并不会删除上传的数据，数据仍然在相关的 bucket 里测试域名被回收了，现在要做的就是将数据导出，然后使用其他方案，例如阿里的oss或者自己服务器上，无论如何，将数据从七牛云导出是最重要的，但恶心人的是：七牛云的控制台里没有导出的功能，执行导出要借助额外的工具，全部工具列表如下：</p><p><a href="https://developer.qiniu.com/kodo/tools/1302/qshell" target="_blank" rel="external nofollow noopener noreferrer">https://developer.qiniu.com/kodo/tools/1302/qshell</a></p><p>这里我们使用 qshell，在命令行完成原数据的下载</p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a><strong>准备工作</strong></h4><ul><li><strong>下载 qshell</strong><br>qshell 是一个命令行工具，在 Win 系统下就是个 exe 可执行文件，官方教程还要配置环境变量，其实直接输入该 exe 名称运行也可以。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需要在该文件的目录内</span><br><span class="line">$ .&#x2F;qshell-windows-x64-v2.4.0.exe -v</span><br></pre></td></tr></table></figure><ul><li><strong>配置密钥</strong></li></ul><p>在七牛云的web控制台中，个人中心里的密钥管理，可以找到自己的 AK 和 SK，帐号名称即用户名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;qshell-windows-x64-v2.4.0.exe CBVEWIVBOI82391091231 284VSHDUAVBU98-vgyhsd 1805984583@qq.com</span><br><span class="line">该语句执行完无输出</span><br></pre></td></tr></table></figure><h4 id="库的整体移动"><a href="#库的整体移动" class="headerlink" title="库的整体移动"></a><strong>库的整体移动</strong></h4><ul><li><strong>利用新空间的测试域名</strong></li></ul><p>由于没域名，用 qshell get 下载总是失败，或许不是域名的原因，但总归是卡住了，找了半天找到了可行的新方案，即：</p><p><strong>实名认证 -&gt; 新建Bucket -&gt; 转移空间内的数据 -&gt; 用新空间的测试域名下载</strong></p><p>还是不用备案的域名，符合我的预期，认证也比较简单，上传身份证然后支付宝搞一下就行了，说是三个工作日审核其实完成认证操作后马上就能新建Bucket了，新建完后，记住新空间的名字，下面用 batchcopy 来完成移动。</p><p>注意：新建的空间要和原空间在同一个大区内。</p><ul><li><strong>获得文件名列表</strong><br>这里使用 listbucket 命令，将输出存到文件中，利用 awk 直接取出第一列即可（强烈推荐使用 git bash 运行，大家应该都有）。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;qshell-windows-x64-v2.4.0.exe listbucket whereareyou &gt; tocopy.txt</span><br><span class="line">只有一个参数即：空间名称</span><br><span class="line">其会列出该空间内的全部文件，带文件夹路径</span><br><span class="line"></span><br><span class="line">$ cat tocopy.txt | awk &#39;&#123;print $1&#125;&#39; &gt; only-name.txt</span><br><span class="line">去掉上面输出文件中的其他无关项，只留文件名</span><br></pre></td></tr></table></figure><ul><li><strong>执行 batchcopy</strong><br>其仍属于 qshell 内的命令，是个批量拷贝命令，输入是个文件名构成的文件，可以用 –forece 强制移动。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;qshell-windows-x64-v2.4.0.exe batchcopy --force whereareyou zonelyn -i only-name.txt</span><br><span class="line">参数分别是：旧空间名，新空间名，移动文件的名称列表</span><br><span class="line">...</span><br><span class="line">Copy &#39;whereareyou:image&#x2F;acger&#x2F;app.png&#39; &#x3D;&gt; &#39;zonelyn:image&#x2F;acger&#x2F;app.png&#39; success</span><br><span class="line">Copy &#39;whereareyou:image&#x2F;acger&#x2F;group.png&#39; &#x3D;&gt; &#39;zonelyn:image&#x2F;acger&#x2F;group.png&#39; success</span><br><span class="line">Copy &#39;whereareyou:image&#x2F;gif&#x2F;107659232.gif&#39; &#x3D;&gt; &#39;zonelyn:image&#x2F;gif&#x2F;107659232.gif&#39; success</span><br><span class="line">Copy &#39;whereareyou:image&#x2F;gif&#x2F;120094544.gif&#39; &#x3D;&gt; &#39;zonelyn:image&#x2F;gif&#x2F;120094544.gif&#39; success</span><br><span class="line">Copy &#39;whereareyou:image&#x2F;gif&#x2F;148607128.gif&#39; &#x3D;&gt; &#39;zonelyn:image&#x2F;gif&#x2F;148607128.gif&#39; success</span><br><span class="line">...</span><br><span class="line">移动后会打印出相关信息</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax1.sinaimg.cn/large/006YHUzUgy1gabz5hrs1kj31ec0lhwlv.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>上述操作后，新建的 bucket 中已经具有原空间的全部数据了，并且具有测试域名。这样就比较好办了，有多种方法，这里用 qdownload 批量进行下载，由于需要拼凑下载路径，这里可以直接通过补充配置文件完成。</p><h4 id="最后一步"><a href="#最后一步" class="headerlink" title="最后一步"></a><strong>最后一步</strong></h4><p>在 qshell-windows-x64-v2.4.0.exe 所在的目录新建下载配置文件 dcongf.txt：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;dest_dir&quot;: &quot;F:\七牛&quot;, &#x2F;&#x2F;本地目录</span><br><span class="line">  &quot;bucket&quot;: &quot;zonelyn&quot;, &#x2F;&#x2F;新空间名</span><br><span class="line">  &quot;cdn_domain&quot;: &quot;q35ajtip3.bkt.clouddn.com&quot; &#x2F;&#x2F;外链默认域名</span><br><span class="line">  &#x2F;&#x2F;注释要删掉，不能留</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>批量下载</strong><br>最后就可以执行批量下载的命令了，输入就是上述配置文件，这样会将整个空间内的全部文件下载到本地目录内：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;qshell-windows-x64-v2.4.0.exe qdownload dconf.txt</span><br><span class="line">Writing download log to file C:\Users\zonglin\.qshell\qdownload\d2f9566497ad74e39755de09c8837d9b\d2f9566497ad74e39755de09c8837d9b.log</span><br><span class="line">...</span><br><span class="line">Downloading image&#x2F;gif&#x2F;165263167.gif [25&#x2F;1364, 1.8%] ...</span><br><span class="line">Downloading image&#x2F;gif&#x2F;166739693.gif [26&#x2F;1364, 1.9%] ...</span><br><span class="line">Downloading image&#x2F;gif&#x2F;170320182.gif [27&#x2F;1364, 2.0%] ...</span><br><span class="line">Downloading image&#x2F;gif&#x2F;174817916.gif [28&#x2F;1364, 2.1%] ...</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>慢慢等待上述过程完成，自此全部数据就从七牛云上弄出来了。全部数据大小在10G内是肯定没问题的，下载可能很慢，等着吧。</p><h4 id="开倒车"><a href="#开倒车" class="headerlink" title="开倒车"></a><strong>开倒车</strong></h4><ul><li>转存到自己的本地服务器</li></ul><p>使用自用服务器，用 nginx 驱动，直接把数据放在自己的机器上，也不用什么cdn加速，因为并没有多少下载量，让 <a href="https://old.cz5h.com/other/page_share.html">资源分享面</a> 可用才是最重要的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax1.sinaimg.cn/large/006YHUzUgy1gacrmdxnr6j31fn0lvgtw.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>没有 CDN 加速，也没有任何优化，怎么说呢，一个是本身下载的就基本没有，再一个家里的上行速度还可以，如果在国内的话下载体验应该不差，在国外亲自体验下载速度大约在 700kb/s 左右，够用了。</p><h4 id="七牛云的-BUG"><a href="#七牛云的-BUG" class="headerlink" title="七牛云的 BUG"></a><strong>七牛云的 BUG</strong></h4><p>对于带有空格文件名的文件，正常上传到七牛云是可以下载和访问的，但是：<strong>使用 qshell 读出文件列表时，会按空格分割并只能获取第一部分</strong>，这明显是个 <strong>大BUG</strong>，怎么说呢，七牛云的服务本身也就那样，照理说 qshell 这些东西完全可以放在前端页面上，总之令人感觉七牛云是个半成品，反正也不用了，在咋咋地吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大概半年多以前，七牛云就失效了，一个是欠费再一个是没有绑定域名，听说是七牛云被举报了然后就必须要实名认证了，而且测试域名的时间也变得只有一个月之久，基本没什么作用了。如果绑定域名，需要该域名是备案的域名，这对于大部分自建博客的人来说基本就是死路一条了，备案的个人博主还是比较少的。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo相关" scheme="https://old.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="总结" scheme="https://old.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="七牛云" scheme="https://old.cz5h.com/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    
      <category term="脚本" scheme="https://old.cz5h.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
      <category term="Nginx" scheme="https://old.cz5h.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>2019圣诞节 — 徒步看风景</title>
    <link href="https://old.cz5h.com/article/b8d5.html"/>
    <id>https://old.cz5h.com/article/b8d5.html</id>
    <published>2019-12-24T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.544Z</updated>
    
    <content type="html"><![CDATA[<p>今天是正经的圣诞节，应朋友的邀请和他一起去徒步散步，这位朋友来自巴基斯坦，他的荷兰妻子早早就回父母家欢度圣诞去了，显然他和他害羞的小儿子并不喜欢混在一群荷兰人中，所以他说今天我们可以一起去徒步，我自然是没什么事的，就干脆地答应了。当时他建议我要穿一双 <strong>nice shoes</strong>，先前并不晓得他的用意，结果后来走进步道的泥巴中，才明白确实得要一双“硬货”啊，往来的人群都穿着大皮靴，真是心疼我的运动孩。</p><a id="more"></a><h3 id="全程概览"><a href="#全程概览" class="headerlink" title="全程概览"></a><strong>全程概览</strong></h3><p>这次是第一次体验荷兰当地人是如何步行锻炼的，路线是这位朋友经常走的，他有点糖尿病所以每天都要通过走路来消耗掉摄入的多余糖分，自然路线的选择是非常棒的，沿途风景很赞，但美中不足的是，最近天天下雨所以有段路程道路泥泞，非常让人恼火。</p><p><strong>全程包含：公路、林中车道、林中小道、火车铁轨旁道、沿河小道</strong></p><p>整体基本没有海拔起伏，其实荷兰全境的海拔都比较平均。还有全程会发现几乎没有行人，因为是圣诞节！当地人都过节去了，可能非欧美的外国人才这么闲吧，路上还碰见过几次中国人（一看就看出来了）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva2.sinaimg.cn/large/006YHUzUgy1ga9s8bdwawj31i80qmx6q.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="愉快的开始"><a href="#愉快的开始" class="headerlink" title="愉快的开始"></a><strong>愉快的开始</strong></h3><p><img src="//tvax3.sinaimg.cn/large/006YHUzUgy1ga9rywg91jj32tc1ao7wi.jpg" alt="IMG_20191225_114429"></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva4.sinaimg.cn/large/006YHUzUgy1ga9ryy6785j32tc1aokjm.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax4.sinaimg.cn/large/006YHUzUgy1ga9ryznzufj32tc1ao7wi.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva1.sinaimg.cn/large/006YHUzUgy1ga9rz0zryhj32tc1aonpe.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="令人恼火的泥巴"><a href="#令人恼火的泥巴" class="headerlink" title="令人恼火的泥巴"></a><strong>令人恼火的泥巴</strong></h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva4.sinaimg.cn/large/006YHUzUgy1ga9rz33cq4j32tc1aoe84.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax1.sinaimg.cn/large/006YHUzUgy1ga9rz5iaurj32tc1aoqv8.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva4.sinaimg.cn/large/006YHUzUgy1ga9rz7bbcqj32tc1ao1ky.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="河畔的美景"><a href="#河畔的美景" class="headerlink" title="河畔的美景"></a><strong>河畔的美景</strong></h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax2.sinaimg.cn/large/006YHUzUgy1ga9rzbwsa7j32tc1aonpe.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax3.sinaimg.cn/large/006YHUzUgy1ga9rzdmve0j32tc1aou0x.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva3.sinaimg.cn/large/006YHUzUgy1ga9rzg3x4lj32tc1ao4qs.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="小镇中的小路"><a href="#小镇中的小路" class="headerlink" title="小镇中的小路"></a><strong>小镇中的小路</strong></h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax1.sinaimg.cn/large/006YHUzUgy1ga9rzhwdrgj32tc1aokjo.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax4.sinaimg.cn/large/006YHUzUgy1ga9rzl7b9pj32tc1aokjn.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva2.sinaimg.cn/large/006YHUzUgy1ga9rzo2sg7j32tc1aoe84.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax2.sinaimg.cn/large/006YHUzUgy1ga9rzwdp5gj32tc1ao4qs.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="路边的足球场"><a href="#路边的足球场" class="headerlink" title="路边的足球场"></a><strong>路边的足球场</strong></h3><p>在路上我们边走边聊，当然大部分时间是在“作比较”，同一件事在中国会怎样、在巴基斯坦会怎样、在荷兰会怎样，我挺喜欢谈论这些的，因为有些事情非常有趣，比如在荷兰当地：</p><ul><li>如果步行时迎面走来陌生人，互相之间要问好，即使不认识</li><li>和荷兰人当面说话时不要看手机，他们会非常在意</li><li>没路灯的路并不是没人走的路，反而可能很多人走</li><li>基本看不见摄像头，女性单独跑步或散步很常见</li><li>不准酒驾，但喝一点点可以开车，基本没人查，靠自觉</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva2.sinaimg.cn/large/006YHUzUgy1ga9rzjeqn7j32tc1ao1ky.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva2.sinaimg.cn/large/006YHUzUgy1ga9rzq4dauj32tc1ao4qr.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax4.sinaimg.cn/large/006YHUzUgy1ga9rztv0fmj32tc1aoqv6.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="苍穹下的农场"><a href="#苍穹下的农场" class="headerlink" title="苍穹下的农场"></a><strong>苍穹下的农场</strong></h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva3.sinaimg.cn/large/006YHUzUgy1ga9rzyla20j32tc1aou0x.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva2.sinaimg.cn/large/006YHUzUgy1ga9s074rm1j38hs2f4he3.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax2.sinaimg.cn/large/006YHUzUgy1ga9ryv1wsxj33k01n4qv6.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a><strong>写在最后</strong></h3><p>在结束这次长途跋涉之后，还在这位朋友家里吃了午饭，巴铁是真的热情，因为孩子妈没在家，所以他亲自下厨，鼓捣了一些黑暗料理，其实味道还不错了。</p><p>说起来这是我第二次拜访他家了，还和他的小儿子聊了半天游戏，果然游戏是无国界的，我想这会是年轻人之间最容易想到的共同话题了，LOL、PUBG、Steam等等，虽然他高中还没毕业，但看来他真的是很喜欢玩游戏啊，没事基本就在家玩 XBOX，他爹也不管他，认为只要他高中毕业，那他就“自由”了，这可能也是一种东西文化的差异吧。</p><p>总之，这次圣诞节是真的体验到了一些不同的东西，当然也非常感谢这位巴铁朋友，中巴友谊万岁！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是正经的圣诞节，应朋友的邀请和他一起去徒步散步，这位朋友来自巴基斯坦，他的荷兰妻子早早就回父母家欢度圣诞去了，显然他和他害羞的小儿子并不喜欢混在一群荷兰人中，所以他说今天我们可以一起去徒步，我自然是没什么事的，就干脆地答应了。当时他建议我要穿一双 &lt;strong&gt;nice shoes&lt;/strong&gt;，先前并不晓得他的用意，结果后来走进步道的泥巴中，才明白确实得要一双“硬货”啊，往来的人群都穿着大皮靴，真是心疼我的运动孩。&lt;/p&gt;
    
    </summary>
    
      <category term="Daily_Life" scheme="https://old.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="荷兰" scheme="https://old.cz5h.com/tags/%E8%8D%B7%E5%85%B0/"/>
    
      <category term="节日" scheme="https://old.cz5h.com/tags/%E8%8A%82%E6%97%A5/"/>
    
      <category term="运动" scheme="https://old.cz5h.com/tags/%E8%BF%90%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>自己动手丰衣足食</title>
    <link href="https://old.cz5h.com/article/e749.html"/>
    <id>https://old.cz5h.com/article/e749.html</id>
    <published>2019-12-21T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.543Z</updated>
    
    <content type="html"><![CDATA[<h4 id="古老的传统"><a href="#古老的传统" class="headerlink" title="古老的传统"></a><strong>古老的传统</strong></h4><p>虽然冬至是中国古代流传至今的一个节气之一，但其可不是一个简单的节日，本文目的并不是探究其有趣之处，所以就不展开叙述。总之，在全国范围内，人们都比较看中这个节气，北方吃饺子，南方吃汤圆，或许各地习俗有别（北方还有冬至上坟的习俗），但演变至今日，已然已经成了一个家庭团聚，朋友会面的重要契机，使得人们在忙碌的工作之余，吃口饺子/汤圆，借着热气回味下久违的亲情和友情。</p><a id="more"></a><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax4.sinaimg.cn/large/006YHUzUgy1gamhpyjds2j319q0ufqv7.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="饺子来啦"><a href="#饺子来啦" class="headerlink" title="饺子来啦"></a><strong>饺子来啦</strong></h4><p><strong><em>纵使远离家乡千万里，<br>尤恋故土那人那滋味。</em></strong></p><p>作为海外留学的我们，能做的不多，能做的又很多，自己动手丰衣足食。</p><p>今天，从格村远道而来的师兄师姐们，和我们乌特这本地四人小队来了个串联，七个人，挤在不小不大的房子里，叮叮当当做了一天的饭食。回来之后我甚至因为太累而睡了一觉，这一觉睡得安详，因为今天过得又充实又难忘。</p><h4 id="聚餐必备-火锅"><a href="#聚餐必备-火锅" class="headerlink" title="聚餐必备-火锅"></a><strong>聚餐必备-火锅</strong></h4><p>或许这算是最容易想到的形式了吧，容易准备，当然也容易吃。</p><p><strong><em>万物皆可下火锅，<br>吃了坏肚子可不好说，<br>要是为这停了筷，<br>吃货的脸面往哪搁？！</em></strong></p><p>如是，中午我们就吃的火锅，准备了肉和菜，切一切就开涮了，当然，吃火锅前每个人都是做好了最坏打算的，拉肚子这种小事不足挂齿，至少我是这么认为的。席间师兄师姐们表达了要逛古堡的想法，因为他们想逃避下午的包饺子环节，当然我们怎么能让客人劳动呢，所以匆匆吃过火锅后，他们就真的去古堡玩了。在他们走后，我至少又从锅里捞出了五个虾仁，没有享受到的人真是遗憾！</p><h4 id="冬至必吃-饺子"><a href="#冬至必吃-饺子" class="headerlink" title="冬至必吃-饺子"></a><strong>冬至必吃-饺子</strong></h4><p>认真对待每个节日，留下该有的美好回忆，这就不是我们活着的动力所在吗，冬至到了，饺子自然就来报道了。</p><p>下午刚开始包的时候，由于面太软了，我主动请缨，开始了揉面的试炼。最后的体验是，虽然很累，但是看着面粉被一点点揉进面里，感觉还挺不错，下次还揉。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax3.sinaimg.cn/large/006YHUzUgy1gamhqooe48j319p0u2kjn.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>在九九八十一下（大概）的揉搓之后，面终于硬了，师姐擀皮也找到了感觉，我随即便加入了包饺子小组，嗯，后来发现，我这水平（上图左下部分的）还可以拿个优胜奖，简直没有想到。</p><p>在此不得不提及一下师兄强烈建议加到馅子里的好东西——马蹄。一开始我以为是马的蹄子呢，结果原来是藕一样的东西。三下五除二，剁碎了加入海带、萝卜和肉馅，完成了第一种饺子馅。第二种馅就厉害了，是碎鸡蛋加虾仁，起初我还担心那么大虾仁包的进去不，后来发现自己还是多虑了。﻿</p><p><img src="//tvax2.sinaimg.cn/large/006YHUzUgy1gamhre2kt0j30t00jkb29.jpg" alt="image"></p><p>饺子包好，我们收工，但宇哥的工作才刚刚开始：滚烫的热油在锅里翻滚，将刚包好的水饺直接放入锅中，在这层热油的煎炸下，水饺底部很快便被炸至金黄，这时将少量热水放入其中，盖上锅盖，沸腾的热水和蒸汽会将饺子完全闷熟，待水蒸发殆尽，水煎包就制作完成了。以上便是我在旁边偷师学艺的结果，最终的水煎包，当然也是非常的好吃。嗯，是正宗的味道！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tvax4.sinaimg.cn/large/006YHUzUgy1gamhs01y46j319l0wo7wk.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>晚上，我们等了好一会德哈尔城堡的来客，他俩好像走丢了一样很晚才回来，当然那时候我们已经解决完战斗了。师兄师姐们吃着这水饺，连连称赞美味，这或许是对我们最大的欣慰了。饭后，我们再师兄的建议下又玩了那个卡片游戏，这是自从上次在格村玩过之后的第二次完了，惊喜的是，我居然毫无悬念的大比分赢了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva3.sinaimg.cn/large/006YHUzUgy1gamhsgj2mgj319t0rvx6q.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="离别在今日"><a href="#离别在今日" class="headerlink" title="离别在今日"></a><strong>离别在今日</strong></h4><p>当你觉得快乐、幸福的时候，往往也是感觉时间流逝最快的时候，匆匆告别后，这段时光便只能以记忆再见了。看着收拾一新的餐桌，干干净净的厨房，这一尘不染的样子仿佛我们从未来过，或这房子里的其他租客永远不会知道，我们在这里度过了多么美好的一天。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;古老的传统&quot;&gt;&lt;a href=&quot;#古老的传统&quot; class=&quot;headerlink&quot; title=&quot;古老的传统&quot;&gt;&lt;/a&gt;&lt;strong&gt;古老的传统&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;虽然冬至是中国古代流传至今的一个节气之一，但其可不是一个简单的节日，本文目的并不是探究其有趣之处，所以就不展开叙述。总之，在全国范围内，人们都比较看中这个节气，北方吃饺子，南方吃汤圆，或许各地习俗有别（北方还有冬至上坟的习俗），但演变至今日，已然已经成了一个家庭团聚，朋友会面的重要契机，使得人们在忙碌的工作之余，吃口饺子/汤圆，借着热气回味下久违的亲情和友情。&lt;/p&gt;
    
    </summary>
    
      <category term="Daily_Life" scheme="https://old.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="总结" scheme="https://old.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="荷兰" scheme="https://old.cz5h.com/tags/%E8%8D%B7%E5%85%B0/"/>
    
      <category term="节日" scheme="https://old.cz5h.com/tags/%E8%8A%82%E6%97%A5/"/>
    
      <category term="美食" scheme="https://old.cz5h.com/tags/%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题(EJS模板)自定义页面扩展</title>
    <link href="https://old.cz5h.com/article/b5cf.html"/>
    <id>https://old.cz5h.com/article/b5cf.html</id>
    <published>2019-12-16T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.541Z</updated>
    
    <content type="html"><![CDATA[<p>自从初次接触 Hexo 到现在已经有两年多的时间了，时间过得飞快啊，关于 Hexo 的优点不再赘述，关于个人站点的优点，有必要在强调一下，那就是极高的自由度，这也是这篇文章的基础。现在有时间刚好总结一下我对于 Hexo 做的一些自定义扩展，虽然之前可能在别的文章中或多或少的涉及了，但并没有统一整理过。</p><a id="more"></a><p><strong>本人主题：Indigo，以下内容均基于此主题所写。</strong></p><p>首先需要明白的是，Hexo 的博客内容（静态内容）均由 generate 生成，其核心是一个 node 应用，提供了一系列帮助函数，或者说调用接口；而各种主题，只不过是在其规定的框架内，以一种特定的模板（ejs/swg/pug），调用特定的 Hexo 帮助函数来完成的。在构造时，这些模板文件每次都会重新生成对应文件，例如文章页面，就是对应的模板文件将编译后的 markdown 格式的文本填入 HTML 页面，同时也会插入进去其他东西（比如题目，尾注等等）。以EJS+LESS为例：</p><ul><li>EJS中包括全部的 html标签 和 JavaScript 脚本</li><li>Less是CSS的一种使用方式，这里可以理解为样式文件，但其样式参数可以用变量来表示，这样在开发主题的过程中就可以简化和统一整个样式所涉及的颜色高度等CSS属性。</li></ul><h4 id="原页面修改"><a href="#原页面修改" class="headerlink" title="原页面修改"></a>原页面修改</h4><p>由上面可知，对博客进行的任何修改，这里特指简单的、在已有界面上的修改，均需要找到渲染/生成该 HTML 页面（浏览器中我们可见的部分）的模板文件，在模板文件中进行我们想要的修改。如果涉及主题的CSS样式，则一般需要找到对应的 less 文件，如果里面用的变量代替，则还需要到存储变量值的文件里去修改变量的值，这样才完成样式的修改，但<strong>偷懒的方法</strong>是，直接在对应生成页面的模板文件中添加style代码段，然后用 !important 将你修改后的样式强制覆盖原先的主题样式。</p><p>总之，或许你的主题文件中包含很多的模板文件，但实际他们是有机的整体，都会在某个模板文件中被引用，从而组合成一个完整的整体，修改时要耐心的去找到最细粒度（对应html语句）的那部分。</p><h4 id="新增页面"><a href="#新增页面" class="headerlink" title="新增页面"></a>新增页面</h4><p>主要有两种方式，一种是添加一个 md 文件，一种是直接放一个 html 文件，前者在渲染时会生成相应的 html 内容，两者本质上没有什么区别，取决于你添加的新页面的内容，比如一般的文本则使用 md 就可以了，但如果是复杂的 js插件，那还是直接添加 html 较好，方便修改。</p><p>这两种方式均需要将 md 文件或者 html 文件放入到 Hexo 根目录的 source 文件夹中，Hexo 的机制是 source 文件夹中的全部文件都会被原封不动的生成到 public 文件夹内（只有 md 文件会被“翻译”成 html 格式）。</p><h4 id="基于-Hexo-参数的修改"><a href="#基于-Hexo-参数的修改" class="headerlink" title="基于 Hexo 参数的修改"></a>基于 Hexo 参数的修改</h4><p>这一部分可以在某些原有页面上添加，也可以是在新增页面上添加。主要是通过借助 Hexo 的程序接口，获取像 文章数量、分类数量、各种标签下分别有多少文章等等数据，通过这些数据，可以完成一些功能，比如：</p><p>主要基于的对象：<strong>分类（Category）、标签（Tags）、文章（Article）</strong></p><p>可以扩展的操作：<strong>过滤、匹配、重构</strong></p><p>其实扩展内容可以由阅读原先的主题文件的代码来理解，因为包括“归档”、“分类”等页面的显示，均用的 Hexo 的帮助函数，具体的函数接口定义与说明可以参照 <a href="https://hexo.io/zh-cn/api/" target="_blank" rel="external nofollow noopener noreferrer">Hexo的API说明</a>。</p><h4 id="案例一：添加关联文章"><a href="#案例一：添加关联文章" class="headerlink" title="案例一：添加关联文章"></a>案例一：添加关联文章</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva1.sinaimg.cn/large/006YHUzUgy1ga64lm7246j30v20iyadk.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>扩展思路：这里使用 Tags 进行比对，相似越多的文章就越相关，在最后一步，Category 相同会优先入选，排序后只取最相关的 TOP3，不足三个则有多少显示多少；</p><p>扩展结构：</p><p><strong>1. 找合适的文件插入实现上述功能的新函数，一般在主题的 plugin.js，之后以注册函数的形式完成代码实现</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.helper.register(<span class="string">'getTagsList'</span>, (archive, size) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> posts = hexo.locals.get(<span class="string">'posts'</span>);</span><br><span class="line">    <span class="keyword">var</span> articleArr = [];</span><br><span class="line">    <span class="keyword">var</span> small = [];</span><br><span class="line">    size = size || <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> ishere = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j&lt; archive.tags.length; j++)&#123;</span><br><span class="line"><span class="keyword">var</span> contnu = <span class="literal">true</span>; </span><br><span class="line"><span class="keyword">var</span> tname = archive.tags.data[j].name;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> p = <span class="number">0</span>; p&lt; posts.length; p++)&#123;</span><br><span class="line"><span class="keyword">var</span> tid = posts.data[p]._id;</span><br><span class="line"><span class="keyword">if</span>(small.length == size || !contnu ) </span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> k = <span class="number">0</span>; k&lt; posts.data[p].tags.length; k++)&#123;</span><br><span class="line"><span class="keyword">if</span>( tname === posts.data[p].tags.data[k].name &amp;&amp; ishere.indexOf(tid) == <span class="number">-1</span> &amp;&amp; archive._id != tid)&#123;  </span><br><span class="line"><span class="keyword">if</span>(posts.data[p].category === archive.category &amp;&amp; archive._id != tid)&#123;</span><br><span class="line">small.push(posts.data[p]);</span><br><span class="line">contnu = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">articleArr.push(posts.data[p]);</span><br><span class="line">ishere.push(tid);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(small.length &gt;= <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> small; </span><br><span class="line"><span class="comment">//正常情况下返回文章数组</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">var</span> ln = articleArr.length;</span><br><span class="line"><span class="keyword">if</span> ( ln &lt; size)  </span><br><span class="line"><span class="keyword">return</span> articleArr.slice(<span class="number">0</span>, ln<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="keyword">return</span> articleArr.slice(ln<span class="number">-1</span>-size, ln<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>2. 新建子模板文件（为了模块分离）</strong></p><p><strong>注意：</strong>这里的<code>getTagsList(page, 3)</code>就是对上述代码的调用，<code>page</code>即整个文章对象，可以从中获取到该文章的所属分类和标签信息，<code>3</code>则时控制显示相关文章个数的参数。可以发现每篇文章都需要这样查找一遍，所以该代码最后在第三步中放到了文章页的ejs模板中，<strong>以确保在渲染每篇文章时将相关文章找出并放进页面中</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>「 相关文章 」<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">            //页面全部内容，只有<span class="attr">TOP3</span></span></span><br><span class="line"><span class="tag">            <span class="attr">var</span> <span class="attr">arr</span> = <span class="string">getTagsList(page,</span> <span class="attr">3</span>);</span></span><br><span class="line"><span class="tag">            //每次生成文章都会执行</span></span><br><span class="line"><span class="tag">            <span class="attr">for</span>( <span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">arr</span>) &#123;</span></span><br><span class="line"><span class="tag">                <span class="attr">var</span> <span class="attr">article</span> = <span class="string">arr[i];</span></span></span><br><span class="line"><span class="tag">        %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(article.path) %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">article.title</span>%&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--显示文章的摘要--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">truncate</span>(<span class="attr">strip_html</span>(<span class="attr">article.excerpt</span> || <span class="attr">article.content</span> ), &#123;<span class="attr">length:</span> <span class="attr">100</span>&#125;) %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">            &#125;</span></span><br><span class="line"><span class="tag">        %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3. 将上述新模板内容插入到原主题的对应位置内</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">这部分是整个文章页的汇总模板</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;%- partial(&#39;post&#x2F;toc&#39;, &#123; post: post&#125;) %&gt;</span><br><span class="line"></span><br><span class="line">&lt;article id&#x3D;&quot;&lt;%&#x3D; post.layout %&gt;-&lt;%&#x3D; post.slug %&gt;&quot;</span><br><span class="line">  class&#x3D;&quot;post-article article-type-&lt;%&#x3D; post.layout %&gt; fade&quot; itemprop&#x3D;&quot;blogPost&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    post-card 即文章的主体部分，包括题目、分类、字数、及最下方的标签和分享图标等</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;post-card&quot;&gt;</span><br><span class="line">        &lt;h1 class&#x3D;&quot;post-card-title&quot;&gt;&lt;%- post.title %&gt;&lt;&#x2F;h1&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;post-meta&quot;&gt;</span><br><span class="line">            &lt;%- partial(&#39;post&#x2F;date&#39;, &#123;date_format: config.date_format&#125;) %&gt;</span><br><span class="line">            &lt;%- partial(&#39;post&#x2F;category&#39;) %&gt;</span><br><span class="line">&lt;%- partial(&#39;post&#x2F;wordcount&#39;) %&gt;</span><br><span class="line">            &lt;%- partial(&#39;plugins&#x2F;page-visit&#39;) %&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;post-content&quot; id&#x3D;&quot;post-content&quot; itemprop&#x3D;&quot;postContent&quot;&gt;</span><br><span class="line">            &lt;%- post.content %&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;%- partial(&#39;post&#x2F;copyright&#39;) %&gt;</span><br><span class="line">        &lt;%- partial(&#39;post&#x2F;reward-btn&#39;) %&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;post-footer&quot;&gt;</span><br><span class="line">            &lt;%- partial(&#39;post&#x2F;tag&#39;) %&gt;</span><br><span class="line">            &lt;%- partial(&#39;post&#x2F;share-fab&#39;) %&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    下面的模块，第一个是左右导航栏，第二个是咱们的相关文章模块，第三个是评论</span><br><span class="line">    最后，还包括了打赏图标（reward）在文章最底部</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;%- partial(&#39;post&#x2F;nav&#39;) %&gt;</span><br><span class="line">&lt;%- partial(&#39;post&#x2F;postlist&#39;)%&gt;</span><br><span class="line">    &lt;%- partial(&#39;post&#x2F;comment&#39;) %&gt;</span><br><span class="line">&lt;&#x2F;article&gt;</span><br><span class="line">&lt;%- partial(&#39;post&#x2F;reward&#39;) %&gt;</span><br></pre></td></tr></table></figure><h4 id="案例二：Category-或-Tags-的数值展示"><a href="#案例二：Category-或-Tags-的数值展示" class="headerlink" title="案例二：Category 或 Tags 的数值展示"></a>案例二：Category 或 Tags 的数值展示</h4><p>实现思路：统计分类、标签的重复个数，并绑定其所载文章的创建日期，这样整体上就有变量值、时间值两个维度，可以借助 D3.js 等做一些复杂的分析展示模块。</p><p>假象模块：</p><ul><li>单一维度：分类及标签的名称及数量（柱状图）</li><li>两个维度：文章发布的频率：日历图（类似github贡献图）</li><li>复杂分析：以文章类别为一组，标签为一组，出现在同一文章中则算作有关联，分析全部文章，将分类和标签的关系用 Graph 进行可视化，从而更好的指导分类和标签的匹配关系。</li></ul><p>实现部分：与案例一类似，第二三步骤很简单，关键是上述假象模块的实现，主要包括 <strong>通过 Hexo API 得到相关数据</strong> 和 <strong>通过可视化库进行绘制</strong>。</p><h4 id="继续更新中"><a href="#继续更新中" class="headerlink" title="继续更新中"></a>继续更新中</h4><p><strong>19-12-20 新问题：引入资源文件</strong></p><p>例如想在 Hexo 博客中的某个页面，做成一个资源分享页面（自己用或者给别人用），这样就会涉及文件的下载。其实有以下几种方式实现：</p><ul><li><p>直接将该文件放在博客文件中一起发布，这对于单个小文件来说并无大碍，比如自己的头像完全可以这样放，但（以图片举例）图片过大，或者数量过多，就一定不能将其和其他文件放在一起，原因是：</p><ul><li>Hexo 每次发布都会重新生成博客的全部静态页面，如果资源也放在其中，那么也会每次都刷新一遍，如果是部署在云端或者用Pages服务进行托管的，这样每次的上传量将非常庞大，上传时间会非常长，且浪费时间的恰恰是基本不会修改的资源文件。</li></ul></li><li><p>将资源文件分离，放在其他地方（云空间或Github的其他仓库）。例如使用七牛云进行存储，这样的好处是：</p><ul><li>访问速度有保证，例如七牛云就有融合CDN加速</li><li>对资源的可控性高，可以知道请求的数量等指标，但如果自己去计算这些数据，则需要复杂的代码实现。</li><li>和 Hexo 分离，加快每次的上传更新速度</li></ul></li></ul><p>其实这个问题适用于博客中所涉及的全部资源文件，包括头像、文章中插入的照片等等。七牛云是个不错的对象存储平台（包括文档、图片、媒体文件等等），如果只是图片的话，推荐使用专职的图床进行存储（例如微博图床）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从初次接触 Hexo 到现在已经有两年多的时间了，时间过得飞快啊，关于 Hexo 的优点不再赘述，关于个人站点的优点，有必要在强调一下，那就是极高的自由度，这也是这篇文章的基础。现在有时间刚好总结一下我对于 Hexo 做的一些自定义扩展，虽然之前可能在别的文章中或多或少的涉及了，但并没有统一整理过。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo相关" scheme="https://old.cz5h.com/categories/Hexo%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Hexo" scheme="https://old.cz5h.com/tags/Hexo/"/>
    
      <category term="Indigo" scheme="https://old.cz5h.com/tags/Indigo/"/>
    
      <category term="主题扩展" scheme="https://old.cz5h.com/tags/%E4%B8%BB%E9%A2%98%E6%89%A9%E5%B1%95/"/>
    
      <category term="EJS模板" scheme="https://old.cz5h.com/tags/EJS%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>记一次意义深刻的旅行</title>
    <link href="https://old.cz5h.com/article/9cf5.html"/>
    <id>https://old.cz5h.com/article/9cf5.html</id>
    <published>2019-12-12T23:00:00.000Z</published>
    <updated>2020-02-29T18:43:55.538Z</updated>
    
    <content type="html"><![CDATA[<p>此内容系回忆内容，归属于RMBATS列表。</p><p>事件主题是2018年12月 8 号 到 13 号的一次短暂的出国旅行。这是我第一次出国，第一次长途跋涉这么远，第一次… 体验了很多的第一次，自然印象深刻，现在趁着还记得拎出来晒一晒，免得记忆发了酶。</p><p>这次去的是<strong>越南的首都河内</strong>，主要目的是去考雅思的，从下决心到出发时间也就一个月，非常紧张，好在越南可以落地签，所以只要有护照就简单的多了。虽然着了一条龙的服务，但那人没给我弄好，导致我原本可以提前落地签办完的结果没办完，让我自己体验了一把怎么办落地签的流程，怎么说呢，由于是凌晨到达的，而且河内时间比北京时间慢一小时，所以最后到达酒店的时间也就差不多还是凌晨。</p><a id="more"></a><p>考试呢，分在了几天内考，我到的第二天就有场考试，最后看结果嘛自然是晕晕乎乎考的不好。此次同考的伙伴呢，有两位女生，应该都是来自暨南大学的已毕业学姐（去年我还是应届），打算申请香港的博士但卡英语了，所以来这边考。开始我们只是微信认识的，后面也不是一起去的，但总归是住在一个酒店里，一起吃吃饭什么的，她们都是学霸类型的，到后面我就大部分时间都跑出去逛街溜达拍照去了。</p><p>前面也说了，我们找了当地的代理，但为了节省开支，我们只要求住一晚代理安排的酒店（太贵了），然后剩下的几天我们自己找地方住。也就是说基本上正经的旅程是从第二个住处开始的，从第二天起，我们在<strong>南门市场</strong>附近找到了一个小酒店（<strong>Angel Palace Hotel</strong>）住着，位置可以说是非常中心了，后来我逛了才知道，这个位置简直就是来河内游玩的最佳住处之一啊，包括下面这么多的打卡地，都能在半小时或者一个小时内步行走到。而且，晚上的<strong>东京义塾广场</strong>，简直是外国游客的天堂，整个街区基本充斥着外国人，一直到一两点都还非常热闹。</p><p>附近的景点：主要有环剑湖区域、巴亭广场区域、圣若瑟主教堂、河内火车站、统一公园、国家博物馆、军事博物馆</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="//tva2.sinaimg.cn/large/006YHUzUgy1gad7mx56oej31z4140e82.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>以上是本次到过的地方，拍了很多照片，下面就挑几张简单回忆一下。</p><h4 id="启程"><a href="#启程" class="headerlink" title="启程"></a><strong>启程</strong></h4><p>这次是从学校走的，从沈阳先坐一晚上的卧铺到北京，然后其二天下午在首都国际机场起飞，先去往 澳门 中转，是中国航空的机票但实际承运是澳门航空的飞机，由于买的是往返票，所以去的时候是 北京-澳门-河内，回来还是这样折腾一遍，不过令人高兴的是，返程的时候我被安排做了<strong>头等舱</strong>，第一次离登机口这么近，坐两个人一排的大椅子，后来分析，只可能是往返票的优惠了，可能知道我是第一次做中国国际航空，而且空间有富余。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax1.sinaimg.cn/large/006YHUzUgy1gacvsaafn8j31r70zkahe.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>下午从北京起飞，晚上到达澳门，在澳门逗留两个小时后，八点左右起飞飞往越南，到越南好像也九十点左右（慢一小时），整体这个航线还是可以的，并不影响休息，而且比直达要便宜多了。不过行李是需要下飞机然后在上飞机的，不过时间是完全充足的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax3.sinaimg.cn/large/006YHUzUgy1gacvssi2e6j31r70zkalc.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="抵达"><a href="#抵达" class="headerlink" title="抵达"></a><strong>抵达</strong></h4><p>真是基本去之前什么也没准备，越南盾是在机场的取款机直接取的，越南好些个取款机都支持银联的卡，不需要换汇就可以取出越南盾来，怎么说呢取了几百块钱，瞬间变百万富翁了。下面是两百多万越南盾，实际才六七百块人民币，这些钱省着花的话能花好几天了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/006YHUzUgy1gacvv4jrixj31r70zkk3v.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>怎么说呢，在河内的街头，基本上沿街房都是小商铺，这跟中国的小城镇没什么区别，只是路上的外国人是真的太多了，混在一起多了一种奇妙的感觉。虽然整体很接地气，但却又这么的国际化，这就是河内街头给人的体验。</p><p><img src="https://tva2.sinaimg.cn/large/006YHUzUgy1gacwgecw6dj31r70zkdzv.jpg" alt></p><h4 id="还剑湖方向（Ho-Hoan-Kiem）"><a href="#还剑湖方向（Ho-Hoan-Kiem）" class="headerlink" title="还剑湖方向（Hồ Hoàn Kiếm）"></a><strong>还剑湖方向（Hồ Hoàn Kiếm）</strong></h4><p>这片区域是一片商业区，说是商业区，其实全部是三四层的片楼组成的街道，西起南门市场，东到东京义塾广场，这一片充斥着各种卖衣服的、卖纪念品的、卖水果的、卖画的等等，老外们真的是一堆一堆的，很有视觉冲击，一个这么东方的地方居然遍地是西方人。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax4.sinaimg.cn/large/006YHUzUgy1gacw55izivj31r70zkwwt.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>下图是夜晚的环剑湖，湖中间是<strong>玉山祠</strong>。红色的桥叫做<strong>栖旭桥</strong>，晚上非常漂亮。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax3.sinaimg.cn/large/006YHUzUgy1gacw3q0ep7j31r70zkgyh.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax2.sinaimg.cn/large/006YHUzUgy1gacw4ddwitj31r70zk7km.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>环剑湖再往东方向，靠近<strong>红河</strong>的位置，就是越南国家博物馆和军事博物馆，下面是国家博物馆，里面基本介绍古代越南的历史，有趣的是其和我国的历史有很多交集，有一部分（例如元朝）内容是被美化了，元朝的骑兵止于越南边境或许只是因为气候原因，总之必然不是越南军队顽强抵抗住元军的攻击，仔细想一下是根本不现实的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva3.sinaimg.cn/large/006YHUzUgy1gadal07gllj31r70zkax8.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>下面是越南的国家军事博物馆，军事博物馆和国家博物馆是合在一起卖票的，而且它俩就隔着一条街，军事博物馆基本是介绍近代越南建国的历史，这中间的越南共产党和中共的联系就更多了，有很多内容基本都是我们熟悉的风格。你甚至可以看到下图中那面党旗上的汉字（越南共产党）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax4.sinaimg.cn/large/006YHUzUgy1gadailzyc0j31r70zkaif.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>当然，十分微妙的是，关于上世纪中越之间的那场战争，并未出现在此，官方定调的越南近代的主轴仍然是在胡志明的领导下的反美抗争。对于其骚扰中国、亲美抗中等阶段，看不见任何记录。</p><h4 id="巴亭广场方向（Quang-Truong-Ba-Dinh）"><a href="#巴亭广场方向（Quang-Truong-Ba-Dinh）" class="headerlink" title="巴亭广场方向（Quảng Trường Ba Đình）"></a><strong>巴亭广场方向（Quảng Trường Ba Đình）</strong></h4><p>这片区域我觉得集中了大部分河内的行政单位，由于河内是首都，所以包括越南的国会等首都机关也在这一片区域，这附近还有有意思的越战纪念馆，里面有很多美军的飞机残骸，应该是宣扬越战时抗美成果的，时不时还可以看见河内的军人来参观。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva1.sinaimg.cn/large/006YHUzUgy1gacw6wntnzj31r70zkh3t.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax4.sinaimg.cn/large/006YHUzUgy1gad9o5w1dyj31r70zkkc0.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>关于巴亭广场，其实和天安门广场的结构和作用是类似的，只不过胡志明的陵墓成了绝对的主题，是整个广场的核心，而且广场大部分是草坪，不是石板，其对面就是越南的国会。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva2.sinaimg.cn/large/006YHUzUgy1gacw787nbyj31r70zkgyk.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="圣若瑟主教座堂附近"><a href="#圣若瑟主教座堂附近" class="headerlink" title="圣若瑟主教座堂附近"></a><strong>圣若瑟主教座堂附近</strong></h4><p>这部分其实在我们下榻的酒店和环剑湖之间偏下的位置，虽然也可以算商业区，但不同的是这里当地人更多一些，在这里你能发现更多的越南人生活的真实情况。</p><p>下面是当时东南亚足球锦标赛、越南国家队踢比赛的那晚，年轻球迷们在当街宣传越南队和发放头绳，好像是和菲律宾踢，虽然是区域性的足球赛，但那天晚上真的是整个街区都沸腾了，晚上更是到一两点还是喧闹的气氛。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva3.sinaimg.cn/large/006YHUzUgy1gacwcabehej31r70zkh2l.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>甚至可以看见在街头下棋的越南人，没错，这就是中国象棋，在当地还是很受欢迎的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax1.sinaimg.cn/large/006YHUzUgy1gacw8hs8d7j31r70zk7i0.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>而圣若瑟主教堂，作为非常有名的打卡地点，基本上百分百能在门口遇见来自中国的旅行团。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tva2.sinaimg.cn/large/006YHUzUgy1gacwd2iw8aj31r70zk1aa.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="統一公園方向（Cong-Vien-Thong-Nhat）"><a href="#統一公園方向（Cong-Vien-Thong-Nhat）" class="headerlink" title="統一公園方向（Công Viên Thống Nhất）"></a><strong>統一公園方向（Công Viên Thống Nhất）</strong></h4><p>这部分在南边方向，非常靠近雅思的考点，人口密度显然没有商业区那么密集，最好玩的就属<strong>统一公园</strong>了，这个公园本身是个长方形的湖加周围一圈的绿植组成的，转一圈估计要一个点，是非常大的。不过在体验到了河内街头的摩托车大军的喧嚣之后，就会知道这里的安静是多么难能可贵了、</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax3.sinaimg.cn/large/006YHUzUgy1gad5jds6pnj31r70zkk7e.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>摩托车大军。如果说荷兰是自行车王国，那么我真的想说越南是摩托车王国了，一到下班的时间点，嘟嘟嘟的摩托车声音真的是要把耳朵震聋了，而且在河内，Grab打车软件可以打到摩的，且可以看到绿色衣服的摩的数量是非常多的。</p><p>另外很特别的是，越南人骑摩托车非常有安全意识，一个质量好的头盔是必备的。基本人人都自觉地佩戴安全头盔。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax4.sinaimg.cn/large/006YHUzUgy1gacwexcfc3j31r70zktof.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="返回北京"><a href="#返回北京" class="headerlink" title="返回北京"></a><strong>返回北京</strong></h4><p>往回走的时候呢，着实被打的滴滴（Grab）坑了一下，在下图的桥上，司机开着车轮胎竟然被爆了，无奈只好下来徒手换轮胎，我这赶着去坐飞机呢，那里还在换轮胎，无语了，这座桥应该算河内数一数二的大桥了，下面就是<strong>红河</strong>，总之耽误了我大概快一个小时。到机场的时候差点没赶上飞机，还是我在拿票的时候求助了国航的工作人员，他们带着我走了快速通道才赶上的，还有幸做了一次机场里的摆渡车。总之要吐槽一下河内机场的安检效率着实太低了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax4.sinaimg.cn/large/006YHUzUgy1gadaaapx1yj31r70zk46l.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><p>回到北京后的那天早上。回程的时间比较蛋疼，时间是在凌晨，十二点从河内飞往澳门，然后等到早上五点飞北京，基本上那天是没怎么睡觉，还要等到晚上才能做卧铺回学校。就在北京溜达了一下，还去了CBD万达看了《海王》，简直不要太开心。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://tvax1.sinaimg.cn/large/006YHUzUgy1gad0c5xo2lj31r70zkk63.jpg" alt="此处为本页面内的一张图片">                </div>                <div class="image-caption"></div>            </figure><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a><strong>后记</strong></h4><p>现在时间是 2019 年的 12 月了，距离这次美妙的旅途已经整整一年了，但一些事情仿佛还历历在目，真的像发生在昨天一样。那时的我偶尔也会幻想有一天自己的努力能换来回报，自己的尝试会有个好结果。那时候，光是这样想一下都觉得非常梦幻，感觉那是遥不可及的梦。不过人的心态是会随境遇不同而变化的，18年暑假开始学雅思的时候，自己连对过雅思都没有信心，第一次考试的结果也确实印证了我的担心，然后就是快两个月的自习室学英语，在临近毕业之际，众人皆找工作之时，我却在教室里看着枯燥的英语，做着不切实际的梦，现在想想，真的很佩服自己下决心的勇气。</p><p>从越南回来，到次年的一月，我才拿到了这次的成绩，因为是连考两次，所以分两天出成绩，第一次的分数出来时一看两个5.5，心里一下子就凉了半截。至于第二次的分数，我至今还记得查分的场景，那天是我们师门最后的一次聚餐，师弟们都参加的那种，我在校门口等着打车，结果收到了出分的消息，结果一查，只有口语5.5，其他都满足了，当时心情肯定是失落的，那天的聚会基本上就没这么说话，回到宿舍就给代理发消息，复议我的口语，当时心情是忐忑的，之前同行的那两位都拿到了自己想要的分数，而我还要等，等待对我来说已经是家常便饭了，终于等到了今年一月十五号，该给我发邮件说复议成功，结果是我所期望的，终于在春节回家前长舒了一口气，我记得那几天是真的高兴，恨不得第二天就回家等着过年。</p><p>那时我的心态稍稍好了一些，感觉着自己的短板被治好了，自己可以以一个各方面都合格的申请者申请CSC了，同事也感觉到那个梦越来越多真实了。这种感觉是一种质的变化，从胆战心惊的条件基本满足，到后来的条件完全满足，虽然对申请结果可能没什么影响，但对自己的心态影响是巨大的：从我有了英语成绩，感觉填系统填的也理直气壮，各种材料也准备的很顺利，提交完申请的那一刻，没任何感觉，只觉得就这样了，应该可以了吧。事实上当时也没有给自己找所谓的“后路”（尝试找过但不了了之），只想着成了就成了，至于不成的事，基本没想过。现在想想，其实也没什么感觉。不喜欢做预案、不喜欢PlanB可能就是我的性格了。</p><p>现在，先前的终极目标已经实现，我也体会到了理想变为现实的美好。从去年八月到今年六月，十个月的时间，我觉得非常好的诠释了什么是“延迟满足”，也让我更坚信了”有付出就有回报”这句话的正确性（但有多少付出并不一定就有多少回报）。</p><p>总之，这次旅途，非常非常的难忘且意义重大。一个是增长了见识，有了初步的国外生存经验；另一个是目标达成，拿到了成绩；最后就是增强了自己的信心，让自己在接下去的日子里坚定地熬下去，从而成就了今天的自己。每次想到考雅思这段记忆，我就想到“盘活”这个词，这就像一步棋，一步盘活死局的棋，下完之后，我不知道能不能赢的漂亮，但我知道一定不会输的难看。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此内容系回忆内容，归属于RMBATS列表。&lt;/p&gt;
&lt;p&gt;事件主题是2018年12月 8 号 到 13 号的一次短暂的出国旅行。这是我第一次出国，第一次长途跋涉这么远，第一次… 体验了很多的第一次，自然印象深刻，现在趁着还记得拎出来晒一晒，免得记忆发了酶。&lt;/p&gt;
&lt;p&gt;这次去的是&lt;strong&gt;越南的首都河内&lt;/strong&gt;，主要目的是去考雅思的，从下决心到出发时间也就一个月，非常紧张，好在越南可以落地签，所以只要有护照就简单的多了。虽然着了一条龙的服务，但那人没给我弄好，导致我原本可以提前落地签办完的结果没办完，让我自己体验了一把怎么办落地签的流程，怎么说呢，由于是凌晨到达的，而且河内时间比北京时间慢一小时，所以最后到达酒店的时间也就差不多还是凌晨。&lt;/p&gt;
    
    </summary>
    
      <category term="Daily_Life" scheme="https://old.cz5h.com/categories/Daily-Life/"/>
    
    
      <category term="总结" scheme="https://old.cz5h.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="旅行" scheme="https://old.cz5h.com/tags/%E6%97%85%E8%A1%8C/"/>
    
      <category term="回忆" scheme="https://old.cz5h.com/tags/%E5%9B%9E%E5%BF%86/"/>
    
      <category term="雅思" scheme="https://old.cz5h.com/tags/%E9%9B%85%E6%80%9D/"/>
    
  </entry>
  
</feed>
